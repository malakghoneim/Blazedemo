/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 167.0, "minX": 0.0, "maxY": 11129.0, "series": [{"data": [[0.0, 168.0], [0.1, 169.0], [0.2, 171.0], [0.3, 171.0], [0.4, 172.0], [0.5, 173.0], [0.6, 173.0], [0.7, 174.0], [0.8, 176.0], [0.9, 176.0], [1.0, 177.0], [1.1, 177.0], [1.2, 177.0], [1.3, 178.0], [1.4, 179.0], [1.5, 180.0], [1.6, 182.0], [1.7, 183.0], [1.8, 186.0], [1.9, 187.0], [2.0, 189.0], [2.1, 190.0], [2.2, 194.0], [2.3, 206.0], [2.4, 233.0], [2.5, 246.0], [2.6, 259.0], [2.7, 262.0], [2.8, 267.0], [2.9, 269.0], [3.0, 270.0], [3.1, 271.0], [3.2, 271.0], [3.3, 272.0], [3.4, 273.0], [3.5, 274.0], [3.6, 274.0], [3.7, 274.0], [3.8, 275.0], [3.9, 275.0], [4.0, 275.0], [4.1, 276.0], [4.2, 276.0], [4.3, 277.0], [4.4, 277.0], [4.5, 278.0], [4.6, 278.0], [4.7, 278.0], [4.8, 279.0], [4.9, 279.0], [5.0, 279.0], [5.1, 279.0], [5.2, 280.0], [5.3, 280.0], [5.4, 280.0], [5.5, 281.0], [5.6, 281.0], [5.7, 281.0], [5.8, 281.0], [5.9, 281.0], [6.0, 281.0], [6.1, 282.0], [6.2, 282.0], [6.3, 282.0], [6.4, 282.0], [6.5, 282.0], [6.6, 283.0], [6.7, 283.0], [6.8, 283.0], [6.9, 283.0], [7.0, 283.0], [7.1, 284.0], [7.2, 284.0], [7.3, 284.0], [7.4, 284.0], [7.5, 284.0], [7.6, 285.0], [7.7, 285.0], [7.8, 285.0], [7.9, 285.0], [8.0, 286.0], [8.1, 286.0], [8.2, 286.0], [8.3, 287.0], [8.4, 287.0], [8.5, 287.0], [8.6, 288.0], [8.7, 288.0], [8.8, 288.0], [8.9, 288.0], [9.0, 289.0], [9.1, 289.0], [9.2, 289.0], [9.3, 289.0], [9.4, 289.0], [9.5, 290.0], [9.6, 290.0], [9.7, 290.0], [9.8, 290.0], [9.9, 290.0], [10.0, 290.0], [10.1, 291.0], [10.2, 291.0], [10.3, 291.0], [10.4, 292.0], [10.5, 292.0], [10.6, 292.0], [10.7, 292.0], [10.8, 292.0], [10.9, 293.0], [11.0, 293.0], [11.1, 293.0], [11.2, 293.0], [11.3, 293.0], [11.4, 294.0], [11.5, 294.0], [11.6, 294.0], [11.7, 295.0], [11.8, 295.0], [11.9, 295.0], [12.0, 295.0], [12.1, 295.0], [12.2, 295.0], [12.3, 295.0], [12.4, 296.0], [12.5, 296.0], [12.6, 296.0], [12.7, 296.0], [12.8, 296.0], [12.9, 296.0], [13.0, 297.0], [13.1, 297.0], [13.2, 297.0], [13.3, 297.0], [13.4, 297.0], [13.5, 297.0], [13.6, 298.0], [13.7, 298.0], [13.8, 298.0], [13.9, 298.0], [14.0, 298.0], [14.1, 298.0], [14.2, 298.0], [14.3, 298.0], [14.4, 299.0], [14.5, 299.0], [14.6, 299.0], [14.7, 300.0], [14.8, 300.0], [14.9, 300.0], [15.0, 300.0], [15.1, 300.0], [15.2, 301.0], [15.3, 301.0], [15.4, 301.0], [15.5, 301.0], [15.6, 301.0], [15.7, 301.0], [15.8, 302.0], [15.9, 302.0], [16.0, 302.0], [16.1, 302.0], [16.2, 302.0], [16.3, 303.0], [16.4, 303.0], [16.5, 303.0], [16.6, 303.0], [16.7, 303.0], [16.8, 303.0], [16.9, 303.0], [17.0, 304.0], [17.1, 304.0], [17.2, 304.0], [17.3, 304.0], [17.4, 304.0], [17.5, 304.0], [17.6, 304.0], [17.7, 304.0], [17.8, 304.0], [17.9, 304.0], [18.0, 305.0], [18.1, 305.0], [18.2, 305.0], [18.3, 305.0], [18.4, 306.0], [18.5, 306.0], [18.6, 306.0], [18.7, 306.0], [18.8, 306.0], [18.9, 306.0], [19.0, 306.0], [19.1, 307.0], [19.2, 307.0], [19.3, 307.0], [19.4, 307.0], [19.5, 307.0], [19.6, 308.0], [19.7, 308.0], [19.8, 308.0], [19.9, 308.0], [20.0, 308.0], [20.1, 308.0], [20.2, 308.0], [20.3, 308.0], [20.4, 309.0], [20.5, 309.0], [20.6, 309.0], [20.7, 309.0], [20.8, 310.0], [20.9, 310.0], [21.0, 310.0], [21.1, 310.0], [21.2, 310.0], [21.3, 310.0], [21.4, 310.0], [21.5, 310.0], [21.6, 311.0], [21.7, 311.0], [21.8, 311.0], [21.9, 311.0], [22.0, 311.0], [22.1, 312.0], [22.2, 312.0], [22.3, 312.0], [22.4, 312.0], [22.5, 313.0], [22.6, 313.0], [22.7, 313.0], [22.8, 313.0], [22.9, 313.0], [23.0, 313.0], [23.1, 313.0], [23.2, 314.0], [23.3, 314.0], [23.4, 314.0], [23.5, 314.0], [23.6, 314.0], [23.7, 315.0], [23.8, 315.0], [23.9, 315.0], [24.0, 315.0], [24.1, 315.0], [24.2, 316.0], [24.3, 316.0], [24.4, 316.0], [24.5, 316.0], [24.6, 316.0], [24.7, 317.0], [24.8, 317.0], [24.9, 317.0], [25.0, 317.0], [25.1, 318.0], [25.2, 318.0], [25.3, 318.0], [25.4, 318.0], [25.5, 318.0], [25.6, 318.0], [25.7, 319.0], [25.8, 319.0], [25.9, 319.0], [26.0, 319.0], [26.1, 319.0], [26.2, 319.0], [26.3, 320.0], [26.4, 320.0], [26.5, 320.0], [26.6, 320.0], [26.7, 320.0], [26.8, 321.0], [26.9, 321.0], [27.0, 321.0], [27.1, 321.0], [27.2, 322.0], [27.3, 322.0], [27.4, 322.0], [27.5, 322.0], [27.6, 322.0], [27.7, 323.0], [27.8, 323.0], [27.9, 323.0], [28.0, 324.0], [28.1, 324.0], [28.2, 324.0], [28.3, 324.0], [28.4, 324.0], [28.5, 324.0], [28.6, 325.0], [28.7, 325.0], [28.8, 325.0], [28.9, 325.0], [29.0, 325.0], [29.1, 325.0], [29.2, 325.0], [29.3, 326.0], [29.4, 326.0], [29.5, 326.0], [29.6, 326.0], [29.7, 327.0], [29.8, 327.0], [29.9, 327.0], [30.0, 327.0], [30.1, 327.0], [30.2, 327.0], [30.3, 327.0], [30.4, 328.0], [30.5, 328.0], [30.6, 328.0], [30.7, 328.0], [30.8, 329.0], [30.9, 329.0], [31.0, 329.0], [31.1, 329.0], [31.2, 329.0], [31.3, 330.0], [31.4, 330.0], [31.5, 330.0], [31.6, 330.0], [31.7, 330.0], [31.8, 331.0], [31.9, 331.0], [32.0, 331.0], [32.1, 331.0], [32.2, 331.0], [32.3, 331.0], [32.4, 331.0], [32.5, 332.0], [32.6, 332.0], [32.7, 332.0], [32.8, 332.0], [32.9, 332.0], [33.0, 332.0], [33.1, 333.0], [33.2, 333.0], [33.3, 333.0], [33.4, 334.0], [33.5, 334.0], [33.6, 334.0], [33.7, 334.0], [33.8, 334.0], [33.9, 335.0], [34.0, 335.0], [34.1, 335.0], [34.2, 335.0], [34.3, 335.0], [34.4, 335.0], [34.5, 336.0], [34.6, 336.0], [34.7, 336.0], [34.8, 336.0], [34.9, 337.0], [35.0, 337.0], [35.1, 337.0], [35.2, 337.0], [35.3, 338.0], [35.4, 338.0], [35.5, 338.0], [35.6, 338.0], [35.7, 338.0], [35.8, 339.0], [35.9, 339.0], [36.0, 339.0], [36.1, 340.0], [36.2, 340.0], [36.3, 340.0], [36.4, 340.0], [36.5, 341.0], [36.6, 341.0], [36.7, 341.0], [36.8, 342.0], [36.9, 342.0], [37.0, 342.0], [37.1, 343.0], [37.2, 343.0], [37.3, 343.0], [37.4, 343.0], [37.5, 343.0], [37.6, 344.0], [37.7, 344.0], [37.8, 344.0], [37.9, 345.0], [38.0, 345.0], [38.1, 345.0], [38.2, 345.0], [38.3, 345.0], [38.4, 346.0], [38.5, 346.0], [38.6, 346.0], [38.7, 347.0], [38.8, 347.0], [38.9, 347.0], [39.0, 347.0], [39.1, 347.0], [39.2, 348.0], [39.3, 348.0], [39.4, 348.0], [39.5, 348.0], [39.6, 348.0], [39.7, 349.0], [39.8, 349.0], [39.9, 349.0], [40.0, 349.0], [40.1, 349.0], [40.2, 350.0], [40.3, 350.0], [40.4, 350.0], [40.5, 350.0], [40.6, 351.0], [40.7, 351.0], [40.8, 351.0], [40.9, 352.0], [41.0, 352.0], [41.1, 352.0], [41.2, 352.0], [41.3, 352.0], [41.4, 353.0], [41.5, 353.0], [41.6, 353.0], [41.7, 354.0], [41.8, 354.0], [41.9, 354.0], [42.0, 354.0], [42.1, 355.0], [42.2, 355.0], [42.3, 355.0], [42.4, 355.0], [42.5, 356.0], [42.6, 356.0], [42.7, 356.0], [42.8, 356.0], [42.9, 356.0], [43.0, 357.0], [43.1, 357.0], [43.2, 357.0], [43.3, 357.0], [43.4, 358.0], [43.5, 358.0], [43.6, 358.0], [43.7, 358.0], [43.8, 359.0], [43.9, 359.0], [44.0, 359.0], [44.1, 359.0], [44.2, 359.0], [44.3, 359.0], [44.4, 360.0], [44.5, 360.0], [44.6, 360.0], [44.7, 360.0], [44.8, 360.0], [44.9, 361.0], [45.0, 361.0], [45.1, 361.0], [45.2, 361.0], [45.3, 362.0], [45.4, 362.0], [45.5, 362.0], [45.6, 363.0], [45.7, 363.0], [45.8, 363.0], [45.9, 364.0], [46.0, 364.0], [46.1, 364.0], [46.2, 364.0], [46.3, 364.0], [46.4, 365.0], [46.5, 365.0], [46.6, 365.0], [46.7, 365.0], [46.8, 366.0], [46.9, 366.0], [47.0, 366.0], [47.1, 366.0], [47.2, 367.0], [47.3, 367.0], [47.4, 367.0], [47.5, 367.0], [47.6, 367.0], [47.7, 368.0], [47.8, 368.0], [47.9, 368.0], [48.0, 369.0], [48.1, 369.0], [48.2, 369.0], [48.3, 369.0], [48.4, 370.0], [48.5, 370.0], [48.6, 370.0], [48.7, 370.0], [48.8, 371.0], [48.9, 371.0], [49.0, 371.0], [49.1, 372.0], [49.2, 372.0], [49.3, 372.0], [49.4, 372.0], [49.5, 372.0], [49.6, 372.0], [49.7, 373.0], [49.8, 373.0], [49.9, 373.0], [50.0, 373.0], [50.1, 374.0], [50.2, 374.0], [50.3, 375.0], [50.4, 375.0], [50.5, 375.0], [50.6, 376.0], [50.7, 376.0], [50.8, 376.0], [50.9, 377.0], [51.0, 377.0], [51.1, 378.0], [51.2, 378.0], [51.3, 379.0], [51.4, 379.0], [51.5, 379.0], [51.6, 380.0], [51.7, 380.0], [51.8, 380.0], [51.9, 380.0], [52.0, 381.0], [52.1, 381.0], [52.2, 381.0], [52.3, 382.0], [52.4, 382.0], [52.5, 382.0], [52.6, 383.0], [52.7, 383.0], [52.8, 383.0], [52.9, 384.0], [53.0, 384.0], [53.1, 384.0], [53.2, 384.0], [53.3, 385.0], [53.4, 385.0], [53.5, 385.0], [53.6, 385.0], [53.7, 385.0], [53.8, 385.0], [53.9, 386.0], [54.0, 386.0], [54.1, 387.0], [54.2, 387.0], [54.3, 387.0], [54.4, 387.0], [54.5, 387.0], [54.6, 388.0], [54.7, 388.0], [54.8, 389.0], [54.9, 389.0], [55.0, 389.0], [55.1, 390.0], [55.2, 390.0], [55.3, 390.0], [55.4, 390.0], [55.5, 391.0], [55.6, 392.0], [55.7, 392.0], [55.8, 392.0], [55.9, 392.0], [56.0, 393.0], [56.1, 393.0], [56.2, 393.0], [56.3, 394.0], [56.4, 394.0], [56.5, 395.0], [56.6, 395.0], [56.7, 395.0], [56.8, 396.0], [56.9, 397.0], [57.0, 397.0], [57.1, 398.0], [57.2, 399.0], [57.3, 400.0], [57.4, 400.0], [57.5, 401.0], [57.6, 401.0], [57.7, 402.0], [57.8, 402.0], [57.9, 403.0], [58.0, 403.0], [58.1, 404.0], [58.2, 404.0], [58.3, 404.0], [58.4, 405.0], [58.5, 406.0], [58.6, 406.0], [58.7, 407.0], [58.8, 408.0], [58.9, 408.0], [59.0, 409.0], [59.1, 409.0], [59.2, 409.0], [59.3, 410.0], [59.4, 410.0], [59.5, 411.0], [59.6, 411.0], [59.7, 412.0], [59.8, 412.0], [59.9, 413.0], [60.0, 414.0], [60.1, 414.0], [60.2, 415.0], [60.3, 415.0], [60.4, 416.0], [60.5, 416.0], [60.6, 417.0], [60.7, 417.0], [60.8, 418.0], [60.9, 418.0], [61.0, 419.0], [61.1, 419.0], [61.2, 420.0], [61.3, 420.0], [61.4, 421.0], [61.5, 422.0], [61.6, 422.0], [61.7, 422.0], [61.8, 422.0], [61.9, 423.0], [62.0, 424.0], [62.1, 424.0], [62.2, 424.0], [62.3, 425.0], [62.4, 425.0], [62.5, 426.0], [62.6, 426.0], [62.7, 427.0], [62.8, 427.0], [62.9, 428.0], [63.0, 428.0], [63.1, 428.0], [63.2, 429.0], [63.3, 430.0], [63.4, 430.0], [63.5, 430.0], [63.6, 430.0], [63.7, 431.0], [63.8, 431.0], [63.9, 432.0], [64.0, 432.0], [64.1, 433.0], [64.2, 434.0], [64.3, 435.0], [64.4, 436.0], [64.5, 436.0], [64.6, 437.0], [64.7, 437.0], [64.8, 438.0], [64.9, 438.0], [65.0, 439.0], [65.1, 440.0], [65.2, 440.0], [65.3, 441.0], [65.4, 441.0], [65.5, 442.0], [65.6, 443.0], [65.7, 443.0], [65.8, 444.0], [65.9, 445.0], [66.0, 445.0], [66.1, 446.0], [66.2, 446.0], [66.3, 447.0], [66.4, 448.0], [66.5, 448.0], [66.6, 449.0], [66.7, 450.0], [66.8, 451.0], [66.9, 451.0], [67.0, 452.0], [67.1, 452.0], [67.2, 453.0], [67.3, 453.0], [67.4, 454.0], [67.5, 455.0], [67.6, 455.0], [67.7, 456.0], [67.8, 456.0], [67.9, 458.0], [68.0, 458.0], [68.1, 459.0], [68.2, 460.0], [68.3, 461.0], [68.4, 462.0], [68.5, 463.0], [68.6, 464.0], [68.7, 465.0], [68.8, 465.0], [68.9, 466.0], [69.0, 466.0], [69.1, 467.0], [69.2, 468.0], [69.3, 468.0], [69.4, 469.0], [69.5, 470.0], [69.6, 471.0], [69.7, 473.0], [69.8, 473.0], [69.9, 475.0], [70.0, 476.0], [70.1, 477.0], [70.2, 478.0], [70.3, 479.0], [70.4, 482.0], [70.5, 482.0], [70.6, 483.0], [70.7, 484.0], [70.8, 485.0], [70.9, 486.0], [71.0, 487.0], [71.1, 488.0], [71.2, 488.0], [71.3, 489.0], [71.4, 489.0], [71.5, 490.0], [71.6, 491.0], [71.7, 492.0], [71.8, 492.0], [71.9, 493.0], [72.0, 494.0], [72.1, 494.0], [72.2, 495.0], [72.3, 496.0], [72.4, 499.0], [72.5, 499.0], [72.6, 500.0], [72.7, 501.0], [72.8, 502.0], [72.9, 504.0], [73.0, 506.0], [73.1, 507.0], [73.2, 509.0], [73.3, 510.0], [73.4, 511.0], [73.5, 514.0], [73.6, 516.0], [73.7, 518.0], [73.8, 522.0], [73.9, 525.0], [74.0, 529.0], [74.1, 530.0], [74.2, 531.0], [74.3, 533.0], [74.4, 534.0], [74.5, 536.0], [74.6, 538.0], [74.7, 540.0], [74.8, 542.0], [74.9, 543.0], [75.0, 544.0], [75.1, 545.0], [75.2, 546.0], [75.3, 547.0], [75.4, 550.0], [75.5, 552.0], [75.6, 554.0], [75.7, 554.0], [75.8, 555.0], [75.9, 557.0], [76.0, 561.0], [76.1, 564.0], [76.2, 566.0], [76.3, 568.0], [76.4, 570.0], [76.5, 573.0], [76.6, 579.0], [76.7, 582.0], [76.8, 584.0], [76.9, 591.0], [77.0, 597.0], [77.1, 598.0], [77.2, 605.0], [77.3, 608.0], [77.4, 612.0], [77.5, 618.0], [77.6, 621.0], [77.7, 629.0], [77.8, 633.0], [77.9, 635.0], [78.0, 637.0], [78.1, 640.0], [78.2, 649.0], [78.3, 670.0], [78.4, 676.0], [78.5, 679.0], [78.6, 685.0], [78.7, 692.0], [78.8, 702.0], [78.9, 705.0], [79.0, 727.0], [79.1, 739.0], [79.2, 761.0], [79.3, 771.0], [79.4, 793.0], [79.5, 826.0], [79.6, 847.0], [79.7, 879.0], [79.8, 1004.0], [79.9, 1044.0], [80.0, 1156.0], [80.1, 1287.0], [80.2, 1552.0], [80.3, 1862.0], [80.4, 1953.0], [80.5, 2683.0], [80.6, 2971.0], [80.7, 3224.0], [80.8, 3259.0], [80.9, 3372.0], [81.0, 3468.0], [81.1, 3587.0], [81.2, 3696.0], [81.3, 3826.0], [81.4, 3980.0], [81.5, 4014.0], [81.6, 4058.0], [81.7, 4139.0], [81.8, 4232.0], [81.9, 4267.0], [82.0, 4531.0], [82.1, 4600.0], [82.2, 4707.0], [82.3, 4958.0], [82.4, 5012.0], [82.5, 5204.0], [82.6, 5306.0], [82.7, 5337.0], [82.8, 5365.0], [82.9, 5414.0], [83.0, 5492.0], [83.1, 5577.0], [83.2, 5626.0], [83.3, 5734.0], [83.4, 5770.0], [83.5, 5827.0], [83.6, 5898.0], [83.7, 5958.0], [83.8, 6017.0], [83.9, 6047.0], [84.0, 6085.0], [84.1, 6166.0], [84.2, 6256.0], [84.3, 6366.0], [84.4, 6402.0], [84.5, 6422.0], [84.6, 6449.0], [84.7, 6519.0], [84.8, 6533.0], [84.9, 6589.0], [85.0, 6655.0], [85.1, 6668.0], [85.2, 6694.0], [85.3, 6704.0], [85.4, 6732.0], [85.5, 6749.0], [85.6, 6777.0], [85.7, 6817.0], [85.8, 6841.0], [85.9, 6849.0], [86.0, 6886.0], [86.1, 6920.0], [86.2, 6969.0], [86.3, 7045.0], [86.4, 7100.0], [86.5, 7156.0], [86.6, 7197.0], [86.7, 7232.0], [86.8, 7289.0], [86.9, 7298.0], [87.0, 7314.0], [87.1, 7344.0], [87.2, 7384.0], [87.3, 7413.0], [87.4, 7440.0], [87.5, 7501.0], [87.6, 7552.0], [87.7, 7574.0], [87.8, 7622.0], [87.9, 7699.0], [88.0, 7720.0], [88.1, 7747.0], [88.2, 7809.0], [88.3, 7833.0], [88.4, 7892.0], [88.5, 7932.0], [88.6, 7995.0], [88.7, 8094.0], [88.8, 8130.0], [88.9, 8243.0], [89.0, 8318.0], [89.1, 8370.0], [89.2, 8388.0], [89.3, 8450.0], [89.4, 8464.0], [89.5, 8488.0], [89.6, 8498.0], [89.7, 8535.0], [89.8, 8586.0], [89.9, 8658.0], [90.0, 8673.0], [90.1, 8748.0], [90.2, 8802.0], [90.3, 8824.0], [90.4, 8837.0], [90.5, 8890.0], [90.6, 8940.0], [90.7, 8974.0], [90.8, 9033.0], [90.9, 9088.0], [91.0, 9109.0], [91.1, 9178.0], [91.2, 9197.0], [91.3, 9230.0], [91.4, 9244.0], [91.5, 9300.0], [91.6, 9324.0], [91.7, 9366.0], [91.8, 9399.0], [91.9, 9430.0], [92.0, 9434.0], [92.1, 9467.0], [92.2, 9495.0], [92.3, 9506.0], [92.4, 9524.0], [92.5, 9562.0], [92.6, 9570.0], [92.7, 9588.0], [92.8, 9600.0], [92.9, 9645.0], [93.0, 9660.0], [93.1, 9675.0], [93.2, 9714.0], [93.3, 9726.0], [93.4, 9766.0], [93.5, 9781.0], [93.6, 9796.0], [93.7, 9808.0], [93.8, 9833.0], [93.9, 9846.0], [94.0, 9862.0], [94.1, 9892.0], [94.2, 9905.0], [94.3, 9921.0], [94.4, 9934.0], [94.5, 9941.0], [94.6, 9950.0], [94.7, 9955.0], [94.8, 9992.0], [94.9, 10005.0], [95.0, 10011.0], [95.1, 10036.0], [95.2, 10041.0], [95.3, 10074.0], [95.4, 10080.0], [95.5, 10090.0], [95.6, 10106.0], [95.7, 10120.0], [95.8, 10128.0], [95.9, 10142.0], [96.0, 10148.0], [96.1, 10160.0], [96.2, 10180.0], [96.3, 10188.0], [96.4, 10202.0], [96.5, 10218.0], [96.6, 10221.0], [96.7, 10227.0], [96.8, 10234.0], [96.9, 10240.0], [97.0, 10252.0], [97.1, 10257.0], [97.2, 10267.0], [97.3, 10273.0], [97.4, 10276.0], [97.5, 10281.0], [97.6, 10287.0], [97.7, 10295.0], [97.8, 10305.0], [97.9, 10308.0], [98.0, 10313.0], [98.1, 10315.0], [98.2, 10319.0], [98.3, 10324.0], [98.4, 10331.0], [98.5, 10335.0], [98.6, 10341.0], [98.7, 10343.0], [98.8, 10357.0], [98.9, 10372.0], [99.0, 10375.0], [99.1, 10384.0], [99.2, 10391.0], [99.3, 10400.0], [99.4, 10416.0], [99.5, 10419.0], [99.6, 10436.0], [99.7, 10471.0], [99.8, 10483.0], [99.9, 10551.0], [100.0, 10658.0]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313", "isController": false}, {"data": [[0.0, 167.0], [0.1, 169.0], [0.2, 170.0], [0.3, 171.0], [0.4, 171.0], [0.5, 172.0], [0.6, 172.0], [0.7, 173.0], [0.8, 173.0], [0.9, 174.0], [1.0, 175.0], [1.1, 175.0], [1.2, 176.0], [1.3, 176.0], [1.4, 177.0], [1.5, 177.0], [1.6, 178.0], [1.7, 179.0], [1.8, 180.0], [1.9, 180.0], [2.0, 182.0], [2.1, 183.0], [2.2, 183.0], [2.3, 185.0], [2.4, 189.0], [2.5, 191.0], [2.6, 193.0], [2.7, 198.0], [2.8, 211.0], [2.9, 215.0], [3.0, 240.0], [3.1, 256.0], [3.2, 262.0], [3.3, 266.0], [3.4, 268.0], [3.5, 270.0], [3.6, 270.0], [3.7, 271.0], [3.8, 271.0], [3.9, 272.0], [4.0, 273.0], [4.1, 274.0], [4.2, 274.0], [4.3, 275.0], [4.4, 275.0], [4.5, 275.0], [4.6, 275.0], [4.7, 276.0], [4.8, 276.0], [4.9, 277.0], [5.0, 277.0], [5.1, 277.0], [5.2, 277.0], [5.3, 278.0], [5.4, 278.0], [5.5, 278.0], [5.6, 278.0], [5.7, 279.0], [5.8, 279.0], [5.9, 279.0], [6.0, 280.0], [6.1, 280.0], [6.2, 281.0], [6.3, 281.0], [6.4, 281.0], [6.5, 282.0], [6.6, 282.0], [6.7, 282.0], [6.8, 282.0], [6.9, 282.0], [7.0, 283.0], [7.1, 283.0], [7.2, 283.0], [7.3, 283.0], [7.4, 283.0], [7.5, 284.0], [7.6, 284.0], [7.7, 284.0], [7.8, 284.0], [7.9, 284.0], [8.0, 285.0], [8.1, 285.0], [8.2, 285.0], [8.3, 285.0], [8.4, 285.0], [8.5, 285.0], [8.6, 285.0], [8.7, 286.0], [8.8, 286.0], [8.9, 286.0], [9.0, 286.0], [9.1, 286.0], [9.2, 287.0], [9.3, 287.0], [9.4, 287.0], [9.5, 287.0], [9.6, 287.0], [9.7, 287.0], [9.8, 288.0], [9.9, 288.0], [10.0, 288.0], [10.1, 288.0], [10.2, 288.0], [10.3, 289.0], [10.4, 289.0], [10.5, 289.0], [10.6, 289.0], [10.7, 289.0], [10.8, 289.0], [10.9, 290.0], [11.0, 290.0], [11.1, 290.0], [11.2, 290.0], [11.3, 290.0], [11.4, 291.0], [11.5, 291.0], [11.6, 291.0], [11.7, 292.0], [11.8, 292.0], [11.9, 292.0], [12.0, 292.0], [12.1, 292.0], [12.2, 292.0], [12.3, 293.0], [12.4, 293.0], [12.5, 293.0], [12.6, 293.0], [12.7, 293.0], [12.8, 293.0], [12.9, 294.0], [13.0, 294.0], [13.1, 294.0], [13.2, 294.0], [13.3, 294.0], [13.4, 295.0], [13.5, 295.0], [13.6, 295.0], [13.7, 295.0], [13.8, 295.0], [13.9, 295.0], [14.0, 296.0], [14.1, 296.0], [14.2, 296.0], [14.3, 296.0], [14.4, 296.0], [14.5, 296.0], [14.6, 297.0], [14.7, 297.0], [14.8, 297.0], [14.9, 297.0], [15.0, 297.0], [15.1, 297.0], [15.2, 297.0], [15.3, 298.0], [15.4, 298.0], [15.5, 298.0], [15.6, 298.0], [15.7, 298.0], [15.8, 298.0], [15.9, 298.0], [16.0, 298.0], [16.1, 299.0], [16.2, 299.0], [16.3, 299.0], [16.4, 299.0], [16.5, 299.0], [16.6, 300.0], [16.7, 300.0], [16.8, 300.0], [16.9, 301.0], [17.0, 301.0], [17.1, 301.0], [17.2, 301.0], [17.3, 301.0], [17.4, 302.0], [17.5, 302.0], [17.6, 302.0], [17.7, 302.0], [17.8, 302.0], [17.9, 303.0], [18.0, 303.0], [18.1, 303.0], [18.2, 303.0], [18.3, 303.0], [18.4, 304.0], [18.5, 304.0], [18.6, 304.0], [18.7, 304.0], [18.8, 304.0], [18.9, 304.0], [19.0, 304.0], [19.1, 305.0], [19.2, 305.0], [19.3, 305.0], [19.4, 305.0], [19.5, 306.0], [19.6, 306.0], [19.7, 306.0], [19.8, 306.0], [19.9, 306.0], [20.0, 306.0], [20.1, 306.0], [20.2, 306.0], [20.3, 306.0], [20.4, 306.0], [20.5, 307.0], [20.6, 307.0], [20.7, 307.0], [20.8, 307.0], [20.9, 307.0], [21.0, 307.0], [21.1, 307.0], [21.2, 307.0], [21.3, 308.0], [21.4, 308.0], [21.5, 308.0], [21.6, 308.0], [21.7, 308.0], [21.8, 308.0], [21.9, 308.0], [22.0, 308.0], [22.1, 308.0], [22.2, 308.0], [22.3, 309.0], [22.4, 309.0], [22.5, 309.0], [22.6, 309.0], [22.7, 309.0], [22.8, 310.0], [22.9, 310.0], [23.0, 310.0], [23.1, 310.0], [23.2, 310.0], [23.3, 311.0], [23.4, 311.0], [23.5, 311.0], [23.6, 311.0], [23.7, 311.0], [23.8, 311.0], [23.9, 312.0], [24.0, 312.0], [24.1, 312.0], [24.2, 312.0], [24.3, 313.0], [24.4, 313.0], [24.5, 313.0], [24.6, 313.0], [24.7, 313.0], [24.8, 314.0], [24.9, 314.0], [25.0, 314.0], [25.1, 314.0], [25.2, 314.0], [25.3, 315.0], [25.4, 315.0], [25.5, 315.0], [25.6, 315.0], [25.7, 316.0], [25.8, 316.0], [25.9, 316.0], [26.0, 316.0], [26.1, 316.0], [26.2, 317.0], [26.3, 317.0], [26.4, 317.0], [26.5, 317.0], [26.6, 317.0], [26.7, 318.0], [26.8, 318.0], [26.9, 318.0], [27.0, 318.0], [27.1, 318.0], [27.2, 318.0], [27.3, 319.0], [27.4, 319.0], [27.5, 319.0], [27.6, 319.0], [27.7, 320.0], [27.8, 320.0], [27.9, 320.0], [28.0, 320.0], [28.1, 321.0], [28.2, 321.0], [28.3, 321.0], [28.4, 321.0], [28.5, 322.0], [28.6, 322.0], [28.7, 322.0], [28.8, 322.0], [28.9, 323.0], [29.0, 323.0], [29.1, 323.0], [29.2, 323.0], [29.3, 324.0], [29.4, 324.0], [29.5, 324.0], [29.6, 324.0], [29.7, 324.0], [29.8, 325.0], [29.9, 325.0], [30.0, 325.0], [30.1, 325.0], [30.2, 325.0], [30.3, 326.0], [30.4, 326.0], [30.5, 326.0], [30.6, 326.0], [30.7, 326.0], [30.8, 327.0], [30.9, 327.0], [31.0, 327.0], [31.1, 327.0], [31.2, 327.0], [31.3, 327.0], [31.4, 328.0], [31.5, 328.0], [31.6, 328.0], [31.7, 328.0], [31.8, 329.0], [31.9, 329.0], [32.0, 329.0], [32.1, 329.0], [32.2, 329.0], [32.3, 329.0], [32.4, 330.0], [32.5, 330.0], [32.6, 330.0], [32.7, 330.0], [32.8, 331.0], [32.9, 331.0], [33.0, 331.0], [33.1, 331.0], [33.2, 332.0], [33.3, 332.0], [33.4, 332.0], [33.5, 332.0], [33.6, 332.0], [33.7, 332.0], [33.8, 333.0], [33.9, 333.0], [34.0, 333.0], [34.1, 333.0], [34.2, 334.0], [34.3, 334.0], [34.4, 334.0], [34.5, 334.0], [34.6, 335.0], [34.7, 335.0], [34.8, 335.0], [34.9, 335.0], [35.0, 335.0], [35.1, 335.0], [35.2, 336.0], [35.3, 336.0], [35.4, 336.0], [35.5, 336.0], [35.6, 336.0], [35.7, 336.0], [35.8, 337.0], [35.9, 337.0], [36.0, 337.0], [36.1, 337.0], [36.2, 338.0], [36.3, 338.0], [36.4, 338.0], [36.5, 338.0], [36.6, 338.0], [36.7, 338.0], [36.8, 339.0], [36.9, 339.0], [37.0, 339.0], [37.1, 339.0], [37.2, 339.0], [37.3, 339.0], [37.4, 339.0], [37.5, 339.0], [37.6, 340.0], [37.7, 340.0], [37.8, 340.0], [37.9, 340.0], [38.0, 340.0], [38.1, 340.0], [38.2, 341.0], [38.3, 341.0], [38.4, 341.0], [38.5, 341.0], [38.6, 342.0], [38.7, 342.0], [38.8, 342.0], [38.9, 342.0], [39.0, 343.0], [39.1, 343.0], [39.2, 343.0], [39.3, 344.0], [39.4, 344.0], [39.5, 344.0], [39.6, 345.0], [39.7, 345.0], [39.8, 345.0], [39.9, 345.0], [40.0, 346.0], [40.1, 346.0], [40.2, 346.0], [40.3, 346.0], [40.4, 346.0], [40.5, 347.0], [40.6, 347.0], [40.7, 347.0], [40.8, 347.0], [40.9, 348.0], [41.0, 348.0], [41.1, 349.0], [41.2, 349.0], [41.3, 349.0], [41.4, 349.0], [41.5, 350.0], [41.6, 350.0], [41.7, 350.0], [41.8, 350.0], [41.9, 350.0], [42.0, 350.0], [42.1, 351.0], [42.2, 351.0], [42.3, 351.0], [42.4, 351.0], [42.5, 352.0], [42.6, 352.0], [42.7, 353.0], [42.8, 353.0], [42.9, 353.0], [43.0, 353.0], [43.1, 354.0], [43.2, 354.0], [43.3, 354.0], [43.4, 354.0], [43.5, 354.0], [43.6, 355.0], [43.7, 355.0], [43.8, 355.0], [43.9, 355.0], [44.0, 356.0], [44.1, 356.0], [44.2, 356.0], [44.3, 356.0], [44.4, 356.0], [44.5, 357.0], [44.6, 357.0], [44.7, 357.0], [44.8, 357.0], [44.9, 357.0], [45.0, 358.0], [45.1, 358.0], [45.2, 358.0], [45.3, 359.0], [45.4, 359.0], [45.5, 359.0], [45.6, 359.0], [45.7, 359.0], [45.8, 360.0], [45.9, 360.0], [46.0, 360.0], [46.1, 360.0], [46.2, 361.0], [46.3, 361.0], [46.4, 362.0], [46.5, 362.0], [46.6, 362.0], [46.7, 362.0], [46.8, 363.0], [46.9, 363.0], [47.0, 363.0], [47.1, 363.0], [47.2, 363.0], [47.3, 364.0], [47.4, 364.0], [47.5, 364.0], [47.6, 364.0], [47.7, 365.0], [47.8, 365.0], [47.9, 365.0], [48.0, 365.0], [48.1, 365.0], [48.2, 365.0], [48.3, 366.0], [48.4, 366.0], [48.5, 366.0], [48.6, 367.0], [48.7, 367.0], [48.8, 367.0], [48.9, 367.0], [49.0, 368.0], [49.1, 368.0], [49.2, 368.0], [49.3, 368.0], [49.4, 368.0], [49.5, 369.0], [49.6, 369.0], [49.7, 369.0], [49.8, 370.0], [49.9, 370.0], [50.0, 370.0], [50.1, 370.0], [50.2, 371.0], [50.3, 371.0], [50.4, 371.0], [50.5, 372.0], [50.6, 372.0], [50.7, 372.0], [50.8, 372.0], [50.9, 373.0], [51.0, 373.0], [51.1, 373.0], [51.2, 374.0], [51.3, 374.0], [51.4, 375.0], [51.5, 375.0], [51.6, 375.0], [51.7, 376.0], [51.8, 376.0], [51.9, 376.0], [52.0, 377.0], [52.1, 377.0], [52.2, 377.0], [52.3, 377.0], [52.4, 378.0], [52.5, 378.0], [52.6, 378.0], [52.7, 378.0], [52.8, 379.0], [52.9, 379.0], [53.0, 379.0], [53.1, 379.0], [53.2, 379.0], [53.3, 380.0], [53.4, 380.0], [53.5, 381.0], [53.6, 381.0], [53.7, 382.0], [53.8, 382.0], [53.9, 383.0], [54.0, 383.0], [54.1, 383.0], [54.2, 384.0], [54.3, 384.0], [54.4, 384.0], [54.5, 384.0], [54.6, 385.0], [54.7, 385.0], [54.8, 385.0], [54.9, 386.0], [55.0, 386.0], [55.1, 387.0], [55.2, 387.0], [55.3, 388.0], [55.4, 388.0], [55.5, 389.0], [55.6, 389.0], [55.7, 389.0], [55.8, 390.0], [55.9, 390.0], [56.0, 390.0], [56.1, 391.0], [56.2, 391.0], [56.3, 391.0], [56.4, 392.0], [56.5, 392.0], [56.6, 393.0], [56.7, 393.0], [56.8, 394.0], [56.9, 394.0], [57.0, 394.0], [57.1, 395.0], [57.2, 395.0], [57.3, 395.0], [57.4, 396.0], [57.5, 396.0], [57.6, 396.0], [57.7, 396.0], [57.8, 396.0], [57.9, 397.0], [58.0, 397.0], [58.1, 397.0], [58.2, 398.0], [58.3, 398.0], [58.4, 399.0], [58.5, 399.0], [58.6, 399.0], [58.7, 400.0], [58.8, 400.0], [58.9, 401.0], [59.0, 401.0], [59.1, 401.0], [59.2, 402.0], [59.3, 402.0], [59.4, 402.0], [59.5, 403.0], [59.6, 403.0], [59.7, 403.0], [59.8, 404.0], [59.9, 405.0], [60.0, 405.0], [60.1, 405.0], [60.2, 405.0], [60.3, 405.0], [60.4, 406.0], [60.5, 406.0], [60.6, 406.0], [60.7, 407.0], [60.8, 407.0], [60.9, 407.0], [61.0, 408.0], [61.1, 408.0], [61.2, 409.0], [61.3, 409.0], [61.4, 409.0], [61.5, 410.0], [61.6, 410.0], [61.7, 411.0], [61.8, 411.0], [61.9, 411.0], [62.0, 412.0], [62.1, 413.0], [62.2, 413.0], [62.3, 413.0], [62.4, 414.0], [62.5, 416.0], [62.6, 417.0], [62.7, 417.0], [62.8, 418.0], [62.9, 418.0], [63.0, 419.0], [63.1, 419.0], [63.2, 420.0], [63.3, 420.0], [63.4, 421.0], [63.5, 421.0], [63.6, 422.0], [63.7, 422.0], [63.8, 423.0], [63.9, 423.0], [64.0, 423.0], [64.1, 424.0], [64.2, 425.0], [64.3, 425.0], [64.4, 425.0], [64.5, 426.0], [64.6, 427.0], [64.7, 428.0], [64.8, 429.0], [64.9, 429.0], [65.0, 430.0], [65.1, 430.0], [65.2, 430.0], [65.3, 432.0], [65.4, 433.0], [65.5, 434.0], [65.6, 434.0], [65.7, 434.0], [65.8, 435.0], [65.9, 435.0], [66.0, 436.0], [66.1, 437.0], [66.2, 438.0], [66.3, 439.0], [66.4, 439.0], [66.5, 440.0], [66.6, 441.0], [66.7, 442.0], [66.8, 442.0], [66.9, 442.0], [67.0, 442.0], [67.1, 443.0], [67.2, 444.0], [67.3, 445.0], [67.4, 445.0], [67.5, 446.0], [67.6, 447.0], [67.7, 447.0], [67.8, 448.0], [67.9, 449.0], [68.0, 450.0], [68.1, 451.0], [68.2, 451.0], [68.3, 452.0], [68.4, 454.0], [68.5, 455.0], [68.6, 455.0], [68.7, 455.0], [68.8, 456.0], [68.9, 458.0], [69.0, 459.0], [69.1, 459.0], [69.2, 460.0], [69.3, 461.0], [69.4, 462.0], [69.5, 463.0], [69.6, 463.0], [69.7, 464.0], [69.8, 466.0], [69.9, 466.0], [70.0, 467.0], [70.1, 467.0], [70.2, 469.0], [70.3, 469.0], [70.4, 470.0], [70.5, 471.0], [70.6, 472.0], [70.7, 473.0], [70.8, 474.0], [70.9, 475.0], [71.0, 477.0], [71.1, 478.0], [71.2, 479.0], [71.3, 480.0], [71.4, 481.0], [71.5, 482.0], [71.6, 483.0], [71.7, 485.0], [71.8, 486.0], [71.9, 487.0], [72.0, 488.0], [72.1, 489.0], [72.2, 490.0], [72.3, 491.0], [72.4, 492.0], [72.5, 493.0], [72.6, 494.0], [72.7, 495.0], [72.8, 496.0], [72.9, 498.0], [73.0, 498.0], [73.1, 500.0], [73.2, 500.0], [73.3, 501.0], [73.4, 503.0], [73.5, 503.0], [73.6, 504.0], [73.7, 506.0], [73.8, 508.0], [73.9, 509.0], [74.0, 510.0], [74.1, 511.0], [74.2, 515.0], [74.3, 515.0], [74.4, 516.0], [74.5, 518.0], [74.6, 519.0], [74.7, 519.0], [74.8, 520.0], [74.9, 520.0], [75.0, 523.0], [75.1, 526.0], [75.2, 527.0], [75.3, 531.0], [75.4, 532.0], [75.5, 534.0], [75.6, 539.0], [75.7, 542.0], [75.8, 543.0], [75.9, 546.0], [76.0, 547.0], [76.1, 549.0], [76.2, 550.0], [76.3, 553.0], [76.4, 555.0], [76.5, 559.0], [76.6, 562.0], [76.7, 568.0], [76.8, 569.0], [76.9, 570.0], [77.0, 574.0], [77.1, 577.0], [77.2, 579.0], [77.3, 583.0], [77.4, 589.0], [77.5, 596.0], [77.6, 600.0], [77.7, 605.0], [77.8, 608.0], [77.9, 610.0], [78.0, 614.0], [78.1, 628.0], [78.2, 631.0], [78.3, 634.0], [78.4, 639.0], [78.5, 646.0], [78.6, 659.0], [78.7, 665.0], [78.8, 673.0], [78.9, 677.0], [79.0, 689.0], [79.1, 705.0], [79.2, 716.0], [79.3, 723.0], [79.4, 735.0], [79.5, 776.0], [79.6, 804.0], [79.7, 824.0], [79.8, 848.0], [79.9, 928.0], [80.0, 967.0], [80.1, 1012.0], [80.2, 1165.0], [80.3, 1326.0], [80.4, 1475.0], [80.5, 1527.0], [80.6, 1666.0], [80.7, 1785.0], [80.8, 2043.0], [80.9, 2662.0], [81.0, 3130.0], [81.1, 3159.0], [81.2, 3202.0], [81.3, 3240.0], [81.4, 3396.0], [81.5, 3502.0], [81.6, 3586.0], [81.7, 3650.0], [81.8, 3678.0], [81.9, 3710.0], [82.0, 3884.0], [82.1, 3976.0], [82.2, 4037.0], [82.3, 4121.0], [82.4, 4279.0], [82.5, 4311.0], [82.6, 4366.0], [82.7, 4482.0], [82.8, 4540.0], [82.9, 4616.0], [83.0, 4723.0], [83.1, 4784.0], [83.2, 4896.0], [83.3, 5025.0], [83.4, 5118.0], [83.5, 5173.0], [83.6, 5223.0], [83.7, 5283.0], [83.8, 5374.0], [83.9, 5419.0], [84.0, 5461.0], [84.1, 5569.0], [84.2, 5606.0], [84.3, 5754.0], [84.4, 5794.0], [84.5, 5911.0], [84.6, 5968.0], [84.7, 6110.0], [84.8, 6189.0], [84.9, 6282.0], [85.0, 6364.0], [85.1, 6390.0], [85.2, 6412.0], [85.3, 6466.0], [85.4, 6489.0], [85.5, 6537.0], [85.6, 6579.0], [85.7, 6661.0], [85.8, 6678.0], [85.9, 6693.0], [86.0, 6732.0], [86.1, 6755.0], [86.2, 6774.0], [86.3, 6796.0], [86.4, 6813.0], [86.5, 6915.0], [86.6, 6995.0], [86.7, 7065.0], [86.8, 7107.0], [86.9, 7145.0], [87.0, 7193.0], [87.1, 7235.0], [87.2, 7291.0], [87.3, 7415.0], [87.4, 7464.0], [87.5, 7485.0], [87.6, 7504.0], [87.7, 7513.0], [87.8, 7542.0], [87.9, 7635.0], [88.0, 7734.0], [88.1, 7756.0], [88.2, 7778.0], [88.3, 7816.0], [88.4, 7899.0], [88.5, 7914.0], [88.6, 8002.0], [88.7, 8052.0], [88.8, 8105.0], [88.9, 8171.0], [89.0, 8325.0], [89.1, 8367.0], [89.2, 8414.0], [89.3, 8507.0], [89.4, 8582.0], [89.5, 8623.0], [89.6, 8643.0], [89.7, 8706.0], [89.8, 8715.0], [89.9, 8743.0], [90.0, 8786.0], [90.1, 8810.0], [90.2, 8818.0], [90.3, 8860.0], [90.4, 8899.0], [90.5, 8937.0], [90.6, 8963.0], [90.7, 8982.0], [90.8, 9041.0], [90.9, 9072.0], [91.0, 9109.0], [91.1, 9143.0], [91.2, 9172.0], [91.3, 9208.0], [91.4, 9216.0], [91.5, 9264.0], [91.6, 9286.0], [91.7, 9355.0], [91.8, 9422.0], [91.9, 9441.0], [92.0, 9471.0], [92.1, 9497.0], [92.2, 9519.0], [92.3, 9557.0], [92.4, 9576.0], [92.5, 9583.0], [92.6, 9591.0], [92.7, 9658.0], [92.8, 9683.0], [92.9, 9696.0], [93.0, 9718.0], [93.1, 9741.0], [93.2, 9767.0], [93.3, 9774.0], [93.4, 9797.0], [93.5, 9806.0], [93.6, 9811.0], [93.7, 9828.0], [93.8, 9868.0], [93.9, 9887.0], [94.0, 9911.0], [94.1, 9950.0], [94.2, 9967.0], [94.3, 9985.0], [94.4, 10009.0], [94.5, 10031.0], [94.6, 10056.0], [94.7, 10074.0], [94.8, 10080.0], [94.9, 10093.0], [95.0, 10103.0], [95.1, 10114.0], [95.2, 10120.0], [95.3, 10123.0], [95.4, 10133.0], [95.5, 10142.0], [95.6, 10147.0], [95.7, 10153.0], [95.8, 10179.0], [95.9, 10192.0], [96.0, 10203.0], [96.1, 10213.0], [96.2, 10219.0], [96.3, 10232.0], [96.4, 10234.0], [96.5, 10237.0], [96.6, 10242.0], [96.7, 10249.0], [96.8, 10254.0], [96.9, 10259.0], [97.0, 10262.0], [97.1, 10273.0], [97.2, 10279.0], [97.3, 10297.0], [97.4, 10300.0], [97.5, 10308.0], [97.6, 10316.0], [97.7, 10326.0], [97.8, 10332.0], [97.9, 10335.0], [98.0, 10341.0], [98.1, 10348.0], [98.2, 10349.0], [98.3, 10356.0], [98.4, 10362.0], [98.5, 10365.0], [98.6, 10369.0], [98.7, 10382.0], [98.8, 10398.0], [98.9, 10402.0], [99.0, 10418.0], [99.1, 10431.0], [99.2, 10437.0], [99.3, 10444.0], [99.4, 10454.0], [99.5, 10480.0], [99.6, 10505.0], [99.7, 10511.0], [99.8, 10518.0], [99.9, 10571.0], [100.0, 10677.0]], "isOverall": false, "label": "ChooseFlight/purchase.php-237", "isController": false}, {"data": [[0.0, 280.0], [0.1, 282.0], [0.2, 286.0], [0.3, 292.0], [0.4, 293.0], [0.5, 294.0], [0.6, 300.0], [0.7, 302.0], [0.8, 303.0], [0.9, 305.0], [1.0, 305.0], [1.1, 311.0], [1.2, 312.0], [1.3, 314.0], [1.4, 316.0], [1.5, 321.0], [1.6, 324.0], [1.7, 327.0], [1.8, 328.0], [1.9, 333.0], [2.0, 339.0], [2.1, 344.0], [2.2, 350.0], [2.3, 368.0], [2.4, 370.0], [2.5, 375.0], [2.6, 377.0], [2.7, 379.0], [2.8, 381.0], [2.9, 382.0], [3.0, 383.0], [3.1, 384.0], [3.2, 385.0], [3.3, 386.0], [3.4, 387.0], [3.5, 387.0], [3.6, 387.0], [3.7, 389.0], [3.8, 389.0], [3.9, 390.0], [4.0, 391.0], [4.1, 391.0], [4.2, 392.0], [4.3, 392.0], [4.4, 393.0], [4.5, 393.0], [4.6, 394.0], [4.7, 394.0], [4.8, 395.0], [4.9, 395.0], [5.0, 396.0], [5.1, 396.0], [5.2, 397.0], [5.3, 397.0], [5.4, 397.0], [5.5, 397.0], [5.6, 397.0], [5.7, 398.0], [5.8, 398.0], [5.9, 398.0], [6.0, 398.0], [6.1, 398.0], [6.2, 399.0], [6.3, 399.0], [6.4, 399.0], [6.5, 399.0], [6.6, 400.0], [6.7, 400.0], [6.8, 401.0], [6.9, 401.0], [7.0, 401.0], [7.1, 401.0], [7.2, 402.0], [7.3, 402.0], [7.4, 402.0], [7.5, 403.0], [7.6, 403.0], [7.7, 403.0], [7.8, 403.0], [7.9, 403.0], [8.0, 404.0], [8.1, 404.0], [8.2, 404.0], [8.3, 405.0], [8.4, 405.0], [8.5, 405.0], [8.6, 405.0], [8.7, 406.0], [8.8, 406.0], [8.9, 406.0], [9.0, 406.0], [9.1, 407.0], [9.2, 407.0], [9.3, 407.0], [9.4, 408.0], [9.5, 408.0], [9.6, 408.0], [9.7, 408.0], [9.8, 409.0], [9.9, 409.0], [10.0, 409.0], [10.1, 409.0], [10.2, 409.0], [10.3, 409.0], [10.4, 410.0], [10.5, 410.0], [10.6, 410.0], [10.7, 410.0], [10.8, 411.0], [10.9, 411.0], [11.0, 411.0], [11.1, 411.0], [11.2, 411.0], [11.3, 412.0], [11.4, 412.0], [11.5, 412.0], [11.6, 412.0], [11.7, 412.0], [11.8, 413.0], [11.9, 413.0], [12.0, 413.0], [12.1, 413.0], [12.2, 414.0], [12.3, 414.0], [12.4, 414.0], [12.5, 414.0], [12.6, 414.0], [12.7, 415.0], [12.8, 415.0], [12.9, 415.0], [13.0, 415.0], [13.1, 415.0], [13.2, 415.0], [13.3, 415.0], [13.4, 416.0], [13.5, 416.0], [13.6, 416.0], [13.7, 416.0], [13.8, 416.0], [13.9, 416.0], [14.0, 417.0], [14.1, 417.0], [14.2, 417.0], [14.3, 417.0], [14.4, 418.0], [14.5, 418.0], [14.6, 418.0], [14.7, 418.0], [14.8, 419.0], [14.9, 419.0], [15.0, 419.0], [15.1, 419.0], [15.2, 419.0], [15.3, 419.0], [15.4, 420.0], [15.5, 420.0], [15.6, 420.0], [15.7, 420.0], [15.8, 420.0], [15.9, 421.0], [16.0, 421.0], [16.1, 421.0], [16.2, 421.0], [16.3, 421.0], [16.4, 422.0], [16.5, 422.0], [16.6, 422.0], [16.7, 423.0], [16.8, 423.0], [16.9, 423.0], [17.0, 423.0], [17.1, 423.0], [17.2, 423.0], [17.3, 424.0], [17.4, 424.0], [17.5, 424.0], [17.6, 424.0], [17.7, 424.0], [17.8, 424.0], [17.9, 425.0], [18.0, 425.0], [18.1, 425.0], [18.2, 425.0], [18.3, 425.0], [18.4, 426.0], [18.5, 426.0], [18.6, 426.0], [18.7, 426.0], [18.8, 426.0], [18.9, 427.0], [19.0, 427.0], [19.1, 427.0], [19.2, 427.0], [19.3, 428.0], [19.4, 428.0], [19.5, 428.0], [19.6, 428.0], [19.7, 429.0], [19.8, 429.0], [19.9, 429.0], [20.0, 429.0], [20.1, 429.0], [20.2, 429.0], [20.3, 430.0], [20.4, 430.0], [20.5, 430.0], [20.6, 430.0], [20.7, 430.0], [20.8, 431.0], [20.9, 431.0], [21.0, 431.0], [21.1, 431.0], [21.2, 431.0], [21.3, 431.0], [21.4, 432.0], [21.5, 432.0], [21.6, 432.0], [21.7, 432.0], [21.8, 432.0], [21.9, 432.0], [22.0, 432.0], [22.1, 433.0], [22.2, 433.0], [22.3, 433.0], [22.4, 434.0], [22.5, 434.0], [22.6, 434.0], [22.7, 434.0], [22.8, 434.0], [22.9, 434.0], [23.0, 435.0], [23.1, 435.0], [23.2, 435.0], [23.3, 435.0], [23.4, 435.0], [23.5, 436.0], [23.6, 436.0], [23.7, 436.0], [23.8, 436.0], [23.9, 436.0], [24.0, 437.0], [24.1, 437.0], [24.2, 437.0], [24.3, 437.0], [24.4, 438.0], [24.5, 438.0], [24.6, 438.0], [24.7, 438.0], [24.8, 439.0], [24.9, 439.0], [25.0, 439.0], [25.1, 439.0], [25.2, 440.0], [25.3, 440.0], [25.4, 440.0], [25.5, 440.0], [25.6, 440.0], [25.7, 440.0], [25.8, 441.0], [25.9, 441.0], [26.0, 441.0], [26.1, 441.0], [26.2, 441.0], [26.3, 442.0], [26.4, 442.0], [26.5, 442.0], [26.6, 443.0], [26.7, 443.0], [26.8, 443.0], [26.9, 443.0], [27.0, 443.0], [27.1, 443.0], [27.2, 444.0], [27.3, 444.0], [27.4, 444.0], [27.5, 445.0], [27.6, 445.0], [27.7, 445.0], [27.8, 445.0], [27.9, 445.0], [28.0, 446.0], [28.1, 446.0], [28.2, 446.0], [28.3, 446.0], [28.4, 447.0], [28.5, 447.0], [28.6, 447.0], [28.7, 447.0], [28.8, 447.0], [28.9, 448.0], [29.0, 448.0], [29.1, 448.0], [29.2, 448.0], [29.3, 448.0], [29.4, 449.0], [29.5, 449.0], [29.6, 449.0], [29.7, 450.0], [29.8, 450.0], [29.9, 450.0], [30.0, 450.0], [30.1, 451.0], [30.2, 451.0], [30.3, 451.0], [30.4, 451.0], [30.5, 452.0], [30.6, 452.0], [30.7, 452.0], [30.8, 452.0], [30.9, 452.0], [31.0, 452.0], [31.1, 453.0], [31.2, 453.0], [31.3, 453.0], [31.4, 453.0], [31.5, 453.0], [31.6, 453.0], [31.7, 454.0], [31.8, 454.0], [31.9, 454.0], [32.0, 454.0], [32.1, 455.0], [32.2, 455.0], [32.3, 455.0], [32.4, 455.0], [32.5, 455.0], [32.6, 456.0], [32.7, 456.0], [32.8, 456.0], [32.9, 456.0], [33.0, 457.0], [33.1, 457.0], [33.2, 457.0], [33.3, 457.0], [33.4, 458.0], [33.5, 458.0], [33.6, 458.0], [33.7, 458.0], [33.8, 459.0], [33.9, 459.0], [34.0, 459.0], [34.1, 460.0], [34.2, 460.0], [34.3, 460.0], [34.4, 461.0], [34.5, 461.0], [34.6, 461.0], [34.7, 462.0], [34.8, 462.0], [34.9, 462.0], [35.0, 462.0], [35.1, 462.0], [35.2, 462.0], [35.3, 463.0], [35.4, 463.0], [35.5, 463.0], [35.6, 463.0], [35.7, 463.0], [35.8, 464.0], [35.9, 464.0], [36.0, 464.0], [36.1, 465.0], [36.2, 465.0], [36.3, 465.0], [36.4, 466.0], [36.5, 466.0], [36.6, 466.0], [36.7, 467.0], [36.8, 467.0], [36.9, 468.0], [37.0, 468.0], [37.1, 468.0], [37.2, 469.0], [37.3, 469.0], [37.4, 469.0], [37.5, 469.0], [37.6, 470.0], [37.7, 470.0], [37.8, 470.0], [37.9, 471.0], [38.0, 471.0], [38.1, 471.0], [38.2, 471.0], [38.3, 471.0], [38.4, 472.0], [38.5, 472.0], [38.6, 472.0], [38.7, 473.0], [38.8, 473.0], [38.9, 473.0], [39.0, 474.0], [39.1, 474.0], [39.2, 474.0], [39.3, 474.0], [39.4, 475.0], [39.5, 475.0], [39.6, 476.0], [39.7, 476.0], [39.8, 476.0], [39.9, 476.0], [40.0, 477.0], [40.1, 477.0], [40.2, 477.0], [40.3, 477.0], [40.4, 477.0], [40.5, 478.0], [40.6, 478.0], [40.7, 478.0], [40.8, 479.0], [40.9, 479.0], [41.0, 479.0], [41.1, 479.0], [41.2, 479.0], [41.3, 479.0], [41.4, 480.0], [41.5, 480.0], [41.6, 480.0], [41.7, 481.0], [41.8, 481.0], [41.9, 482.0], [42.0, 482.0], [42.1, 483.0], [42.2, 483.0], [42.3, 483.0], [42.4, 483.0], [42.5, 483.0], [42.6, 484.0], [42.7, 484.0], [42.8, 484.0], [42.9, 484.0], [43.0, 484.0], [43.1, 484.0], [43.2, 485.0], [43.3, 485.0], [43.4, 485.0], [43.5, 486.0], [43.6, 486.0], [43.7, 486.0], [43.8, 486.0], [43.9, 486.0], [44.0, 486.0], [44.1, 487.0], [44.2, 487.0], [44.3, 488.0], [44.4, 488.0], [44.5, 488.0], [44.6, 489.0], [44.7, 489.0], [44.8, 489.0], [44.9, 489.0], [45.0, 489.0], [45.1, 490.0], [45.2, 490.0], [45.3, 490.0], [45.4, 491.0], [45.5, 491.0], [45.6, 491.0], [45.7, 492.0], [45.8, 492.0], [45.9, 492.0], [46.0, 493.0], [46.1, 493.0], [46.2, 493.0], [46.3, 494.0], [46.4, 494.0], [46.5, 494.0], [46.6, 495.0], [46.7, 495.0], [46.8, 495.0], [46.9, 496.0], [47.0, 496.0], [47.1, 496.0], [47.2, 497.0], [47.3, 497.0], [47.4, 498.0], [47.5, 498.0], [47.6, 498.0], [47.7, 499.0], [47.8, 499.0], [47.9, 499.0], [48.0, 500.0], [48.1, 500.0], [48.2, 500.0], [48.3, 500.0], [48.4, 501.0], [48.5, 501.0], [48.6, 501.0], [48.7, 502.0], [48.8, 502.0], [48.9, 502.0], [49.0, 502.0], [49.1, 503.0], [49.2, 503.0], [49.3, 504.0], [49.4, 504.0], [49.5, 505.0], [49.6, 506.0], [49.7, 506.0], [49.8, 506.0], [49.9, 506.0], [50.0, 506.0], [50.1, 507.0], [50.2, 507.0], [50.3, 507.0], [50.4, 507.0], [50.5, 508.0], [50.6, 508.0], [50.7, 509.0], [50.8, 509.0], [50.9, 509.0], [51.0, 510.0], [51.1, 510.0], [51.2, 511.0], [51.3, 511.0], [51.4, 512.0], [51.5, 513.0], [51.6, 513.0], [51.7, 514.0], [51.8, 515.0], [51.9, 515.0], [52.0, 516.0], [52.1, 517.0], [52.2, 517.0], [52.3, 518.0], [52.4, 518.0], [52.5, 519.0], [52.6, 519.0], [52.7, 520.0], [52.8, 521.0], [52.9, 521.0], [53.0, 521.0], [53.1, 522.0], [53.2, 522.0], [53.3, 523.0], [53.4, 523.0], [53.5, 524.0], [53.6, 524.0], [53.7, 525.0], [53.8, 525.0], [53.9, 526.0], [54.0, 526.0], [54.1, 527.0], [54.2, 527.0], [54.3, 527.0], [54.4, 528.0], [54.5, 529.0], [54.6, 529.0], [54.7, 529.0], [54.8, 530.0], [54.9, 531.0], [55.0, 532.0], [55.1, 532.0], [55.2, 533.0], [55.3, 533.0], [55.4, 534.0], [55.5, 535.0], [55.6, 536.0], [55.7, 537.0], [55.8, 537.0], [55.9, 538.0], [56.0, 538.0], [56.1, 538.0], [56.2, 539.0], [56.3, 540.0], [56.4, 541.0], [56.5, 541.0], [56.6, 542.0], [56.7, 542.0], [56.8, 543.0], [56.9, 543.0], [57.0, 544.0], [57.1, 544.0], [57.2, 545.0], [57.3, 545.0], [57.4, 546.0], [57.5, 546.0], [57.6, 547.0], [57.7, 547.0], [57.8, 548.0], [57.9, 548.0], [58.0, 549.0], [58.1, 550.0], [58.2, 550.0], [58.3, 551.0], [58.4, 551.0], [58.5, 552.0], [58.6, 553.0], [58.7, 553.0], [58.8, 554.0], [58.9, 554.0], [59.0, 555.0], [59.1, 556.0], [59.2, 556.0], [59.3, 557.0], [59.4, 557.0], [59.5, 558.0], [59.6, 558.0], [59.7, 560.0], [59.8, 560.0], [59.9, 561.0], [60.0, 562.0], [60.1, 563.0], [60.2, 563.0], [60.3, 564.0], [60.4, 565.0], [60.5, 567.0], [60.6, 567.0], [60.7, 568.0], [60.8, 569.0], [60.9, 570.0], [61.0, 571.0], [61.1, 571.0], [61.2, 572.0], [61.3, 573.0], [61.4, 575.0], [61.5, 576.0], [61.6, 577.0], [61.7, 578.0], [61.8, 579.0], [61.9, 579.0], [62.0, 580.0], [62.1, 581.0], [62.2, 582.0], [62.3, 583.0], [62.4, 585.0], [62.5, 586.0], [62.6, 587.0], [62.7, 588.0], [62.8, 588.0], [62.9, 590.0], [63.0, 590.0], [63.1, 591.0], [63.2, 592.0], [63.3, 593.0], [63.4, 594.0], [63.5, 595.0], [63.6, 596.0], [63.7, 597.0], [63.8, 599.0], [63.9, 599.0], [64.0, 600.0], [64.1, 601.0], [64.2, 602.0], [64.3, 602.0], [64.4, 604.0], [64.5, 606.0], [64.6, 606.0], [64.7, 606.0], [64.8, 608.0], [64.9, 608.0], [65.0, 609.0], [65.1, 611.0], [65.2, 611.0], [65.3, 613.0], [65.4, 614.0], [65.5, 616.0], [65.6, 617.0], [65.7, 618.0], [65.8, 618.0], [65.9, 620.0], [66.0, 622.0], [66.1, 623.0], [66.2, 624.0], [66.3, 625.0], [66.4, 627.0], [66.5, 629.0], [66.6, 630.0], [66.7, 632.0], [66.8, 633.0], [66.9, 634.0], [67.0, 636.0], [67.1, 637.0], [67.2, 638.0], [67.3, 640.0], [67.4, 641.0], [67.5, 644.0], [67.6, 647.0], [67.7, 649.0], [67.8, 651.0], [67.9, 653.0], [68.0, 654.0], [68.1, 656.0], [68.2, 657.0], [68.3, 658.0], [68.4, 659.0], [68.5, 663.0], [68.6, 664.0], [68.7, 665.0], [68.8, 665.0], [68.9, 666.0], [69.0, 668.0], [69.1, 670.0], [69.2, 672.0], [69.3, 674.0], [69.4, 676.0], [69.5, 677.0], [69.6, 678.0], [69.7, 680.0], [69.8, 680.0], [69.9, 683.0], [70.0, 684.0], [70.1, 685.0], [70.2, 686.0], [70.3, 688.0], [70.4, 689.0], [70.5, 694.0], [70.6, 695.0], [70.7, 698.0], [70.8, 701.0], [70.9, 703.0], [71.0, 704.0], [71.1, 705.0], [71.2, 707.0], [71.3, 710.0], [71.4, 712.0], [71.5, 713.0], [71.6, 715.0], [71.7, 717.0], [71.8, 719.0], [71.9, 720.0], [72.0, 722.0], [72.1, 723.0], [72.2, 725.0], [72.3, 729.0], [72.4, 729.0], [72.5, 732.0], [72.6, 737.0], [72.7, 738.0], [72.8, 740.0], [72.9, 743.0], [73.0, 746.0], [73.1, 750.0], [73.2, 750.0], [73.3, 752.0], [73.4, 755.0], [73.5, 757.0], [73.6, 759.0], [73.7, 762.0], [73.8, 764.0], [73.9, 767.0], [74.0, 769.0], [74.1, 769.0], [74.2, 771.0], [74.3, 776.0], [74.4, 780.0], [74.5, 784.0], [74.6, 788.0], [74.7, 794.0], [74.8, 799.0], [74.9, 802.0], [75.0, 804.0], [75.1, 807.0], [75.2, 808.0], [75.3, 813.0], [75.4, 820.0], [75.5, 820.0], [75.6, 823.0], [75.7, 826.0], [75.8, 828.0], [75.9, 837.0], [76.0, 842.0], [76.1, 843.0], [76.2, 845.0], [76.3, 847.0], [76.4, 849.0], [76.5, 854.0], [76.6, 856.0], [76.7, 861.0], [76.8, 863.0], [76.9, 869.0], [77.0, 872.0], [77.1, 874.0], [77.2, 877.0], [77.3, 881.0], [77.4, 886.0], [77.5, 893.0], [77.6, 896.0], [77.7, 900.0], [77.8, 904.0], [77.9, 910.0], [78.0, 914.0], [78.1, 924.0], [78.2, 930.0], [78.3, 938.0], [78.4, 945.0], [78.5, 946.0], [78.6, 953.0], [78.7, 957.0], [78.8, 974.0], [78.9, 984.0], [79.0, 1005.0], [79.1, 1047.0], [79.2, 1054.0], [79.3, 1092.0], [79.4, 1132.0], [79.5, 1161.0], [79.6, 1243.0], [79.7, 1304.0], [79.8, 1427.0], [79.9, 1511.0], [80.0, 1622.0], [80.1, 1943.0], [80.2, 2387.0], [80.3, 3015.0], [80.4, 3269.0], [80.5, 3408.0], [80.6, 3579.0], [80.7, 3661.0], [80.8, 3692.0], [80.9, 3754.0], [81.0, 3850.0], [81.1, 4084.0], [81.2, 4189.0], [81.3, 4268.0], [81.4, 4331.0], [81.5, 4428.0], [81.6, 4489.0], [81.7, 4620.0], [81.8, 4726.0], [81.9, 4944.0], [82.0, 5065.0], [82.1, 5157.0], [82.2, 5188.0], [82.3, 5346.0], [82.4, 5394.0], [82.5, 5469.0], [82.6, 5530.0], [82.7, 5582.0], [82.8, 5684.0], [82.9, 5775.0], [83.0, 6136.0], [83.1, 6200.0], [83.2, 6238.0], [83.3, 6314.0], [83.4, 6344.0], [83.5, 6458.0], [83.6, 6533.0], [83.7, 6614.0], [83.8, 6644.0], [83.9, 6693.0], [84.0, 6730.0], [84.1, 6748.0], [84.2, 6835.0], [84.3, 6854.0], [84.4, 6872.0], [84.5, 6902.0], [84.6, 6944.0], [84.7, 6951.0], [84.8, 6964.0], [84.9, 6975.0], [85.0, 6992.0], [85.1, 7023.0], [85.2, 7045.0], [85.3, 7068.0], [85.4, 7098.0], [85.5, 7179.0], [85.6, 7243.0], [85.7, 7291.0], [85.8, 7316.0], [85.9, 7370.0], [86.0, 7419.0], [86.1, 7421.0], [86.2, 7445.0], [86.3, 7463.0], [86.4, 7532.0], [86.5, 7605.0], [86.6, 7719.0], [86.7, 7727.0], [86.8, 7762.0], [86.9, 7791.0], [87.0, 7876.0], [87.1, 7915.0], [87.2, 7959.0], [87.3, 8010.0], [87.4, 8037.0], [87.5, 8053.0], [87.6, 8074.0], [87.7, 8118.0], [87.8, 8199.0], [87.9, 8218.0], [88.0, 8282.0], [88.1, 8304.0], [88.2, 8334.0], [88.3, 8354.0], [88.4, 8389.0], [88.5, 8413.0], [88.6, 8470.0], [88.7, 8486.0], [88.8, 8517.0], [88.9, 8559.0], [89.0, 8578.0], [89.1, 8596.0], [89.2, 8676.0], [89.3, 8747.0], [89.4, 8790.0], [89.5, 8868.0], [89.6, 8886.0], [89.7, 8935.0], [89.8, 8971.0], [89.9, 9053.0], [90.0, 9073.0], [90.1, 9094.0], [90.2, 9146.0], [90.3, 9191.0], [90.4, 9199.0], [90.5, 9227.0], [90.6, 9258.0], [90.7, 9285.0], [90.8, 9308.0], [90.9, 9342.0], [91.0, 9378.0], [91.1, 9424.0], [91.2, 9441.0], [91.3, 9454.0], [91.4, 9501.0], [91.5, 9536.0], [91.6, 9579.0], [91.7, 9601.0], [91.8, 9629.0], [91.9, 9630.0], [92.0, 9676.0], [92.1, 9704.0], [92.2, 9739.0], [92.3, 9747.0], [92.4, 9777.0], [92.5, 9780.0], [92.6, 9815.0], [92.7, 9828.0], [92.8, 9848.0], [92.9, 9883.0], [93.0, 9905.0], [93.1, 9940.0], [93.2, 9964.0], [93.3, 9981.0], [93.4, 9988.0], [93.5, 10010.0], [93.6, 10039.0], [93.7, 10058.0], [93.8, 10078.0], [93.9, 10093.0], [94.0, 10101.0], [94.1, 10115.0], [94.2, 10131.0], [94.3, 10138.0], [94.4, 10148.0], [94.5, 10158.0], [94.6, 10166.0], [94.7, 10220.0], [94.8, 10223.0], [94.9, 10237.0], [95.0, 10247.0], [95.1, 10253.0], [95.2, 10288.0], [95.3, 10296.0], [95.4, 10302.0], [95.5, 10315.0], [95.6, 10320.0], [95.7, 10324.0], [95.8, 10331.0], [95.9, 10335.0], [96.0, 10338.0], [96.1, 10346.0], [96.2, 10353.0], [96.3, 10363.0], [96.4, 10372.0], [96.5, 10381.0], [96.6, 10385.0], [96.7, 10388.0], [96.8, 10400.0], [96.9, 10408.0], [97.0, 10417.0], [97.1, 10420.0], [97.2, 10431.0], [97.3, 10433.0], [97.4, 10436.0], [97.5, 10442.0], [97.6, 10447.0], [97.7, 10455.0], [97.8, 10456.0], [97.9, 10468.0], [98.0, 10477.0], [98.1, 10486.0], [98.2, 10491.0], [98.3, 10494.0], [98.4, 10498.0], [98.5, 10507.0], [98.6, 10526.0], [98.7, 10532.0], [98.8, 10540.0], [98.9, 10545.0], [99.0, 10551.0], [99.1, 10560.0], [99.2, 10569.0], [99.3, 10583.0], [99.4, 10608.0], [99.5, 10631.0], [99.6, 10658.0], [99.7, 10687.0], [99.8, 10720.0], [99.9, 10734.0]], "isOverall": false, "label": "FindFlights/reserve.php-230", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 1585.0, "series": [{"data": [[100.0, 82.0], [200.0, 451.0], [300.0, 1544.0], [400.0, 555.0], [500.0, 166.0], [600.0, 57.0], [700.0, 26.0], [800.0, 10.0], [900.0, 2.0], [1000.0, 6.0], [1100.0, 2.0], [1200.0, 4.0], [1300.0, 1.0], [1500.0, 3.0], [1600.0, 2.0], [1800.0, 2.0], [1900.0, 3.0], [2100.0, 1.0], [2200.0, 1.0], [2600.0, 1.0], [2800.0, 2.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 1.0], [3300.0, 2.0], [3200.0, 7.0], [3400.0, 5.0], [3500.0, 2.0], [3600.0, 4.0], [3700.0, 1.0], [3800.0, 4.0], [3900.0, 3.0], [4000.0, 8.0], [4200.0, 6.0], [4100.0, 3.0], [4300.0, 1.0], [4500.0, 4.0], [4400.0, 1.0], [4600.0, 4.0], [4700.0, 2.0], [4800.0, 1.0], [4900.0, 4.0], [5000.0, 3.0], [5100.0, 1.0], [5200.0, 3.0], [5300.0, 11.0], [5400.0, 6.0], [5500.0, 4.0], [5600.0, 4.0], [5700.0, 6.0], [5800.0, 7.0], [6000.0, 11.0], [5900.0, 5.0], [6100.0, 3.0], [6200.0, 4.0], [6300.0, 5.0], [6600.0, 12.0], [6400.0, 11.0], [6500.0, 8.0], [6700.0, 14.0], [6800.0, 15.0], [6900.0, 7.0], [7100.0, 10.0], [7000.0, 5.0], [7400.0, 10.0], [7300.0, 11.0], [7200.0, 9.0], [7600.0, 6.0], [7500.0, 10.0], [7700.0, 10.0], [7800.0, 8.0], [7900.0, 7.0], [8000.0, 5.0], [8100.0, 4.0], [8400.0, 13.0], [8300.0, 9.0], [8200.0, 5.0], [8500.0, 8.0], [8600.0, 7.0], [8700.0, 6.0], [8800.0, 13.0], [8900.0, 7.0], [9100.0, 9.0], [9200.0, 10.0], [9000.0, 8.0], [9300.0, 12.0], [9400.0, 16.0], [9500.0, 19.0], [9600.0, 13.0], [9700.0, 18.0], [9800.0, 20.0], [9900.0, 26.0], [10000.0, 24.0], [10100.0, 30.0], [10200.0, 49.0], [10300.0, 56.0], [10400.0, 20.0], [10500.0, 5.0], [10600.0, 1.0]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313", "isController": false}, {"data": [[100.0, 101.0], [200.0, 515.0], [300.0, 1567.0], [400.0, 539.0], [500.0, 167.0], [600.0, 55.0], [700.0, 20.0], [800.0, 11.0], [900.0, 6.0], [1000.0, 4.0], [1100.0, 3.0], [1200.0, 2.0], [1300.0, 2.0], [1400.0, 3.0], [1500.0, 5.0], [1600.0, 2.0], [1700.0, 4.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2300.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 1.0], [3000.0, 1.0], [3100.0, 8.0], [3200.0, 6.0], [3300.0, 3.0], [3400.0, 3.0], [3500.0, 4.0], [3700.0, 3.0], [3600.0, 10.0], [3800.0, 2.0], [3900.0, 4.0], [4000.0, 6.0], [4100.0, 3.0], [4300.0, 6.0], [4200.0, 4.0], [4400.0, 4.0], [4500.0, 6.0], [4600.0, 3.0], [4700.0, 5.0], [4800.0, 4.0], [4900.0, 3.0], [5100.0, 6.0], [5000.0, 3.0], [5300.0, 5.0], [5200.0, 6.0], [5400.0, 8.0], [5600.0, 2.0], [5500.0, 5.0], [5700.0, 7.0], [5800.0, 2.0], [5900.0, 5.0], [6000.0, 3.0], [6100.0, 4.0], [6300.0, 10.0], [6200.0, 4.0], [6400.0, 9.0], [6500.0, 7.0], [6600.0, 12.0], [6800.0, 7.0], [6900.0, 5.0], [6700.0, 14.0], [7100.0, 10.0], [7000.0, 5.0], [7200.0, 7.0], [7300.0, 3.0], [7400.0, 9.0], [7600.0, 2.0], [7500.0, 13.0], [7700.0, 13.0], [7800.0, 5.0], [7900.0, 6.0], [8000.0, 7.0], [8100.0, 6.0], [8300.0, 7.0], [8500.0, 6.0], [8600.0, 9.0], [8700.0, 14.0], [8400.0, 4.0], [8200.0, 2.0], [9000.0, 9.0], [9200.0, 13.0], [8800.0, 14.0], [8900.0, 10.0], [9100.0, 12.0], [9300.0, 4.0], [9500.0, 18.0], [9700.0, 18.0], [9600.0, 12.0], [9400.0, 15.0], [9800.0, 19.0], [10200.0, 53.0], [10100.0, 38.0], [10000.0, 22.0], [9900.0, 16.0], [10300.0, 54.0], [10500.0, 13.0], [10400.0, 28.0], [10600.0, 2.0]], "isOverall": false, "label": "ChooseFlight/purchase.php-237", "isController": false}, {"data": [[200.0, 22.0], [300.0, 227.0], [400.0, 1585.0], [500.0, 613.0], [600.0, 262.0], [700.0, 155.0], [800.0, 109.0], [900.0, 50.0], [1000.0, 13.0], [1100.0, 9.0], [1200.0, 5.0], [1300.0, 2.0], [1400.0, 6.0], [1500.0, 4.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 1.0], [2300.0, 1.0], [2700.0, 1.0], [3000.0, 3.0], [3100.0, 2.0], [3200.0, 2.0], [3300.0, 2.0], [3400.0, 2.0], [3500.0, 3.0], [3600.0, 8.0], [3700.0, 5.0], [3800.0, 2.0], [3900.0, 1.0], [4000.0, 4.0], [4200.0, 5.0], [4300.0, 4.0], [4100.0, 3.0], [4600.0, 4.0], [4400.0, 7.0], [4500.0, 2.0], [4800.0, 1.0], [4700.0, 2.0], [5000.0, 3.0], [5100.0, 8.0], [4900.0, 2.0], [5300.0, 6.0], [5200.0, 2.0], [5500.0, 7.0], [5600.0, 2.0], [5400.0, 6.0], [5700.0, 4.0], [6100.0, 3.0], [5900.0, 1.0], [6000.0, 2.0], [6200.0, 8.0], [6300.0, 5.0], [6600.0, 9.0], [6400.0, 6.0], [6500.0, 4.0], [6900.0, 22.0], [6700.0, 10.0], [6800.0, 12.0], [7100.0, 4.0], [7000.0, 14.0], [7200.0, 8.0], [7300.0, 9.0], [7400.0, 15.0], [7600.0, 4.0], [7500.0, 5.0], [7700.0, 13.0], [7800.0, 4.0], [7900.0, 9.0], [8000.0, 15.0], [8100.0, 6.0], [8300.0, 14.0], [8500.0, 13.0], [8400.0, 13.0], [8200.0, 9.0], [8600.0, 6.0], [8700.0, 7.0], [8800.0, 6.0], [9000.0, 10.0], [9100.0, 11.0], [8900.0, 10.0], [9200.0, 13.0], [9600.0, 15.0], [9400.0, 12.0], [9300.0, 12.0], [9500.0, 12.0], [9700.0, 17.0], [9900.0, 18.0], [9800.0, 17.0], [10000.0, 20.0], [10200.0, 27.0], [10100.0, 26.0], [10300.0, 55.0], [10400.0, 63.0], [10500.0, 35.0], [10700.0, 8.0], [10600.0, 15.0], [11100.0, 1.0], [10800.0, 1.0]], "isOverall": false, "label": "FindFlights/reserve.php-230", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 425.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6878.0, "series": [{"data": [[0.0, 6878.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1737.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2138.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 425.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 253.8793831854664, "minX": 1.70618802E12, "maxY": 275.34838609559296, "series": [{"data": [[1.70618802E12, 253.8793831854664], [1.70618808E12, 275.34838609559296]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group ( Stress Testing )", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70618808E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 270.0, "minX": 1.0, "maxY": 10326.0, "series": [{"data": [[3.0, 7930.0], [6.0, 8130.0], [7.0, 8673.0], [11.0, 8875.0], [13.0, 3154.0], [15.0, 282.0], [16.0, 8198.0], [17.0, 9287.0], [19.0, 282.0], [20.0, 297.0], [21.0, 1808.3333333333333], [23.0, 4371.333333333333], [24.0, 344.0], [28.0, 331.5], [30.0, 270.0], [31.0, 313.0], [32.0, 5543.0], [34.0, 3006.0], [35.0, 1325.5], [36.0, 3028.0], [38.0, 4561.0], [39.0, 327.0], [40.0, 2810.3333333333335], [41.0, 3161.0], [42.0, 324.5], [43.0, 3179.3333333333335], [45.0, 285.0], [46.0, 348.0], [47.0, 332.0], [50.0, 273.0], [51.0, 1203.0], [52.0, 326.0], [53.0, 300.0], [54.0, 436.0], [55.0, 4780.5], [56.0, 2077.333333333333], [57.0, 4532.0], [59.0, 2553.75], [60.0, 4774.0], [61.0, 8908.0], [62.0, 392.5], [63.0, 372.3333333333333], [64.0, 4981.333333333333], [65.0, 312.0], [67.0, 3300.0], [68.0, 307.0], [69.0, 333.0], [71.0, 2822.5], [73.0, 1167.2], [74.0, 4510.0], [75.0, 288.0], [76.0, 342.5], [77.0, 323.0], [78.0, 1616.0], [79.0, 1039.1666666666667], [80.0, 4143.0], [82.0, 316.0], [83.0, 319.5], [84.0, 1998.5], [85.0, 300.0], [86.0, 293.5], [87.0, 330.5], [88.0, 1168.75], [89.0, 2546.3333333333335], [90.0, 294.75], [91.0, 327.5], [92.0, 307.0], [93.0, 1640.8], [94.0, 556.8], [95.0, 5033.5], [96.0, 293.0], [97.0, 308.6], [98.0, 3406.0], [99.0, 3691.666666666667], [100.0, 291.0], [101.0, 395.5], [104.0, 344.8], [107.0, 5503.5], [109.0, 316.75], [110.0, 1218.0], [111.0, 333.5], [112.0, 3579.5], [113.0, 276.0], [114.0, 302.5], [115.0, 805.0], [116.0, 433.0], [119.0, 3934.5], [117.0, 304.6666666666667], [120.0, 3176.0], [121.0, 348.5], [122.0, 319.6666666666667], [127.0, 393.0], [126.0, 295.0], [125.0, 309.0], [124.0, 318.0], [128.0, 3177.0], [130.0, 652.5], [132.0, 360.0], [133.0, 345.5], [134.0, 2026.0], [135.0, 318.0], [136.0, 364.0], [137.0, 335.0], [138.0, 324.0], [140.0, 1713.0], [141.0, 282.0], [142.0, 1915.0], [143.0, 3283.625], [145.0, 318.0], [146.0, 2385.666666666667], [147.0, 1310.6666666666665], [149.0, 2383.0], [150.0, 3387.3333333333335], [151.0, 1868.5], [144.0, 288.5], [152.0, 316.0], [154.0, 1657.8], [156.0, 2468.6], [158.0, 2143.5], [157.0, 5286.666666666667], [159.0, 382.0], [153.0, 304.0], [160.0, 388.5], [161.0, 1600.0], [162.0, 2707.285714285714], [164.0, 2424.6666666666665], [165.0, 1611.0], [167.0, 328.0], [166.0, 607.0], [168.0, 624.5], [171.0, 2850.5], [172.0, 2321.2], [173.0, 4333.25], [174.0, 593.5], [175.0, 384.0], [170.0, 2878.5454545454545], [169.0, 6980.0], [176.0, 337.6666666666667], [177.0, 341.5], [178.0, 432.0], [179.0, 384.0], [180.0, 3026.2], [181.0, 1505.3333333333333], [182.0, 3705.0], [183.0, 3189.3333333333335], [184.0, 380.6666666666667], [185.0, 2605.75], [186.0, 365.0], [188.0, 320.0], [189.0, 2136.0], [190.0, 5278.5], [191.0, 359.00000000000006], [193.0, 1426.1666666666665], [194.0, 1991.7], [195.0, 3054.75], [196.0, 2972.285714285714], [198.0, 300.5], [197.0, 2438.1111111111113], [199.0, 415.8], [192.0, 382.0], [200.0, 303.75], [201.0, 1619.090909090909], [202.0, 358.0], [203.0, 3809.0], [204.0, 2016.5], [205.0, 430.5], [206.0, 1175.4166666666667], [207.0, 1890.0], [208.0, 2142.0], [210.0, 516.0], [211.0, 2642.2], [212.0, 688.5], [214.0, 2801.6666666666665], [215.0, 497.0], [209.0, 3285.4], [216.0, 2203.0], [218.0, 1143.4166666666665], [217.0, 1579.6666666666665], [219.0, 1883.5833333333333], [220.0, 1763.0], [221.0, 1609.5714285714284], [223.0, 311.0], [222.0, 396.4285714285714], [227.0, 363.0], [228.0, 1483.875], [229.0, 1944.6666666666665], [230.0, 2895.3333333333335], [231.0, 3909.4285714285716], [226.0, 4804.0], [225.0, 10270.5], [224.0, 428.0], [232.0, 1441.0], [234.0, 1408.5], [235.0, 2394.0], [236.0, 319.0], [237.0, 643.2], [239.0, 378.75], [238.0, 334.0], [233.0, 5215.833333333334], [240.0, 3180.777777777778], [242.0, 1616.25], [243.0, 2226.9375], [244.0, 1612.625], [245.0, 372.5], [246.0, 471.0], [247.0, 303.0], [248.0, 1862.3333333333333], [249.0, 543.0], [250.0, 1898.75], [251.0, 450.0], [252.0, 380.0], [253.0, 5360.5], [254.0, 1909.5555555555557], [255.0, 1482.8333333333335], [256.0, 1860.9], [257.0, 3521.0], [259.0, 3392.3333333333335], [258.0, 295.5], [268.0, 3844.571428571429], [269.0, 352.6666666666667], [270.0, 1678.684210526316], [271.0, 2170.75], [260.0, 522.5], [261.0, 1052.1999999999998], [262.0, 1583.6923076923076], [263.0, 2705.0], [264.0, 705.0], [265.0, 326.8333333333333], [266.0, 431.0], [267.0, 1672.4444444444443], [273.0, 1537.0], [272.0, 388.25], [274.0, 974.7777777777778], [275.0, 1781.0], [276.0, 759.1666666666666], [277.0, 1723.8888888888891], [278.0, 1198.3333333333335], [279.0, 2385.0555555555557], [280.0, 3727.7499999999995], [286.0, 1369.533333333333], [287.0, 840.0], [284.0, 1906.6470588235286], [285.0, 288.0], [281.0, 3296.857142857143], [282.0, 1363.0], [283.0, 2123.833333333333], [290.0, 380.3333333333333], [288.0, 1483.1764705882351], [289.0, 347.0], [291.0, 1862.3478260869567], [300.0, 1914.8830141548713], [293.0, 1648.3333333333335], [292.0, 1927.2666666666669], [294.0, 3671.2857142857138], [295.0, 657.1111111111111], [296.0, 699.0869565217392], [297.0, 2311.769230769231], [298.0, 1433.5454545454547], [299.0, 3838.8888888888887]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313", "isController": false}, {"data": [[268.9575289575291, 1902.8899613899632]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313-Aggregated", "isController": false}, {"data": [[2.0, 7652.0], [9.0, 8052.0], [10.0, 349.5], [11.0, 318.0], [12.0, 4620.0], [13.0, 364.0], [15.0, 295.0], [16.0, 298.0], [17.0, 294.0], [18.0, 311.0], [19.0, 6189.0], [20.0, 276.5], [21.0, 397.5], [25.0, 398.0], [27.0, 3146.6666666666665], [29.0, 336.0], [30.0, 5400.0], [31.0, 1170.0], [33.0, 3202.0], [34.0, 363.0], [35.0, 3220.0], [36.0, 398.0], [37.0, 278.0], [38.0, 277.0], [39.0, 461.8], [42.0, 2537.0], [43.0, 314.0], [44.0, 392.0], [45.0, 280.0], [47.0, 3990.0], [46.0, 9010.0], [48.0, 1199.3333333333335], [49.0, 4706.5], [50.0, 324.5], [51.0, 2680.0], [53.0, 1770.6], [55.0, 356.0], [56.0, 1757.5], [57.0, 295.0], [58.0, 1277.3333333333335], [59.0, 3180.0], [60.0, 324.0], [61.0, 1998.0], [62.0, 379.25], [65.0, 298.0], [66.0, 4407.25], [67.0, 305.5], [64.0, 320.0], [69.0, 302.0], [70.0, 3160.6666666666665], [71.0, 369.0], [68.0, 7484.0], [72.0, 2136.5], [73.0, 2417.5], [74.0, 293.5], [75.0, 316.6666666666667], [76.0, 3292.3333333333335], [77.0, 291.0], [79.0, 410.0], [78.0, 372.0], [80.0, 1239.142857142857], [81.0, 611.3333333333334], [82.0, 3313.5], [83.0, 1834.0], [84.0, 270.0], [85.0, 3278.0], [86.0, 2554.6666666666665], [87.0, 2546.0], [88.0, 308.0], [89.0, 373.0], [90.0, 3398.0], [91.0, 1430.6666666666665], [92.0, 3266.666666666667], [93.0, 1949.25], [94.0, 315.0], [95.0, 506.2], [96.0, 2177.8], [97.0, 314.6666666666667], [98.0, 356.0], [99.0, 299.0], [101.0, 3600.5], [102.0, 303.0], [103.0, 286.0], [100.0, 9586.0], [104.0, 325.5], [105.0, 2454.333333333333], [107.0, 589.75], [109.0, 332.6666666666667], [111.0, 1666.25], [113.0, 294.0], [114.0, 310.6666666666667], [115.0, 367.0], [112.0, 308.0], [116.0, 3557.6666666666665], [118.0, 292.5], [119.0, 5130.5], [117.0, 8963.0], [121.0, 313.0], [122.0, 3538.6666666666665], [120.0, 309.0], [125.0, 1531.1666666666667], [126.0, 324.57142857142856], [127.0, 279.0], [128.0, 3513.0], [129.0, 366.0], [130.0, 4559.0], [131.0, 364.0], [134.0, 305.6666666666667], [135.0, 320.5], [132.0, 5759.0], [136.0, 372.6666666666667], [137.0, 346.0], [138.0, 334.6666666666667], [139.0, 2691.5], [141.0, 1475.0], [142.0, 288.0], [143.0, 300.0], [144.0, 2205.8], [145.0, 1585.0], [146.0, 292.0], [147.0, 328.0], [150.0, 837.6], [151.0, 338.0], [148.0, 6787.0], [152.0, 1705.0], [153.0, 316.6666666666667], [154.0, 3494.2], [155.0, 349.0], [156.0, 1179.5], [157.0, 2817.333333333333], [160.0, 333.5], [161.0, 912.5], [162.0, 333.25], [164.0, 1955.0], [165.0, 1140.5], [166.0, 355.6666666666667], [167.0, 2869.0], [163.0, 8507.0], [169.0, 2751.0], [170.0, 350.25], [171.0, 430.5], [173.0, 361.5], [174.0, 2217.2], [175.0, 364.2], [168.0, 5223.5], [176.0, 1479.6666666666667], [177.0, 336.0], [179.0, 304.3333333333333], [180.0, 2151.0], [181.0, 2368.4], [182.0, 1787.6666666666665], [183.0, 309.5], [184.0, 356.0], [185.0, 375.75], [186.0, 291.6666666666667], [187.0, 1559.3333333333333], [188.0, 368.0], [189.0, 1565.2499999999998], [190.0, 2877.666666666667], [191.0, 2207.8], [192.0, 1500.5714285714284], [193.0, 605.0], [194.0, 1560.75], [195.0, 705.0], [196.0, 1082.8000000000002], [198.0, 912.4285714285714], [197.0, 333.88888888888886], [199.0, 414.5], [200.0, 4278.2], [201.0, 1930.2307692307693], [202.0, 5482.0], [204.0, 2306.5], [205.0, 2644.4285714285716], [206.0, 2525.0000000000005], [207.0, 1642.3333333333335], [203.0, 4910.5], [209.0, 323.8888888888889], [210.0, 1536.75], [211.0, 1904.2], [212.0, 3061.5], [213.0, 334.0], [214.0, 307.0], [215.0, 7706.0], [208.0, 10326.0], [216.0, 1544.0], [218.0, 1499.6363636363635], [217.0, 319.0], [219.0, 1510.0], [220.0, 395.0], [221.0, 1633.7692307692307], [223.0, 3604.0], [222.0, 338.0], [224.0, 2793.0], [225.0, 348.0], [226.0, 280.0], [228.0, 2823.75], [227.0, 1737.6], [229.0, 376.3333333333333], [230.0, 1645.857142857143], [231.0, 1059.5555555555554], [232.0, 1510.3333333333333], [233.0, 366.8], [234.0, 326.3333333333333], [235.0, 2276.0], [236.0, 1607.2], [237.0, 525.6], [238.0, 2331.5], [239.0, 428.0], [240.0, 2313.4], [241.0, 709.75], [242.0, 1286.4545454545457], [243.0, 1433.5], [244.0, 2339.75], [245.0, 2838.857142857143], [246.0, 2220.125], [247.0, 2389.4], [248.0, 306.27272727272725], [249.0, 3211.5000000000005], [250.0, 311.25], [251.0, 5151.0], [253.0, 441.0], [254.0, 1051.7777777777778], [255.0, 3031.6666666666665], [252.0, 3446.5], [258.0, 351.125], [256.0, 890.9090909090912], [257.0, 437.3333333333333], [259.0, 579.0], [268.0, 2273.357142857143], [269.0, 433.25], [270.0, 957.2666666666667], [271.0, 2218.375], [260.0, 338.0], [261.0, 1237.235294117647], [262.0, 1976.8333333333333], [263.0, 1493.0000000000002], [264.0, 1958.75], [265.0, 333.0], [266.0, 332.0], [267.0, 954.3333333333334], [273.0, 1475.5], [272.0, 3232.4285714285716], [275.0, 391.8333333333333], [274.0, 630.0], [284.0, 2029.1666666666665], [285.0, 5746.75], [286.0, 2481.4285714285716], [287.0, 1162.0000000000002], [276.0, 2546.0], [277.0, 1587.7941176470583], [278.0, 355.0], [279.0, 1727.125], [280.0, 327.75], [281.0, 1229.6399999999999], [282.0, 2398.25], [283.0, 2799.25], [289.0, 4981.555555555556], [288.0, 1307.0000000000002], [290.0, 306.25], [291.0, 2353.4736842105262], [292.0, 2380.083333333333], [293.0, 606.2941176470588], [294.0, 2164.8181818181815], [295.0, 1217.6666666666667], [296.0, 1516.7083333333335], [300.0, 1970.8382536382508], [298.0, 3195.9285714285716], [299.0, 1854.6399999999996], [297.0, 3785.75], [1.0, 7203.0]], "isOverall": false, "label": "ChooseFlight/purchase.php-237", "isController": false}, {"data": [[266.4991944146082, 1864.859291084854]], "isOverall": false, "label": "ChooseFlight/purchase.php-237-Aggregated", "isController": false}, {"data": [[4.0, 8218.0], [5.0, 8144.0], [6.0, 483.0], [7.0, 408.0], [8.0, 9100.0], [9.0, 411.0], [10.0, 4758.5], [12.0, 816.5], [13.0, 496.0], [14.0, 2974.0], [15.0, 2956.5], [16.0, 478.0], [17.0, 447.0], [18.0, 1619.0], [19.0, 425.0], [20.0, 2451.5], [22.0, 402.0], [24.0, 2432.333333333333], [25.0, 3247.0], [26.0, 389.0], [27.0, 2508.0], [28.0, 3259.6666666666665], [29.0, 2179.0], [31.0, 808.0], [32.0, 2559.6666666666665], [33.0, 444.0], [34.0, 461.5], [35.0, 1105.0], [36.0, 453.3333333333333], [37.0, 4845.5], [39.0, 444.5], [40.0, 2636.25], [42.0, 449.0], [44.0, 2673.6666666666665], [45.0, 4668.0], [46.0, 509.0], [47.0, 490.0], [48.0, 4882.5], [49.0, 387.5], [50.0, 3015.0], [51.0, 2811.0], [52.0, 4853.0], [53.0, 518.0], [54.0, 410.5], [55.0, 3282.0], [56.0, 433.0], [57.0, 487.5], [58.0, 491.0], [59.0, 492.6666666666667], [61.0, 398.0], [62.0, 4215.0], [63.0, 1356.6666666666667], [65.0, 395.5], [66.0, 395.0], [67.0, 422.75], [68.0, 386.0], [69.0, 1915.0], [70.0, 1501.3333333333335], [71.0, 994.5], [72.0, 639.2], [73.0, 424.0], [74.0, 412.0], [75.0, 442.0], [77.0, 910.5], [78.0, 900.2857142857143], [79.0, 3290.0], [76.0, 398.0], [80.0, 1096.2], [81.0, 388.0], [82.0, 2128.5], [83.0, 426.5], [84.0, 496.25], [85.0, 419.0], [86.0, 417.5], [87.0, 413.5], [88.0, 1715.5], [89.0, 445.6666666666667], [90.0, 717.75], [91.0, 1477.4], [92.0, 402.0], [93.0, 445.5], [94.0, 451.3333333333333], [95.0, 5092.5], [96.0, 453.0], [97.0, 4722.666666666667], [98.0, 438.1666666666667], [99.0, 2178.666666666667], [100.0, 714.25], [102.0, 4846.5], [103.0, 402.0], [101.0, 9295.0], [106.0, 471.0], [107.0, 2057.5], [104.0, 2553.3333333333335], [108.0, 440.25], [109.0, 408.0], [110.0, 2528.5], [111.0, 4230.0], [112.0, 403.0], [113.0, 2283.25], [114.0, 3753.0], [115.0, 5261.0], [116.0, 540.0], [118.0, 1637.5], [117.0, 4567.166666666666], [119.0, 387.0], [120.0, 1568.0], [121.0, 2343.2], [122.0, 569.0], [123.0, 461.5], [124.0, 2272.5], [125.0, 494.5], [127.0, 458.5], [126.0, 429.0], [128.0, 2986.5], [129.0, 439.6666666666667], [130.0, 3860.5], [131.0, 457.0], [132.0, 2062.0], [133.0, 2842.0], [134.0, 3472.4], [136.0, 405.5], [137.0, 1408.8333333333333], [138.0, 441.125], [139.0, 2811.0], [140.0, 2564.3333333333335], [141.0, 454.0], [142.0, 3312.3999999999996], [143.0, 419.0], [144.0, 2286.25], [145.0, 1726.4], [146.0, 428.0], [148.0, 1242.0], [147.0, 408.0], [149.0, 446.5], [150.0, 408.0], [151.0, 324.0], [152.0, 432.0], [153.0, 2099.75], [154.0, 464.3333333333333], [155.0, 843.6666666666666], [156.0, 1897.0], [157.0, 1020.0000000000001], [158.0, 830.3333333333334], [159.0, 5288.0], [160.0, 4148.0], [161.0, 512.5], [162.0, 2541.625], [163.0, 4792.75], [164.0, 2510.2], [165.0, 558.75], [166.0, 1262.25], [167.0, 2933.0], [168.0, 2559.3333333333335], [170.0, 2200.0], [171.0, 2534.625], [172.0, 3513.0], [173.0, 2125.25], [174.0, 1276.5], [175.0, 1088.0], [176.0, 1968.9999999999998], [178.0, 1578.25], [179.0, 517.0], [181.0, 2496.5], [182.0, 522.6666666666666], [183.0, 2134.0], [180.0, 4504.666666666667], [184.0, 753.4], [185.0, 6658.5], [186.0, 473.3333333333333], [187.0, 2554.3333333333335], [188.0, 3742.0], [189.0, 1136.5833333333333], [190.0, 551.0], [191.0, 1315.625], [192.0, 431.3333333333333], [193.0, 494.0], [194.0, 1416.25], [197.0, 498.2], [198.0, 441.25], [199.0, 460.0], [196.0, 2037.5], [200.0, 1362.25], [202.0, 445.0], [203.0, 450.625], [204.0, 534.5], [205.0, 1840.5], [206.0, 485.55555555555554], [207.0, 559.875], [201.0, 2889.0], [208.0, 2995.25], [209.0, 447.83333333333337], [210.0, 1598.5], [211.0, 1180.2222222222222], [212.0, 2051.0], [213.0, 486.4], [215.0, 412.0], [216.0, 3254.8333333333335], [218.0, 1647.2], [217.0, 3106.333333333333], [219.0, 4471.625], [220.0, 648.0], [221.0, 914.875], [222.0, 1490.3333333333335], [223.0, 577.3333333333334], [224.0, 550.6666666666666], [225.0, 679.6], [226.0, 2542.0], [228.0, 491.42857142857144], [227.0, 2818.3333333333335], [230.0, 3605.5833333333335], [231.0, 1918.4], [229.0, 2206.0], [232.0, 1960.7499999999998], [234.0, 491.0], [235.0, 599.0], [238.0, 3455.6666666666665], [237.0, 456.3333333333333], [239.0, 474.875], [233.0, 474.25], [240.0, 3282.3333333333335], [241.0, 2762.333333333333], [242.0, 1937.0], [243.0, 803.6666666666667], [245.0, 1226.0], [247.0, 2771.0], [246.0, 509.0], [244.0, 385.5], [248.0, 2256.6666666666665], [249.0, 2147.5], [250.0, 2201.25], [251.0, 406.3333333333333], [252.0, 1998.4285714285716], [253.0, 564.8], [254.0, 2769.5], [255.0, 1650.111111111111], [257.0, 1596.25], [256.0, 1728.076923076923], [258.0, 1352.4285714285713], [259.0, 783.5], [260.0, 2608.75], [261.0, 1726.9166666666667], [262.0, 544.3333333333334], [263.0, 2760.9999999999995], [264.0, 3359.4], [271.0, 1343.8333333333333], [269.0, 459.5], [268.0, 1522.8125], [270.0, 2393.1], [265.0, 1147.625], [266.0, 578.0], [267.0, 3337.0], [274.0, 3724.6363636363635], [273.0, 529.4], [275.0, 520.3333333333334], [284.0, 1535.0714285714284], [285.0, 1607.7777777777778], [286.0, 561.0], [287.0, 3594.125], [276.0, 1922.1666666666667], [277.0, 3015.241379310345], [278.0, 469.5], [279.0, 1190.6363636363635], [272.0, 9057.0], [280.0, 486.75], [281.0, 2743.3157894736846], [282.0, 448.6666666666667], [283.0, 927.2727272727271], [289.0, 2702.736842105263], [288.0, 1089.0625000000002], [290.0, 490.0], [291.0, 1002.1578947368417], [292.0, 1249.3684210526314], [293.0, 3011.666666666667], [294.0, 932.0666666666666], [295.0, 1978.8461538461538], [297.0, 3860.6666666666665], [300.0, 2262.09756097561], [296.0, 2210.3571428571427], [298.0, 3264.5555555555557], [299.0, 2167.7333333333336]], "isOverall": false, "label": "FindFlights/reserve.php-230", "isController": false}, {"data": [[263.46055381400276, 2093.4506269592453]], "isOverall": false, "label": "FindFlights/reserve.php-230-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 55747.0, "minX": 1.70618802E12, "maxY": 249284.18333333332, "series": [{"data": [[1.70618802E12, 188865.3], [1.70618808E12, 249284.18333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70618802E12, 55747.0], [1.70618808E12, 76229.65]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70618808E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1558.2521915037098, "minX": 1.70618802E12, "maxY": 2352.171150278293, "series": [{"data": [[1.70618802E12, 1558.2521915037098], [1.70618808E12, 2141.3863742417143]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313", "isController": false}, {"data": [[1.70618802E12, 1611.4262191260323], [1.70618808E12, 2051.4191142191153]], "isOverall": false, "label": "ChooseFlight/purchase.php-237", "isController": false}, {"data": [[1.70618802E12, 1759.8373205741618], [1.70618808E12, 2352.171150278293]], "isOverall": false, "label": "FindFlights/reserve.php-230", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70618808E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1556.7869184086308, "minX": 1.70618802E12, "maxY": 2350.763914656775, "series": [{"data": [[1.70618802E12, 1556.7869184086308], [1.70618808E12, 2139.341110592627]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313", "isController": false}, {"data": [[1.70618802E12, 1609.5085497150108], [1.70618808E12, 2048.544522144521]], "isOverall": false, "label": "ChooseFlight/purchase.php-237", "isController": false}, {"data": [[1.70618802E12, 1758.5029904306216], [1.70618808E12, 2350.763914656775]], "isOverall": false, "label": "FindFlights/reserve.php-230", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70618808E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70618802E12, "maxY": 172.14749536178138, "series": [{"data": [[1.70618802E12, 0.0], [1.70618808E12, 0.0]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313", "isController": false}, {"data": [[1.70618802E12, 0.0], [1.70618808E12, 0.0]], "isOverall": false, "label": "ChooseFlight/purchase.php-237", "isController": false}, {"data": [[1.70618802E12, 137.73205741626793], [1.70618808E12, 172.14749536178138]], "isOverall": false, "label": "FindFlights/reserve.php-230", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70618808E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 260.0, "minX": 1.70618802E12, "maxY": 11129.0, "series": [{"data": [[1.70618802E12, 10731.0], [1.70618808E12, 11129.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70618802E12, 262.0], [1.70618808E12, 260.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70618802E12, 7361.600000000008], [1.70618808E12, 9264.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70618802E12, 10420.77], [1.70618808E12, 10476.86]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70618802E12, 422.0], [1.70618808E12, 450.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70618802E12, 9644.249999999996], [1.70618808E12, 10143.3]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70618808E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 173.0, "minX": 4.0, "maxY": 10404.0, "series": [{"data": [[4.0, 7791.0], [8.0, 8198.5], [16.0, 6542.5], [17.0, 7045.0], [28.0, 368.0], [34.0, 399.5], [40.0, 420.0], [42.0, 375.0], [45.0, 413.0], [52.0, 387.5], [57.0, 458.0], [63.0, 406.0], [65.0, 392.0], [75.0, 527.0], [76.0, 378.0], [82.0, 361.5], [91.0, 402.0], [97.0, 396.0], [96.0, 386.0], [101.0, 416.0], [106.0, 437.0], [110.0, 420.5], [111.0, 495.0], [115.0, 746.5], [118.0, 411.5], [117.0, 537.5], [123.0, 516.0], [122.0, 433.0], [126.0, 412.5], [127.0, 398.0], [124.0, 486.0], [131.0, 438.0], [129.0, 474.5], [133.0, 424.5], [130.0, 415.5], [134.0, 494.5], [135.0, 439.0], [137.0, 429.5], [140.0, 409.0], [136.0, 427.0], [139.0, 442.0], [141.0, 440.0], [142.0, 446.5], [143.0, 519.0], [145.0, 428.0], [144.0, 453.0], [146.0, 429.5], [151.0, 482.0], [156.0, 411.5], [155.0, 427.0], [152.0, 449.0], [157.0, 516.0], [154.0, 407.0], [153.0, 518.5], [159.0, 410.0], [162.0, 453.0], [165.0, 412.0], [161.0, 400.5], [167.0, 449.5], [160.0, 514.5], [168.0, 403.0], [180.0, 478.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[57.0, 284.0], [63.0, 294.0], [75.0, 231.0], [91.0, 184.0], [96.0, 184.0], [101.0, 177.0], [106.0, 183.0], [111.0, 521.5], [115.0, 259.0], [118.0, 189.0], [117.0, 193.0], [122.0, 246.0], [123.0, 511.0], [126.0, 178.0], [124.0, 302.5], [129.0, 10404.0], [133.0, 10254.0], [130.0, 190.0], [134.0, 282.5], [135.0, 237.0], [139.0, 233.0], [141.0, 210.0], [142.0, 306.5], [143.0, 401.5], [137.0, 303.0], [145.0, 238.0], [144.0, 308.0], [146.0, 220.0], [151.0, 330.0], [156.0, 180.0], [155.0, 10298.0], [152.0, 182.0], [157.0, 251.5], [154.0, 188.0], [153.0, 177.0], [159.0, 240.5], [162.0, 5271.5], [165.0, 300.0], [161.0, 179.0], [167.0, 173.0], [160.0, 264.5], [168.0, 312.0], [180.0, 312.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 180.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 173.0, "minX": 4.0, "maxY": 10404.0, "series": [{"data": [[4.0, 7789.5], [8.0, 8198.5], [16.0, 6542.5], [17.0, 7045.0], [28.0, 368.0], [34.0, 398.0], [40.0, 411.0], [42.0, 375.0], [45.0, 413.0], [52.0, 387.5], [57.0, 458.0], [63.0, 406.0], [65.0, 392.0], [75.0, 527.0], [76.0, 377.5], [82.0, 361.5], [91.0, 402.0], [97.0, 395.5], [96.0, 385.0], [101.0, 415.5], [106.0, 432.0], [110.0, 419.5], [111.0, 495.0], [115.0, 746.5], [118.0, 411.0], [117.0, 534.5], [123.0, 508.5], [122.0, 430.0], [126.0, 410.0], [127.0, 398.0], [124.0, 483.5], [131.0, 438.0], [129.0, 473.5], [133.0, 424.5], [130.0, 415.0], [134.0, 493.5], [135.0, 436.0], [137.0, 428.5], [140.0, 409.0], [136.0, 426.5], [139.0, 441.0], [141.0, 439.0], [142.0, 444.0], [143.0, 519.0], [145.0, 427.0], [144.0, 452.0], [146.0, 428.0], [151.0, 482.0], [156.0, 411.0], [155.0, 427.0], [152.0, 449.0], [157.0, 514.0], [154.0, 407.0], [153.0, 514.5], [159.0, 406.0], [162.0, 450.0], [165.0, 412.0], [161.0, 399.0], [167.0, 449.5], [160.0, 514.5], [168.0, 403.0], [180.0, 475.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[57.0, 284.0], [63.0, 294.0], [75.0, 231.0], [91.0, 184.0], [96.0, 184.0], [101.0, 177.0], [106.0, 183.0], [111.0, 521.5], [115.0, 259.0], [118.0, 189.0], [117.0, 193.0], [122.0, 246.0], [123.0, 511.0], [126.0, 178.0], [124.0, 302.5], [129.0, 10404.0], [133.0, 10254.0], [130.0, 190.0], [134.0, 282.5], [135.0, 237.0], [139.0, 233.0], [141.0, 210.0], [142.0, 306.5], [143.0, 401.5], [137.0, 303.0], [145.0, 238.0], [144.0, 308.0], [146.0, 220.0], [151.0, 330.0], [156.0, 180.0], [155.0, 10298.0], [152.0, 182.0], [157.0, 251.5], [154.0, 188.0], [153.0, 177.0], [159.0, 240.5], [162.0, 5271.5], [165.0, 300.0], [161.0, 179.0], [167.0, 173.0], [160.0, 264.5], [168.0, 312.0], [180.0, 312.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 180.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.73333333333333, "minX": 1.70618802E12, "maxY": 102.56666666666666, "series": [{"data": [[1.70618802E12, 83.73333333333333], [1.70618808E12, 102.56666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70618808E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.5666666666666667, "minX": 1.70618802E12, "maxY": 101.88333333333334, "series": [{"data": [[1.70618802E12, 77.33333333333333], [1.70618808E12, 101.88333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70618802E12, 1.5666666666666667], [1.70618808E12, 5.516666666666667]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70618808E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.70618802E12, "maxY": 34.11666666666667, "series": [{"data": [[1.70618802E12, 25.8], [1.70618808E12, 33.75]], "isOverall": false, "label": "ChooseFlight/purchase.php-237-success", "isController": false}, {"data": [[1.70618802E12, 0.5166666666666667], [1.70618808E12, 2.0]], "isOverall": false, "label": "ChooseFlight/purchase.php-237-failure", "isController": false}, {"data": [[1.70618802E12, 27.4], [1.70618808E12, 34.016666666666666]], "isOverall": false, "label": "FindFlights/reserve.php-230-success", "isController": false}, {"data": [[1.70618802E12, 24.133333333333333], [1.70618808E12, 34.11666666666667]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313-success", "isController": false}, {"data": [[1.70618802E12, 0.4666666666666667], [1.70618808E12, 1.9166666666666667]], "isOverall": false, "label": "FindFlights/reserve.php-230-failure", "isController": false}, {"data": [[1.70618802E12, 0.5833333333333334], [1.70618808E12, 1.6]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70618808E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.5666666666666667, "minX": 1.70618802E12, "maxY": 101.88333333333334, "series": [{"data": [[1.70618802E12, 77.33333333333333], [1.70618808E12, 101.88333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70618802E12, 1.5666666666666667], [1.70618808E12, 5.516666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70618808E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

