/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 165.0, "minX": 0.0, "maxY": 16540.0, "series": [{"data": [[0.0, 166.0], [0.1, 169.0], [0.2, 170.0], [0.3, 171.0], [0.4, 172.0], [0.5, 173.0], [0.6, 173.0], [0.7, 174.0], [0.8, 175.0], [0.9, 175.0], [1.0, 175.0], [1.1, 176.0], [1.2, 176.0], [1.3, 177.0], [1.4, 177.0], [1.5, 177.0], [1.6, 177.0], [1.7, 177.0], [1.8, 177.0], [1.9, 178.0], [2.0, 178.0], [2.1, 179.0], [2.2, 179.0], [2.3, 179.0], [2.4, 179.0], [2.5, 179.0], [2.6, 180.0], [2.7, 180.0], [2.8, 180.0], [2.9, 181.0], [3.0, 181.0], [3.1, 181.0], [3.2, 181.0], [3.3, 181.0], [3.4, 182.0], [3.5, 182.0], [3.6, 182.0], [3.7, 183.0], [3.8, 183.0], [3.9, 183.0], [4.0, 184.0], [4.1, 184.0], [4.2, 184.0], [4.3, 185.0], [4.4, 185.0], [4.5, 185.0], [4.6, 186.0], [4.7, 186.0], [4.8, 187.0], [4.9, 187.0], [5.0, 188.0], [5.1, 188.0], [5.2, 188.0], [5.3, 189.0], [5.4, 189.0], [5.5, 189.0], [5.6, 189.0], [5.7, 190.0], [5.8, 190.0], [5.9, 190.0], [6.0, 190.0], [6.1, 190.0], [6.2, 191.0], [6.3, 191.0], [6.4, 192.0], [6.5, 192.0], [6.6, 193.0], [6.7, 193.0], [6.8, 193.0], [6.9, 194.0], [7.0, 194.0], [7.1, 194.0], [7.2, 195.0], [7.3, 196.0], [7.4, 197.0], [7.5, 197.0], [7.6, 197.0], [7.7, 197.0], [7.8, 198.0], [7.9, 198.0], [8.0, 199.0], [8.1, 200.0], [8.2, 200.0], [8.3, 201.0], [8.4, 201.0], [8.5, 202.0], [8.6, 203.0], [8.7, 203.0], [8.8, 204.0], [8.9, 204.0], [9.0, 205.0], [9.1, 205.0], [9.2, 205.0], [9.3, 205.0], [9.4, 206.0], [9.5, 206.0], [9.6, 207.0], [9.7, 207.0], [9.8, 208.0], [9.9, 209.0], [10.0, 210.0], [10.1, 210.0], [10.2, 211.0], [10.3, 212.0], [10.4, 213.0], [10.5, 214.0], [10.6, 215.0], [10.7, 215.0], [10.8, 216.0], [10.9, 217.0], [11.0, 218.0], [11.1, 220.0], [11.2, 221.0], [11.3, 222.0], [11.4, 224.0], [11.5, 226.0], [11.6, 227.0], [11.7, 228.0], [11.8, 229.0], [11.9, 234.0], [12.0, 238.0], [12.1, 242.0], [12.2, 243.0], [12.3, 246.0], [12.4, 248.0], [12.5, 251.0], [12.6, 253.0], [12.7, 262.0], [12.8, 267.0], [12.9, 271.0], [13.0, 273.0], [13.1, 275.0], [13.2, 277.0], [13.3, 278.0], [13.4, 280.0], [13.5, 281.0], [13.6, 282.0], [13.7, 283.0], [13.8, 283.0], [13.9, 285.0], [14.0, 286.0], [14.1, 286.0], [14.2, 287.0], [14.3, 287.0], [14.4, 288.0], [14.5, 288.0], [14.6, 289.0], [14.7, 289.0], [14.8, 291.0], [14.9, 292.0], [15.0, 293.0], [15.1, 293.0], [15.2, 294.0], [15.3, 295.0], [15.4, 295.0], [15.5, 296.0], [15.6, 297.0], [15.7, 298.0], [15.8, 299.0], [15.9, 299.0], [16.0, 300.0], [16.1, 300.0], [16.2, 301.0], [16.3, 301.0], [16.4, 302.0], [16.5, 303.0], [16.6, 303.0], [16.7, 304.0], [16.8, 305.0], [16.9, 305.0], [17.0, 306.0], [17.1, 306.0], [17.2, 307.0], [17.3, 307.0], [17.4, 308.0], [17.5, 309.0], [17.6, 309.0], [17.7, 310.0], [17.8, 311.0], [17.9, 312.0], [18.0, 313.0], [18.1, 314.0], [18.2, 314.0], [18.3, 315.0], [18.4, 316.0], [18.5, 317.0], [18.6, 317.0], [18.7, 318.0], [18.8, 318.0], [18.9, 319.0], [19.0, 321.0], [19.1, 322.0], [19.2, 322.0], [19.3, 323.0], [19.4, 324.0], [19.5, 325.0], [19.6, 326.0], [19.7, 327.0], [19.8, 328.0], [19.9, 329.0], [20.0, 330.0], [20.1, 331.0], [20.2, 332.0], [20.3, 333.0], [20.4, 334.0], [20.5, 334.0], [20.6, 335.0], [20.7, 337.0], [20.8, 337.0], [20.9, 338.0], [21.0, 339.0], [21.1, 339.0], [21.2, 341.0], [21.3, 342.0], [21.4, 343.0], [21.5, 345.0], [21.6, 346.0], [21.7, 347.0], [21.8, 348.0], [21.9, 349.0], [22.0, 349.0], [22.1, 351.0], [22.2, 351.0], [22.3, 352.0], [22.4, 353.0], [22.5, 354.0], [22.6, 355.0], [22.7, 355.0], [22.8, 357.0], [22.9, 357.0], [23.0, 358.0], [23.1, 359.0], [23.2, 360.0], [23.3, 361.0], [23.4, 362.0], [23.5, 362.0], [23.6, 363.0], [23.7, 364.0], [23.8, 364.0], [23.9, 365.0], [24.0, 366.0], [24.1, 367.0], [24.2, 368.0], [24.3, 368.0], [24.4, 370.0], [24.5, 371.0], [24.6, 372.0], [24.7, 374.0], [24.8, 374.0], [24.9, 375.0], [25.0, 376.0], [25.1, 376.0], [25.2, 377.0], [25.3, 378.0], [25.4, 378.0], [25.5, 379.0], [25.6, 380.0], [25.7, 381.0], [25.8, 382.0], [25.9, 382.0], [26.0, 384.0], [26.1, 384.0], [26.2, 385.0], [26.3, 385.0], [26.4, 386.0], [26.5, 387.0], [26.6, 388.0], [26.7, 389.0], [26.8, 391.0], [26.9, 392.0], [27.0, 393.0], [27.1, 393.0], [27.2, 394.0], [27.3, 395.0], [27.4, 396.0], [27.5, 397.0], [27.6, 397.0], [27.7, 398.0], [27.8, 400.0], [27.9, 400.0], [28.0, 401.0], [28.1, 402.0], [28.2, 404.0], [28.3, 406.0], [28.4, 407.0], [28.5, 408.0], [28.6, 408.0], [28.7, 409.0], [28.8, 410.0], [28.9, 411.0], [29.0, 412.0], [29.1, 412.0], [29.2, 413.0], [29.3, 415.0], [29.4, 416.0], [29.5, 417.0], [29.6, 417.0], [29.7, 418.0], [29.8, 420.0], [29.9, 420.0], [30.0, 422.0], [30.1, 424.0], [30.2, 425.0], [30.3, 426.0], [30.4, 428.0], [30.5, 429.0], [30.6, 430.0], [30.7, 433.0], [30.8, 434.0], [30.9, 435.0], [31.0, 436.0], [31.1, 437.0], [31.2, 439.0], [31.3, 440.0], [31.4, 441.0], [31.5, 442.0], [31.6, 443.0], [31.7, 444.0], [31.8, 445.0], [31.9, 446.0], [32.0, 448.0], [32.1, 449.0], [32.2, 451.0], [32.3, 452.0], [32.4, 453.0], [32.5, 454.0], [32.6, 454.0], [32.7, 456.0], [32.8, 456.0], [32.9, 457.0], [33.0, 459.0], [33.1, 461.0], [33.2, 463.0], [33.3, 465.0], [33.4, 467.0], [33.5, 470.0], [33.6, 471.0], [33.7, 472.0], [33.8, 474.0], [33.9, 476.0], [34.0, 476.0], [34.1, 479.0], [34.2, 481.0], [34.3, 482.0], [34.4, 485.0], [34.5, 487.0], [34.6, 489.0], [34.7, 490.0], [34.8, 491.0], [34.9, 493.0], [35.0, 496.0], [35.1, 496.0], [35.2, 497.0], [35.3, 499.0], [35.4, 501.0], [35.5, 501.0], [35.6, 503.0], [35.7, 505.0], [35.8, 508.0], [35.9, 509.0], [36.0, 510.0], [36.1, 512.0], [36.2, 513.0], [36.3, 513.0], [36.4, 516.0], [36.5, 520.0], [36.6, 522.0], [36.7, 524.0], [36.8, 526.0], [36.9, 529.0], [37.0, 531.0], [37.1, 534.0], [37.2, 536.0], [37.3, 537.0], [37.4, 539.0], [37.5, 541.0], [37.6, 543.0], [37.7, 546.0], [37.8, 548.0], [37.9, 551.0], [38.0, 554.0], [38.1, 557.0], [38.2, 558.0], [38.3, 561.0], [38.4, 564.0], [38.5, 566.0], [38.6, 567.0], [38.7, 569.0], [38.8, 573.0], [38.9, 575.0], [39.0, 576.0], [39.1, 578.0], [39.2, 579.0], [39.3, 581.0], [39.4, 581.0], [39.5, 584.0], [39.6, 586.0], [39.7, 587.0], [39.8, 591.0], [39.9, 591.0], [40.0, 592.0], [40.1, 597.0], [40.2, 600.0], [40.3, 602.0], [40.4, 602.0], [40.5, 604.0], [40.6, 608.0], [40.7, 611.0], [40.8, 612.0], [40.9, 615.0], [41.0, 616.0], [41.1, 617.0], [41.2, 621.0], [41.3, 624.0], [41.4, 628.0], [41.5, 631.0], [41.6, 634.0], [41.7, 638.0], [41.8, 640.0], [41.9, 643.0], [42.0, 644.0], [42.1, 647.0], [42.2, 649.0], [42.3, 655.0], [42.4, 660.0], [42.5, 663.0], [42.6, 665.0], [42.7, 667.0], [42.8, 670.0], [42.9, 672.0], [43.0, 676.0], [43.1, 681.0], [43.2, 683.0], [43.3, 687.0], [43.4, 691.0], [43.5, 697.0], [43.6, 700.0], [43.7, 702.0], [43.8, 712.0], [43.9, 715.0], [44.0, 718.0], [44.1, 724.0], [44.2, 725.0], [44.3, 727.0], [44.4, 732.0], [44.5, 735.0], [44.6, 739.0], [44.7, 740.0], [44.8, 743.0], [44.9, 745.0], [45.0, 748.0], [45.1, 751.0], [45.2, 756.0], [45.3, 761.0], [45.4, 768.0], [45.5, 774.0], [45.6, 780.0], [45.7, 787.0], [45.8, 793.0], [45.9, 796.0], [46.0, 804.0], [46.1, 810.0], [46.2, 815.0], [46.3, 825.0], [46.4, 827.0], [46.5, 831.0], [46.6, 835.0], [46.7, 841.0], [46.8, 843.0], [46.9, 845.0], [47.0, 849.0], [47.1, 861.0], [47.2, 865.0], [47.3, 869.0], [47.4, 873.0], [47.5, 881.0], [47.6, 883.0], [47.7, 892.0], [47.8, 897.0], [47.9, 908.0], [48.0, 912.0], [48.1, 924.0], [48.2, 929.0], [48.3, 951.0], [48.4, 955.0], [48.5, 960.0], [48.6, 965.0], [48.7, 972.0], [48.8, 981.0], [48.9, 985.0], [49.0, 992.0], [49.1, 995.0], [49.2, 1002.0], [49.3, 1017.0], [49.4, 1026.0], [49.5, 1034.0], [49.6, 1039.0], [49.7, 1052.0], [49.8, 1059.0], [49.9, 1062.0], [50.0, 1070.0], [50.1, 1079.0], [50.2, 1087.0], [50.3, 1111.0], [50.4, 1123.0], [50.5, 1128.0], [50.6, 1135.0], [50.7, 1140.0], [50.8, 1155.0], [50.9, 1176.0], [51.0, 1181.0], [51.1, 1200.0], [51.2, 1216.0], [51.3, 1231.0], [51.4, 1235.0], [51.5, 1248.0], [51.6, 1254.0], [51.7, 1263.0], [51.8, 1270.0], [51.9, 1283.0], [52.0, 1290.0], [52.1, 1297.0], [52.2, 1318.0], [52.3, 1327.0], [52.4, 1334.0], [52.5, 1345.0], [52.6, 1351.0], [52.7, 1363.0], [52.8, 1369.0], [52.9, 1378.0], [53.0, 1387.0], [53.1, 1396.0], [53.2, 1411.0], [53.3, 1418.0], [53.4, 1432.0], [53.5, 1438.0], [53.6, 1449.0], [53.7, 1452.0], [53.8, 1462.0], [53.9, 1465.0], [54.0, 1470.0], [54.1, 1474.0], [54.2, 1482.0], [54.3, 1488.0], [54.4, 1492.0], [54.5, 1494.0], [54.6, 1502.0], [54.7, 1512.0], [54.8, 1524.0], [54.9, 1529.0], [55.0, 1538.0], [55.1, 1547.0], [55.2, 1550.0], [55.3, 1555.0], [55.4, 1567.0], [55.5, 1574.0], [55.6, 1585.0], [55.7, 1592.0], [55.8, 1597.0], [55.9, 1599.0], [56.0, 1620.0], [56.1, 1644.0], [56.2, 1660.0], [56.3, 1678.0], [56.4, 1692.0], [56.5, 1702.0], [56.6, 1716.0], [56.7, 1722.0], [56.8, 1741.0], [56.9, 1756.0], [57.0, 1764.0], [57.1, 1774.0], [57.2, 1780.0], [57.3, 1792.0], [57.4, 1800.0], [57.5, 1811.0], [57.6, 1817.0], [57.7, 1827.0], [57.8, 1836.0], [57.9, 1844.0], [58.0, 1849.0], [58.1, 1851.0], [58.2, 1853.0], [58.3, 1856.0], [58.4, 1863.0], [58.5, 1869.0], [58.6, 1875.0], [58.7, 1883.0], [58.8, 1889.0], [58.9, 1896.0], [59.0, 1906.0], [59.1, 1914.0], [59.2, 1917.0], [59.3, 1926.0], [59.4, 1935.0], [59.5, 1940.0], [59.6, 1943.0], [59.7, 1945.0], [59.8, 1951.0], [59.9, 1960.0], [60.0, 1965.0], [60.1, 1967.0], [60.2, 1969.0], [60.3, 1972.0], [60.4, 1974.0], [60.5, 1982.0], [60.6, 1987.0], [60.7, 1992.0], [60.8, 2003.0], [60.9, 2004.0], [61.0, 2008.0], [61.1, 2012.0], [61.2, 2014.0], [61.3, 2023.0], [61.4, 2031.0], [61.5, 2040.0], [61.6, 2054.0], [61.7, 2058.0], [61.8, 2064.0], [61.9, 2077.0], [62.0, 2078.0], [62.1, 2089.0], [62.2, 2091.0], [62.3, 2106.0], [62.4, 2109.0], [62.5, 2118.0], [62.6, 2124.0], [62.7, 2129.0], [62.8, 2138.0], [62.9, 2144.0], [63.0, 2154.0], [63.1, 2161.0], [63.2, 2169.0], [63.3, 2173.0], [63.4, 2181.0], [63.5, 2183.0], [63.6, 2189.0], [63.7, 2195.0], [63.8, 2199.0], [63.9, 2202.0], [64.0, 2209.0], [64.1, 2216.0], [64.2, 2218.0], [64.3, 2227.0], [64.4, 2240.0], [64.5, 2242.0], [64.6, 2245.0], [64.7, 2248.0], [64.8, 2252.0], [64.9, 2257.0], [65.0, 2259.0], [65.1, 2273.0], [65.2, 2279.0], [65.3, 2287.0], [65.4, 2295.0], [65.5, 2303.0], [65.6, 2307.0], [65.7, 2311.0], [65.8, 2318.0], [65.9, 2330.0], [66.0, 2336.0], [66.1, 2339.0], [66.2, 2352.0], [66.3, 2361.0], [66.4, 2363.0], [66.5, 2370.0], [66.6, 2377.0], [66.7, 2381.0], [66.8, 2386.0], [66.9, 2392.0], [67.0, 2399.0], [67.1, 2404.0], [67.2, 2412.0], [67.3, 2415.0], [67.4, 2417.0], [67.5, 2422.0], [67.6, 2429.0], [67.7, 2433.0], [67.8, 2446.0], [67.9, 2461.0], [68.0, 2469.0], [68.1, 2480.0], [68.2, 2482.0], [68.3, 2491.0], [68.4, 2497.0], [68.5, 2502.0], [68.6, 2508.0], [68.7, 2514.0], [68.8, 2521.0], [68.9, 2536.0], [69.0, 2542.0], [69.1, 2547.0], [69.2, 2561.0], [69.3, 2563.0], [69.4, 2572.0], [69.5, 2575.0], [69.6, 2578.0], [69.7, 2590.0], [69.8, 2601.0], [69.9, 2609.0], [70.0, 2625.0], [70.1, 2631.0], [70.2, 2632.0], [70.3, 2646.0], [70.4, 2651.0], [70.5, 2663.0], [70.6, 2676.0], [70.7, 2685.0], [70.8, 2692.0], [70.9, 2712.0], [71.0, 2727.0], [71.1, 2742.0], [71.2, 2750.0], [71.3, 2772.0], [71.4, 2777.0], [71.5, 2778.0], [71.6, 2798.0], [71.7, 2811.0], [71.8, 2825.0], [71.9, 2847.0], [72.0, 2853.0], [72.1, 2862.0], [72.2, 2873.0], [72.3, 2882.0], [72.4, 2897.0], [72.5, 2921.0], [72.6, 2931.0], [72.7, 2957.0], [72.8, 2969.0], [72.9, 2976.0], [73.0, 2995.0], [73.1, 3012.0], [73.2, 3022.0], [73.3, 3039.0], [73.4, 3058.0], [73.5, 3071.0], [73.6, 3081.0], [73.7, 3094.0], [73.8, 3102.0], [73.9, 3111.0], [74.0, 3121.0], [74.1, 3133.0], [74.2, 3142.0], [74.3, 3147.0], [74.4, 3154.0], [74.5, 3162.0], [74.6, 3166.0], [74.7, 3174.0], [74.8, 3181.0], [74.9, 3190.0], [75.0, 3196.0], [75.1, 3199.0], [75.2, 3213.0], [75.3, 3217.0], [75.4, 3230.0], [75.5, 3236.0], [75.6, 3241.0], [75.7, 3254.0], [75.8, 3261.0], [75.9, 3268.0], [76.0, 3275.0], [76.1, 3284.0], [76.2, 3291.0], [76.3, 3295.0], [76.4, 3305.0], [76.5, 3313.0], [76.6, 3320.0], [76.7, 3326.0], [76.8, 3335.0], [76.9, 3343.0], [77.0, 3355.0], [77.1, 3365.0], [77.2, 3370.0], [77.3, 3379.0], [77.4, 3390.0], [77.5, 3401.0], [77.6, 3404.0], [77.7, 3416.0], [77.8, 3430.0], [77.9, 3436.0], [78.0, 3446.0], [78.1, 3459.0], [78.2, 3470.0], [78.3, 3487.0], [78.4, 3501.0], [78.5, 3508.0], [78.6, 3517.0], [78.7, 3531.0], [78.8, 3539.0], [78.9, 3551.0], [79.0, 3566.0], [79.1, 3576.0], [79.2, 3583.0], [79.3, 3587.0], [79.4, 3593.0], [79.5, 3606.0], [79.6, 3609.0], [79.7, 3621.0], [79.8, 3638.0], [79.9, 3656.0], [80.0, 3663.0], [80.1, 3695.0], [80.2, 3722.0], [80.3, 3733.0], [80.4, 3742.0], [80.5, 3777.0], [80.6, 3792.0], [80.7, 3817.0], [80.8, 3850.0], [80.9, 3880.0], [81.0, 3895.0], [81.1, 3917.0], [81.2, 3933.0], [81.3, 3964.0], [81.4, 3987.0], [81.5, 4024.0], [81.6, 4113.0], [81.7, 4173.0], [81.8, 4287.0], [81.9, 4339.0], [82.0, 4390.0], [82.1, 4476.0], [82.2, 4613.0], [82.3, 4742.0], [82.4, 4897.0], [82.5, 4969.0], [82.6, 5099.0], [82.7, 5269.0], [82.8, 5636.0], [82.9, 5686.0], [83.0, 5777.0], [83.1, 5811.0], [83.2, 5907.0], [83.3, 5935.0], [83.4, 5957.0], [83.5, 6004.0], [83.6, 6015.0], [83.7, 6068.0], [83.8, 6108.0], [83.9, 6159.0], [84.0, 6199.0], [84.1, 6215.0], [84.2, 6231.0], [84.3, 6274.0], [84.4, 6299.0], [84.5, 6328.0], [84.6, 6343.0], [84.7, 6379.0], [84.8, 6397.0], [84.9, 6426.0], [85.0, 6440.0], [85.1, 6482.0], [85.2, 6506.0], [85.3, 6566.0], [85.4, 6660.0], [85.5, 6678.0], [85.6, 6701.0], [85.7, 6747.0], [85.8, 6811.0], [85.9, 6865.0], [86.0, 6959.0], [86.1, 7023.0], [86.2, 7042.0], [86.3, 7067.0], [86.4, 7105.0], [86.5, 7131.0], [86.6, 7140.0], [86.7, 7165.0], [86.8, 7177.0], [86.9, 7215.0], [87.0, 7235.0], [87.1, 7255.0], [87.2, 7283.0], [87.3, 7314.0], [87.4, 7328.0], [87.5, 7350.0], [87.6, 7413.0], [87.7, 7510.0], [87.8, 7548.0], [87.9, 7600.0], [88.0, 7610.0], [88.1, 7642.0], [88.2, 7673.0], [88.3, 7726.0], [88.4, 7757.0], [88.5, 7781.0], [88.6, 7821.0], [88.7, 7857.0], [88.8, 7890.0], [88.9, 7925.0], [89.0, 7944.0], [89.1, 7970.0], [89.2, 8025.0], [89.3, 8036.0], [89.4, 8058.0], [89.5, 8094.0], [89.6, 8116.0], [89.7, 8256.0], [89.8, 8546.0], [89.9, 8624.0], [90.0, 8656.0], [90.1, 8709.0], [90.2, 8778.0], [90.3, 8825.0], [90.4, 8891.0], [90.5, 8989.0], [90.6, 9016.0], [90.7, 9065.0], [90.8, 9082.0], [90.9, 9093.0], [91.0, 9143.0], [91.1, 9159.0], [91.2, 9166.0], [91.3, 9197.0], [91.4, 9222.0], [91.5, 9254.0], [91.6, 9269.0], [91.7, 9286.0], [91.8, 9308.0], [91.9, 9322.0], [92.0, 9336.0], [92.1, 9356.0], [92.2, 9374.0], [92.3, 9384.0], [92.4, 9403.0], [92.5, 9411.0], [92.6, 9455.0], [92.7, 9494.0], [92.8, 9518.0], [92.9, 9572.0], [93.0, 9596.0], [93.1, 9610.0], [93.2, 9672.0], [93.3, 9709.0], [93.4, 9748.0], [93.5, 9766.0], [93.6, 9790.0], [93.7, 9808.0], [93.8, 9830.0], [93.9, 9850.0], [94.0, 9878.0], [94.1, 9910.0], [94.2, 9931.0], [94.3, 9943.0], [94.4, 10000.0], [94.5, 10014.0], [94.6, 10028.0], [94.7, 10058.0], [94.8, 10066.0], [94.9, 10074.0], [95.0, 10093.0], [95.1, 10111.0], [95.2, 10132.0], [95.3, 10138.0], [95.4, 10146.0], [95.5, 10150.0], [95.6, 10169.0], [95.7, 10178.0], [95.8, 10183.0], [95.9, 10191.0], [96.0, 10195.0], [96.1, 10205.0], [96.2, 10213.0], [96.3, 10218.0], [96.4, 10225.0], [96.5, 10233.0], [96.6, 10240.0], [96.7, 10246.0], [96.8, 10253.0], [96.9, 10257.0], [97.0, 10269.0], [97.1, 10276.0], [97.2, 10282.0], [97.3, 10284.0], [97.4, 10288.0], [97.5, 10292.0], [97.6, 10295.0], [97.7, 10299.0], [97.8, 10307.0], [97.9, 10312.0], [98.0, 10319.0], [98.1, 10331.0], [98.2, 10344.0], [98.3, 10355.0], [98.4, 10359.0], [98.5, 10365.0], [98.6, 10379.0], [98.7, 10387.0], [98.8, 10397.0], [98.9, 10404.0], [99.0, 10411.0], [99.1, 10420.0], [99.2, 10431.0], [99.3, 10452.0], [99.4, 10482.0], [99.5, 10495.0], [99.6, 10522.0], [99.7, 10548.0], [99.8, 10568.0], [99.9, 10645.0], [100.0, 10725.0]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313", "isController": false}, {"data": [[0.0, 165.0], [0.1, 168.0], [0.2, 170.0], [0.3, 171.0], [0.4, 172.0], [0.5, 172.0], [0.6, 173.0], [0.7, 173.0], [0.8, 173.0], [0.9, 174.0], [1.0, 175.0], [1.1, 175.0], [1.2, 175.0], [1.3, 176.0], [1.4, 176.0], [1.5, 176.0], [1.6, 177.0], [1.7, 177.0], [1.8, 178.0], [1.9, 178.0], [2.0, 178.0], [2.1, 179.0], [2.2, 179.0], [2.3, 180.0], [2.4, 180.0], [2.5, 180.0], [2.6, 180.0], [2.7, 181.0], [2.8, 181.0], [2.9, 181.0], [3.0, 181.0], [3.1, 182.0], [3.2, 182.0], [3.3, 183.0], [3.4, 183.0], [3.5, 183.0], [3.6, 184.0], [3.7, 184.0], [3.8, 184.0], [3.9, 184.0], [4.0, 185.0], [4.1, 185.0], [4.2, 185.0], [4.3, 186.0], [4.4, 186.0], [4.5, 186.0], [4.6, 187.0], [4.7, 187.0], [4.8, 188.0], [4.9, 188.0], [5.0, 189.0], [5.1, 189.0], [5.2, 189.0], [5.3, 190.0], [5.4, 190.0], [5.5, 190.0], [5.6, 191.0], [5.7, 191.0], [5.8, 191.0], [5.9, 192.0], [6.0, 192.0], [6.1, 193.0], [6.2, 193.0], [6.3, 193.0], [6.4, 195.0], [6.5, 195.0], [6.6, 196.0], [6.7, 196.0], [6.8, 196.0], [6.9, 197.0], [7.0, 197.0], [7.1, 198.0], [7.2, 199.0], [7.3, 199.0], [7.4, 200.0], [7.5, 200.0], [7.6, 201.0], [7.7, 201.0], [7.8, 202.0], [7.9, 203.0], [8.0, 204.0], [8.1, 205.0], [8.2, 205.0], [8.3, 205.0], [8.4, 206.0], [8.5, 207.0], [8.6, 208.0], [8.7, 210.0], [8.8, 210.0], [8.9, 211.0], [9.0, 212.0], [9.1, 213.0], [9.2, 213.0], [9.3, 214.0], [9.4, 214.0], [9.5, 216.0], [9.6, 216.0], [9.7, 218.0], [9.8, 218.0], [9.9, 219.0], [10.0, 220.0], [10.1, 223.0], [10.2, 223.0], [10.3, 224.0], [10.4, 225.0], [10.5, 229.0], [10.6, 231.0], [10.7, 234.0], [10.8, 236.0], [10.9, 240.0], [11.0, 243.0], [11.1, 247.0], [11.2, 253.0], [11.3, 254.0], [11.4, 263.0], [11.5, 266.0], [11.6, 269.0], [11.7, 271.0], [11.8, 274.0], [11.9, 274.0], [12.0, 277.0], [12.1, 278.0], [12.2, 279.0], [12.3, 279.0], [12.4, 281.0], [12.5, 282.0], [12.6, 283.0], [12.7, 283.0], [12.8, 284.0], [12.9, 285.0], [13.0, 287.0], [13.1, 288.0], [13.2, 288.0], [13.3, 289.0], [13.4, 290.0], [13.5, 290.0], [13.6, 291.0], [13.7, 292.0], [13.8, 292.0], [13.9, 293.0], [14.0, 294.0], [14.1, 295.0], [14.2, 296.0], [14.3, 297.0], [14.4, 297.0], [14.5, 298.0], [14.6, 299.0], [14.7, 299.0], [14.8, 300.0], [14.9, 300.0], [15.0, 300.0], [15.1, 301.0], [15.2, 302.0], [15.3, 303.0], [15.4, 304.0], [15.5, 305.0], [15.6, 306.0], [15.7, 306.0], [15.8, 306.0], [15.9, 307.0], [16.0, 308.0], [16.1, 309.0], [16.2, 309.0], [16.3, 310.0], [16.4, 311.0], [16.5, 312.0], [16.6, 312.0], [16.7, 314.0], [16.8, 314.0], [16.9, 315.0], [17.0, 316.0], [17.1, 316.0], [17.2, 317.0], [17.3, 318.0], [17.4, 319.0], [17.5, 319.0], [17.6, 320.0], [17.7, 320.0], [17.8, 321.0], [17.9, 322.0], [18.0, 322.0], [18.1, 322.0], [18.2, 323.0], [18.3, 324.0], [18.4, 324.0], [18.5, 325.0], [18.6, 326.0], [18.7, 327.0], [18.8, 328.0], [18.9, 328.0], [19.0, 329.0], [19.1, 330.0], [19.2, 331.0], [19.3, 331.0], [19.4, 332.0], [19.5, 332.0], [19.6, 333.0], [19.7, 334.0], [19.8, 334.0], [19.9, 335.0], [20.0, 336.0], [20.1, 336.0], [20.2, 337.0], [20.3, 339.0], [20.4, 339.0], [20.5, 340.0], [20.6, 341.0], [20.7, 341.0], [20.8, 343.0], [20.9, 344.0], [21.0, 344.0], [21.1, 346.0], [21.2, 346.0], [21.3, 347.0], [21.4, 348.0], [21.5, 348.0], [21.6, 350.0], [21.7, 350.0], [21.8, 351.0], [21.9, 352.0], [22.0, 353.0], [22.1, 354.0], [22.2, 355.0], [22.3, 356.0], [22.4, 358.0], [22.5, 359.0], [22.6, 359.0], [22.7, 360.0], [22.8, 361.0], [22.9, 362.0], [23.0, 363.0], [23.1, 363.0], [23.2, 364.0], [23.3, 364.0], [23.4, 365.0], [23.5, 366.0], [23.6, 366.0], [23.7, 367.0], [23.8, 368.0], [23.9, 368.0], [24.0, 369.0], [24.1, 370.0], [24.2, 370.0], [24.3, 371.0], [24.4, 372.0], [24.5, 372.0], [24.6, 374.0], [24.7, 375.0], [24.8, 376.0], [24.9, 377.0], [25.0, 377.0], [25.1, 378.0], [25.2, 379.0], [25.3, 379.0], [25.4, 380.0], [25.5, 381.0], [25.6, 382.0], [25.7, 384.0], [25.8, 385.0], [25.9, 386.0], [26.0, 387.0], [26.1, 388.0], [26.2, 389.0], [26.3, 390.0], [26.4, 391.0], [26.5, 392.0], [26.6, 394.0], [26.7, 395.0], [26.8, 397.0], [26.9, 397.0], [27.0, 398.0], [27.1, 400.0], [27.2, 401.0], [27.3, 402.0], [27.4, 403.0], [27.5, 404.0], [27.6, 404.0], [27.7, 405.0], [27.8, 406.0], [27.9, 408.0], [28.0, 409.0], [28.1, 411.0], [28.2, 412.0], [28.3, 415.0], [28.4, 416.0], [28.5, 418.0], [28.6, 420.0], [28.7, 422.0], [28.8, 423.0], [28.9, 424.0], [29.0, 425.0], [29.1, 427.0], [29.2, 428.0], [29.3, 429.0], [29.4, 430.0], [29.5, 432.0], [29.6, 433.0], [29.7, 435.0], [29.8, 438.0], [29.9, 440.0], [30.0, 442.0], [30.1, 443.0], [30.2, 447.0], [30.3, 447.0], [30.4, 449.0], [30.5, 451.0], [30.6, 452.0], [30.7, 452.0], [30.8, 453.0], [30.9, 456.0], [31.0, 457.0], [31.1, 459.0], [31.2, 461.0], [31.3, 462.0], [31.4, 464.0], [31.5, 467.0], [31.6, 468.0], [31.7, 469.0], [31.8, 470.0], [31.9, 471.0], [32.0, 473.0], [32.1, 474.0], [32.2, 475.0], [32.3, 477.0], [32.4, 478.0], [32.5, 479.0], [32.6, 481.0], [32.7, 483.0], [32.8, 484.0], [32.9, 486.0], [33.0, 488.0], [33.1, 491.0], [33.2, 493.0], [33.3, 495.0], [33.4, 496.0], [33.5, 497.0], [33.6, 501.0], [33.7, 503.0], [33.8, 504.0], [33.9, 505.0], [34.0, 507.0], [34.1, 509.0], [34.2, 511.0], [34.3, 512.0], [34.4, 514.0], [34.5, 519.0], [34.6, 521.0], [34.7, 523.0], [34.8, 525.0], [34.9, 526.0], [35.0, 526.0], [35.1, 527.0], [35.2, 529.0], [35.3, 531.0], [35.4, 534.0], [35.5, 536.0], [35.6, 538.0], [35.7, 539.0], [35.8, 541.0], [35.9, 544.0], [36.0, 545.0], [36.1, 547.0], [36.2, 549.0], [36.3, 551.0], [36.4, 555.0], [36.5, 558.0], [36.6, 560.0], [36.7, 563.0], [36.8, 565.0], [36.9, 567.0], [37.0, 568.0], [37.1, 571.0], [37.2, 576.0], [37.3, 579.0], [37.4, 582.0], [37.5, 585.0], [37.6, 587.0], [37.7, 589.0], [37.8, 591.0], [37.9, 594.0], [38.0, 596.0], [38.1, 599.0], [38.2, 600.0], [38.3, 604.0], [38.4, 605.0], [38.5, 609.0], [38.6, 610.0], [38.7, 614.0], [38.8, 617.0], [38.9, 618.0], [39.0, 622.0], [39.1, 625.0], [39.2, 626.0], [39.3, 629.0], [39.4, 633.0], [39.5, 636.0], [39.6, 640.0], [39.7, 643.0], [39.8, 645.0], [39.9, 646.0], [40.0, 648.0], [40.1, 650.0], [40.2, 651.0], [40.3, 654.0], [40.4, 658.0], [40.5, 660.0], [40.6, 662.0], [40.7, 664.0], [40.8, 667.0], [40.9, 673.0], [41.0, 676.0], [41.1, 679.0], [41.2, 681.0], [41.3, 683.0], [41.4, 685.0], [41.5, 689.0], [41.6, 693.0], [41.7, 698.0], [41.8, 700.0], [41.9, 701.0], [42.0, 706.0], [42.1, 708.0], [42.2, 711.0], [42.3, 717.0], [42.4, 718.0], [42.5, 722.0], [42.6, 726.0], [42.7, 729.0], [42.8, 732.0], [42.9, 739.0], [43.0, 741.0], [43.1, 744.0], [43.2, 748.0], [43.3, 751.0], [43.4, 756.0], [43.5, 759.0], [43.6, 762.0], [43.7, 769.0], [43.8, 772.0], [43.9, 782.0], [44.0, 786.0], [44.1, 793.0], [44.2, 795.0], [44.3, 800.0], [44.4, 804.0], [44.5, 808.0], [44.6, 813.0], [44.7, 819.0], [44.8, 821.0], [44.9, 823.0], [45.0, 827.0], [45.1, 830.0], [45.2, 835.0], [45.3, 842.0], [45.4, 846.0], [45.5, 851.0], [45.6, 854.0], [45.7, 858.0], [45.8, 863.0], [45.9, 867.0], [46.0, 881.0], [46.1, 884.0], [46.2, 891.0], [46.3, 894.0], [46.4, 902.0], [46.5, 907.0], [46.6, 911.0], [46.7, 923.0], [46.8, 929.0], [46.9, 936.0], [47.0, 940.0], [47.1, 945.0], [47.2, 955.0], [47.3, 961.0], [47.4, 969.0], [47.5, 972.0], [47.6, 982.0], [47.7, 988.0], [47.8, 993.0], [47.9, 1003.0], [48.0, 1013.0], [48.1, 1018.0], [48.2, 1024.0], [48.3, 1032.0], [48.4, 1048.0], [48.5, 1058.0], [48.6, 1062.0], [48.7, 1077.0], [48.8, 1085.0], [48.9, 1090.0], [49.0, 1111.0], [49.1, 1115.0], [49.2, 1129.0], [49.3, 1138.0], [49.4, 1145.0], [49.5, 1153.0], [49.6, 1167.0], [49.7, 1177.0], [49.8, 1184.0], [49.9, 1192.0], [50.0, 1200.0], [50.1, 1220.0], [50.2, 1239.0], [50.3, 1250.0], [50.4, 1255.0], [50.5, 1263.0], [50.6, 1273.0], [50.7, 1278.0], [50.8, 1289.0], [50.9, 1297.0], [51.0, 1303.0], [51.1, 1314.0], [51.2, 1327.0], [51.3, 1337.0], [51.4, 1350.0], [51.5, 1362.0], [51.6, 1377.0], [51.7, 1389.0], [51.8, 1403.0], [51.9, 1409.0], [52.0, 1417.0], [52.1, 1420.0], [52.2, 1427.0], [52.3, 1434.0], [52.4, 1438.0], [52.5, 1443.0], [52.6, 1448.0], [52.7, 1451.0], [52.8, 1460.0], [52.9, 1464.0], [53.0, 1469.0], [53.1, 1483.0], [53.2, 1489.0], [53.3, 1494.0], [53.4, 1499.0], [53.5, 1507.0], [53.6, 1514.0], [53.7, 1517.0], [53.8, 1524.0], [53.9, 1533.0], [54.0, 1538.0], [54.1, 1554.0], [54.2, 1559.0], [54.3, 1573.0], [54.4, 1592.0], [54.5, 1595.0], [54.6, 1601.0], [54.7, 1613.0], [54.8, 1615.0], [54.9, 1622.0], [55.0, 1631.0], [55.1, 1638.0], [55.2, 1656.0], [55.3, 1663.0], [55.4, 1679.0], [55.5, 1693.0], [55.6, 1703.0], [55.7, 1710.0], [55.8, 1715.0], [55.9, 1734.0], [56.0, 1742.0], [56.1, 1752.0], [56.2, 1762.0], [56.3, 1768.0], [56.4, 1784.0], [56.5, 1797.0], [56.6, 1810.0], [56.7, 1820.0], [56.8, 1825.0], [56.9, 1835.0], [57.0, 1843.0], [57.1, 1846.0], [57.2, 1855.0], [57.3, 1868.0], [57.4, 1882.0], [57.5, 1885.0], [57.6, 1891.0], [57.7, 1895.0], [57.8, 1904.0], [57.9, 1908.0], [58.0, 1927.0], [58.1, 1934.0], [58.2, 1938.0], [58.3, 1941.0], [58.4, 1946.0], [58.5, 1957.0], [58.6, 1962.0], [58.7, 1968.0], [58.8, 1973.0], [58.9, 1979.0], [59.0, 1981.0], [59.1, 1988.0], [59.2, 1993.0], [59.3, 2001.0], [59.4, 2010.0], [59.5, 2012.0], [59.6, 2018.0], [59.7, 2026.0], [59.8, 2033.0], [59.9, 2036.0], [60.0, 2042.0], [60.1, 2047.0], [60.2, 2056.0], [60.3, 2067.0], [60.4, 2068.0], [60.5, 2074.0], [60.6, 2076.0], [60.7, 2079.0], [60.8, 2084.0], [60.9, 2090.0], [61.0, 2097.0], [61.1, 2104.0], [61.2, 2120.0], [61.3, 2124.0], [61.4, 2141.0], [61.5, 2153.0], [61.6, 2159.0], [61.7, 2169.0], [61.8, 2174.0], [61.9, 2181.0], [62.0, 2194.0], [62.1, 2205.0], [62.2, 2206.0], [62.3, 2211.0], [62.4, 2221.0], [62.5, 2232.0], [62.6, 2239.0], [62.7, 2242.0], [62.8, 2247.0], [62.9, 2254.0], [63.0, 2259.0], [63.1, 2267.0], [63.2, 2272.0], [63.3, 2277.0], [63.4, 2285.0], [63.5, 2302.0], [63.6, 2311.0], [63.7, 2315.0], [63.8, 2319.0], [63.9, 2326.0], [64.0, 2331.0], [64.1, 2338.0], [64.2, 2347.0], [64.3, 2352.0], [64.4, 2359.0], [64.5, 2368.0], [64.6, 2377.0], [64.7, 2382.0], [64.8, 2391.0], [64.9, 2395.0], [65.0, 2398.0], [65.1, 2402.0], [65.2, 2412.0], [65.3, 2415.0], [65.4, 2426.0], [65.5, 2433.0], [65.6, 2436.0], [65.7, 2446.0], [65.8, 2450.0], [65.9, 2457.0], [66.0, 2462.0], [66.1, 2482.0], [66.2, 2487.0], [66.3, 2495.0], [66.4, 2505.0], [66.5, 2512.0], [66.6, 2518.0], [66.7, 2523.0], [66.8, 2536.0], [66.9, 2537.0], [67.0, 2544.0], [67.1, 2549.0], [67.2, 2560.0], [67.3, 2566.0], [67.4, 2568.0], [67.5, 2575.0], [67.6, 2580.0], [67.7, 2591.0], [67.8, 2602.0], [67.9, 2610.0], [68.0, 2618.0], [68.1, 2626.0], [68.2, 2631.0], [68.3, 2641.0], [68.4, 2650.0], [68.5, 2663.0], [68.6, 2676.0], [68.7, 2682.0], [68.8, 2685.0], [68.9, 2693.0], [69.0, 2705.0], [69.1, 2707.0], [69.2, 2724.0], [69.3, 2733.0], [69.4, 2739.0], [69.5, 2751.0], [69.6, 2764.0], [69.7, 2780.0], [69.8, 2797.0], [69.9, 2815.0], [70.0, 2823.0], [70.1, 2833.0], [70.2, 2844.0], [70.3, 2858.0], [70.4, 2866.0], [70.5, 2887.0], [70.6, 2907.0], [70.7, 2919.0], [70.8, 2939.0], [70.9, 2948.0], [71.0, 2959.0], [71.1, 2980.0], [71.2, 2997.0], [71.3, 3004.0], [71.4, 3011.0], [71.5, 3015.0], [71.6, 3023.0], [71.7, 3028.0], [71.8, 3035.0], [71.9, 3041.0], [72.0, 3050.0], [72.1, 3060.0], [72.2, 3080.0], [72.3, 3094.0], [72.4, 3107.0], [72.5, 3111.0], [72.6, 3114.0], [72.7, 3126.0], [72.8, 3132.0], [72.9, 3139.0], [73.0, 3142.0], [73.1, 3153.0], [73.2, 3156.0], [73.3, 3165.0], [73.4, 3170.0], [73.5, 3180.0], [73.6, 3187.0], [73.7, 3195.0], [73.8, 3201.0], [73.9, 3209.0], [74.0, 3214.0], [74.1, 3220.0], [74.2, 3230.0], [74.3, 3238.0], [74.4, 3244.0], [74.5, 3251.0], [74.6, 3259.0], [74.7, 3268.0], [74.8, 3279.0], [74.9, 3285.0], [75.0, 3290.0], [75.1, 3295.0], [75.2, 3302.0], [75.3, 3314.0], [75.4, 3326.0], [75.5, 3337.0], [75.6, 3349.0], [75.7, 3356.0], [75.8, 3373.0], [75.9, 3380.0], [76.0, 3390.0], [76.1, 3418.0], [76.2, 3425.0], [76.3, 3427.0], [76.4, 3432.0], [76.5, 3443.0], [76.6, 3447.0], [76.7, 3455.0], [76.8, 3467.0], [76.9, 3475.0], [77.0, 3485.0], [77.1, 3494.0], [77.2, 3509.0], [77.3, 3518.0], [77.4, 3525.0], [77.5, 3531.0], [77.6, 3533.0], [77.7, 3547.0], [77.8, 3554.0], [77.9, 3565.0], [78.0, 3570.0], [78.1, 3576.0], [78.2, 3584.0], [78.3, 3599.0], [78.4, 3606.0], [78.5, 3616.0], [78.6, 3620.0], [78.7, 3634.0], [78.8, 3647.0], [78.9, 3663.0], [79.0, 3676.0], [79.1, 3687.0], [79.2, 3699.0], [79.3, 3736.0], [79.4, 3759.0], [79.5, 3777.0], [79.6, 3808.0], [79.7, 3844.0], [79.8, 3871.0], [79.9, 3882.0], [80.0, 3898.0], [80.1, 3913.0], [80.2, 3924.0], [80.3, 3967.0], [80.4, 4012.0], [80.5, 4077.0], [80.6, 4144.0], [80.7, 4195.0], [80.8, 4267.0], [80.9, 4296.0], [81.0, 4345.0], [81.1, 4372.0], [81.2, 4401.0], [81.3, 4494.0], [81.4, 4569.0], [81.5, 4733.0], [81.6, 4774.0], [81.7, 4874.0], [81.8, 4921.0], [81.9, 4955.0], [82.0, 5073.0], [82.1, 5151.0], [82.2, 5258.0], [82.3, 5294.0], [82.4, 5415.0], [82.5, 5517.0], [82.6, 5633.0], [82.7, 5689.0], [82.8, 5816.0], [82.9, 5890.0], [83.0, 5929.0], [83.1, 5955.0], [83.2, 5982.0], [83.3, 6045.0], [83.4, 6102.0], [83.5, 6174.0], [83.6, 6201.0], [83.7, 6225.0], [83.8, 6237.0], [83.9, 6268.0], [84.0, 6279.0], [84.1, 6306.0], [84.2, 6329.0], [84.3, 6353.0], [84.4, 6418.0], [84.5, 6444.0], [84.6, 6463.0], [84.7, 6504.0], [84.8, 6518.0], [84.9, 6540.0], [85.0, 6575.0], [85.1, 6602.0], [85.2, 6643.0], [85.3, 6671.0], [85.4, 6816.0], [85.5, 6884.0], [85.6, 6916.0], [85.7, 6954.0], [85.8, 6979.0], [85.9, 7024.0], [86.0, 7052.0], [86.1, 7074.0], [86.2, 7107.0], [86.3, 7110.0], [86.4, 7128.0], [86.5, 7164.0], [86.6, 7181.0], [86.7, 7198.0], [86.8, 7231.0], [86.9, 7253.0], [87.0, 7322.0], [87.1, 7356.0], [87.2, 7375.0], [87.3, 7452.0], [87.4, 7567.0], [87.5, 7597.0], [87.6, 7607.0], [87.7, 7651.0], [87.8, 7693.0], [87.9, 7705.0], [88.0, 7736.0], [88.1, 7786.0], [88.2, 7798.0], [88.3, 7841.0], [88.4, 7851.0], [88.5, 7866.0], [88.6, 7912.0], [88.7, 7990.0], [88.8, 8029.0], [88.9, 8064.0], [89.0, 8095.0], [89.1, 8140.0], [89.2, 8187.0], [89.3, 8319.0], [89.4, 8365.0], [89.5, 8486.0], [89.6, 8600.0], [89.7, 8635.0], [89.8, 8740.0], [89.9, 8870.0], [90.0, 8924.0], [90.1, 8944.0], [90.2, 8981.0], [90.3, 9023.0], [90.4, 9051.0], [90.5, 9085.0], [90.6, 9144.0], [90.7, 9182.0], [90.8, 9223.0], [90.9, 9251.0], [91.0, 9272.0], [91.1, 9290.0], [91.2, 9305.0], [91.3, 9312.0], [91.4, 9317.0], [91.5, 9347.0], [91.6, 9364.0], [91.7, 9374.0], [91.8, 9409.0], [91.9, 9438.0], [92.0, 9449.0], [92.1, 9488.0], [92.2, 9505.0], [92.3, 9527.0], [92.4, 9571.0], [92.5, 9588.0], [92.6, 9629.0], [92.7, 9661.0], [92.8, 9692.0], [92.9, 9742.0], [93.0, 9757.0], [93.1, 9777.0], [93.2, 9802.0], [93.3, 9830.0], [93.4, 9861.0], [93.5, 9881.0], [93.6, 9900.0], [93.7, 9933.0], [93.8, 9970.0], [93.9, 9998.0], [94.0, 10004.0], [94.1, 10010.0], [94.2, 10042.0], [94.3, 10061.0], [94.4, 10073.0], [94.5, 10086.0], [94.6, 10096.0], [94.7, 10118.0], [94.8, 10127.0], [94.9, 10143.0], [95.0, 10154.0], [95.1, 10163.0], [95.2, 10172.0], [95.3, 10193.0], [95.4, 10197.0], [95.5, 10201.0], [95.6, 10208.0], [95.7, 10211.0], [95.8, 10217.0], [95.9, 10219.0], [96.0, 10222.0], [96.1, 10228.0], [96.2, 10231.0], [96.3, 10237.0], [96.4, 10242.0], [96.5, 10245.0], [96.6, 10247.0], [96.7, 10254.0], [96.8, 10258.0], [96.9, 10261.0], [97.0, 10267.0], [97.1, 10274.0], [97.2, 10278.0], [97.3, 10282.0], [97.4, 10286.0], [97.5, 10291.0], [97.6, 10293.0], [97.7, 10298.0], [97.8, 10306.0], [97.9, 10308.0], [98.0, 10310.0], [98.1, 10317.0], [98.2, 10333.0], [98.3, 10337.0], [98.4, 10344.0], [98.5, 10347.0], [98.6, 10354.0], [98.7, 10365.0], [98.8, 10369.0], [98.9, 10375.0], [99.0, 10381.0], [99.1, 10391.0], [99.2, 10403.0], [99.3, 10421.0], [99.4, 10439.0], [99.5, 10459.0], [99.6, 10501.0], [99.7, 10513.0], [99.8, 10561.0], [99.9, 10680.0]], "isOverall": false, "label": "ChooseFlight/purchase.php-237", "isController": false}, {"data": [[0.0, 274.0], [0.1, 279.0], [0.2, 286.0], [0.3, 290.0], [0.4, 293.0], [0.5, 295.0], [0.6, 299.0], [0.7, 302.0], [0.8, 306.0], [0.9, 307.0], [1.0, 307.0], [1.1, 310.0], [1.2, 311.0], [1.3, 312.0], [1.4, 313.0], [1.5, 313.0], [1.6, 314.0], [1.7, 315.0], [1.8, 316.0], [1.9, 317.0], [2.0, 318.0], [2.1, 319.0], [2.2, 320.0], [2.3, 321.0], [2.4, 321.0], [2.5, 323.0], [2.6, 323.0], [2.7, 325.0], [2.8, 326.0], [2.9, 326.0], [3.0, 328.0], [3.1, 328.0], [3.2, 329.0], [3.3, 330.0], [3.4, 331.0], [3.5, 331.0], [3.6, 331.0], [3.7, 332.0], [3.8, 333.0], [3.9, 334.0], [4.0, 335.0], [4.1, 336.0], [4.2, 336.0], [4.3, 337.0], [4.4, 338.0], [4.5, 338.0], [4.6, 339.0], [4.7, 340.0], [4.8, 341.0], [4.9, 343.0], [5.0, 345.0], [5.1, 346.0], [5.2, 347.0], [5.3, 348.0], [5.4, 349.0], [5.5, 350.0], [5.6, 351.0], [5.7, 351.0], [5.8, 352.0], [5.9, 354.0], [6.0, 357.0], [6.1, 358.0], [6.2, 361.0], [6.3, 362.0], [6.4, 363.0], [6.5, 364.0], [6.6, 365.0], [6.7, 368.0], [6.8, 368.0], [6.9, 370.0], [7.0, 372.0], [7.1, 373.0], [7.2, 374.0], [7.3, 376.0], [7.4, 377.0], [7.5, 378.0], [7.6, 378.0], [7.7, 379.0], [7.8, 380.0], [7.9, 381.0], [8.0, 382.0], [8.1, 383.0], [8.2, 384.0], [8.3, 385.0], [8.4, 387.0], [8.5, 387.0], [8.6, 388.0], [8.7, 389.0], [8.8, 390.0], [8.9, 391.0], [9.0, 391.0], [9.1, 392.0], [9.2, 393.0], [9.3, 395.0], [9.4, 396.0], [9.5, 397.0], [9.6, 398.0], [9.7, 399.0], [9.8, 400.0], [9.9, 401.0], [10.0, 402.0], [10.1, 403.0], [10.2, 404.0], [10.3, 404.0], [10.4, 405.0], [10.5, 406.0], [10.6, 407.0], [10.7, 408.0], [10.8, 409.0], [10.9, 410.0], [11.0, 411.0], [11.1, 412.0], [11.2, 413.0], [11.3, 414.0], [11.4, 415.0], [11.5, 417.0], [11.6, 417.0], [11.7, 418.0], [11.8, 419.0], [11.9, 421.0], [12.0, 423.0], [12.1, 424.0], [12.2, 425.0], [12.3, 425.0], [12.4, 427.0], [12.5, 428.0], [12.6, 429.0], [12.7, 430.0], [12.8, 431.0], [12.9, 432.0], [13.0, 434.0], [13.1, 434.0], [13.2, 435.0], [13.3, 437.0], [13.4, 438.0], [13.5, 439.0], [13.6, 440.0], [13.7, 441.0], [13.8, 442.0], [13.9, 442.0], [14.0, 443.0], [14.1, 444.0], [14.2, 445.0], [14.3, 447.0], [14.4, 448.0], [14.5, 451.0], [14.6, 452.0], [14.7, 453.0], [14.8, 454.0], [14.9, 455.0], [15.0, 456.0], [15.1, 457.0], [15.2, 458.0], [15.3, 459.0], [15.4, 460.0], [15.5, 460.0], [15.6, 461.0], [15.7, 462.0], [15.8, 462.0], [15.9, 463.0], [16.0, 465.0], [16.1, 466.0], [16.2, 467.0], [16.3, 469.0], [16.4, 469.0], [16.5, 470.0], [16.6, 472.0], [16.7, 473.0], [16.8, 475.0], [16.9, 475.0], [17.0, 476.0], [17.1, 477.0], [17.2, 478.0], [17.3, 479.0], [17.4, 480.0], [17.5, 481.0], [17.6, 482.0], [17.7, 484.0], [17.8, 485.0], [17.9, 487.0], [18.0, 489.0], [18.1, 490.0], [18.2, 491.0], [18.3, 492.0], [18.4, 493.0], [18.5, 494.0], [18.6, 495.0], [18.7, 496.0], [18.8, 496.0], [18.9, 497.0], [19.0, 498.0], [19.1, 498.0], [19.2, 499.0], [19.3, 500.0], [19.4, 501.0], [19.5, 503.0], [19.6, 505.0], [19.7, 505.0], [19.8, 507.0], [19.9, 508.0], [20.0, 509.0], [20.1, 511.0], [20.2, 511.0], [20.3, 512.0], [20.4, 513.0], [20.5, 514.0], [20.6, 515.0], [20.7, 516.0], [20.8, 518.0], [20.9, 519.0], [21.0, 521.0], [21.1, 522.0], [21.2, 523.0], [21.3, 524.0], [21.4, 525.0], [21.5, 526.0], [21.6, 528.0], [21.7, 529.0], [21.8, 531.0], [21.9, 532.0], [22.0, 534.0], [22.1, 535.0], [22.2, 535.0], [22.3, 539.0], [22.4, 540.0], [22.5, 541.0], [22.6, 542.0], [22.7, 543.0], [22.8, 544.0], [22.9, 545.0], [23.0, 547.0], [23.1, 548.0], [23.2, 549.0], [23.3, 550.0], [23.4, 551.0], [23.5, 553.0], [23.6, 553.0], [23.7, 554.0], [23.8, 555.0], [23.9, 556.0], [24.0, 557.0], [24.1, 558.0], [24.2, 559.0], [24.3, 561.0], [24.4, 562.0], [24.5, 564.0], [24.6, 567.0], [24.7, 567.0], [24.8, 569.0], [24.9, 570.0], [25.0, 570.0], [25.1, 572.0], [25.2, 574.0], [25.3, 576.0], [25.4, 576.0], [25.5, 578.0], [25.6, 579.0], [25.7, 581.0], [25.8, 582.0], [25.9, 583.0], [26.0, 585.0], [26.1, 587.0], [26.2, 588.0], [26.3, 590.0], [26.4, 591.0], [26.5, 592.0], [26.6, 593.0], [26.7, 596.0], [26.8, 596.0], [26.9, 599.0], [27.0, 600.0], [27.1, 600.0], [27.2, 600.0], [27.3, 601.0], [27.4, 602.0], [27.5, 604.0], [27.6, 606.0], [27.7, 608.0], [27.8, 612.0], [27.9, 612.0], [28.0, 615.0], [28.1, 615.0], [28.2, 616.0], [28.3, 618.0], [28.4, 619.0], [28.5, 621.0], [28.6, 623.0], [28.7, 625.0], [28.8, 626.0], [28.9, 628.0], [29.0, 629.0], [29.1, 633.0], [29.2, 635.0], [29.3, 636.0], [29.4, 637.0], [29.5, 639.0], [29.6, 640.0], [29.7, 642.0], [29.8, 643.0], [29.9, 644.0], [30.0, 646.0], [30.1, 646.0], [30.2, 649.0], [30.3, 650.0], [30.4, 652.0], [30.5, 654.0], [30.6, 656.0], [30.7, 658.0], [30.8, 659.0], [30.9, 660.0], [31.0, 661.0], [31.1, 663.0], [31.2, 664.0], [31.3, 665.0], [31.4, 667.0], [31.5, 668.0], [31.6, 670.0], [31.7, 672.0], [31.8, 674.0], [31.9, 675.0], [32.0, 677.0], [32.1, 679.0], [32.2, 682.0], [32.3, 683.0], [32.4, 684.0], [32.5, 687.0], [32.6, 688.0], [32.7, 689.0], [32.8, 689.0], [32.9, 690.0], [33.0, 692.0], [33.1, 693.0], [33.2, 694.0], [33.3, 696.0], [33.4, 698.0], [33.5, 699.0], [33.6, 700.0], [33.7, 701.0], [33.8, 705.0], [33.9, 706.0], [34.0, 707.0], [34.1, 709.0], [34.2, 713.0], [34.3, 714.0], [34.4, 716.0], [34.5, 717.0], [34.6, 718.0], [34.7, 719.0], [34.8, 721.0], [34.9, 723.0], [35.0, 724.0], [35.1, 727.0], [35.2, 731.0], [35.3, 733.0], [35.4, 736.0], [35.5, 736.0], [35.6, 738.0], [35.7, 744.0], [35.8, 746.0], [35.9, 750.0], [36.0, 752.0], [36.1, 758.0], [36.2, 763.0], [36.3, 768.0], [36.4, 771.0], [36.5, 774.0], [36.6, 777.0], [36.7, 780.0], [36.8, 783.0], [36.9, 787.0], [37.0, 788.0], [37.1, 790.0], [37.2, 794.0], [37.3, 796.0], [37.4, 800.0], [37.5, 802.0], [37.6, 805.0], [37.7, 808.0], [37.8, 810.0], [37.9, 811.0], [38.0, 815.0], [38.1, 816.0], [38.2, 817.0], [38.3, 819.0], [38.4, 823.0], [38.5, 826.0], [38.6, 826.0], [38.7, 831.0], [38.8, 834.0], [38.9, 835.0], [39.0, 838.0], [39.1, 842.0], [39.2, 845.0], [39.3, 847.0], [39.4, 848.0], [39.5, 853.0], [39.6, 855.0], [39.7, 858.0], [39.8, 863.0], [39.9, 867.0], [40.0, 871.0], [40.1, 876.0], [40.2, 877.0], [40.3, 883.0], [40.4, 888.0], [40.5, 891.0], [40.6, 894.0], [40.7, 896.0], [40.8, 898.0], [40.9, 904.0], [41.0, 910.0], [41.1, 912.0], [41.2, 919.0], [41.3, 924.0], [41.4, 928.0], [41.5, 933.0], [41.6, 939.0], [41.7, 945.0], [41.8, 949.0], [41.9, 952.0], [42.0, 956.0], [42.1, 960.0], [42.2, 967.0], [42.3, 970.0], [42.4, 975.0], [42.5, 978.0], [42.6, 980.0], [42.7, 984.0], [42.8, 986.0], [42.9, 990.0], [43.0, 994.0], [43.1, 996.0], [43.2, 1000.0], [43.3, 1005.0], [43.4, 1009.0], [43.5, 1011.0], [43.6, 1017.0], [43.7, 1021.0], [43.8, 1026.0], [43.9, 1031.0], [44.0, 1035.0], [44.1, 1037.0], [44.2, 1049.0], [44.3, 1051.0], [44.4, 1059.0], [44.5, 1064.0], [44.6, 1073.0], [44.7, 1079.0], [44.8, 1085.0], [44.9, 1088.0], [45.0, 1094.0], [45.1, 1101.0], [45.2, 1104.0], [45.3, 1111.0], [45.4, 1119.0], [45.5, 1124.0], [45.6, 1131.0], [45.7, 1139.0], [45.8, 1145.0], [45.9, 1149.0], [46.0, 1155.0], [46.1, 1171.0], [46.2, 1174.0], [46.3, 1187.0], [46.4, 1206.0], [46.5, 1216.0], [46.6, 1224.0], [46.7, 1232.0], [46.8, 1245.0], [46.9, 1252.0], [47.0, 1266.0], [47.1, 1280.0], [47.2, 1285.0], [47.3, 1295.0], [47.4, 1313.0], [47.5, 1321.0], [47.6, 1331.0], [47.7, 1336.0], [47.8, 1345.0], [47.9, 1352.0], [48.0, 1360.0], [48.1, 1371.0], [48.2, 1377.0], [48.3, 1381.0], [48.4, 1390.0], [48.5, 1394.0], [48.6, 1400.0], [48.7, 1411.0], [48.8, 1418.0], [48.9, 1426.0], [49.0, 1439.0], [49.1, 1444.0], [49.2, 1450.0], [49.3, 1456.0], [49.4, 1461.0], [49.5, 1469.0], [49.6, 1474.0], [49.7, 1481.0], [49.8, 1489.0], [49.9, 1498.0], [50.0, 1506.0], [50.1, 1512.0], [50.2, 1518.0], [50.3, 1521.0], [50.4, 1538.0], [50.5, 1551.0], [50.6, 1563.0], [50.7, 1566.0], [50.8, 1571.0], [50.9, 1577.0], [51.0, 1585.0], [51.1, 1591.0], [51.2, 1613.0], [51.3, 1628.0], [51.4, 1636.0], [51.5, 1645.0], [51.6, 1653.0], [51.7, 1656.0], [51.8, 1671.0], [51.9, 1683.0], [52.0, 1697.0], [52.1, 1708.0], [52.2, 1719.0], [52.3, 1729.0], [52.4, 1745.0], [52.5, 1755.0], [52.6, 1779.0], [52.7, 1787.0], [52.8, 1792.0], [52.9, 1803.0], [53.0, 1812.0], [53.1, 1829.0], [53.2, 1836.0], [53.3, 1852.0], [53.4, 1856.0], [53.5, 1858.0], [53.6, 1874.0], [53.7, 1888.0], [53.8, 1922.0], [53.9, 1935.0], [54.0, 1948.0], [54.1, 1961.0], [54.2, 1965.0], [54.3, 1980.0], [54.4, 1993.0], [54.5, 2006.0], [54.6, 2008.0], [54.7, 2022.0], [54.8, 2032.0], [54.9, 2040.0], [55.0, 2044.0], [55.1, 2051.0], [55.2, 2058.0], [55.3, 2061.0], [55.4, 2070.0], [55.5, 2077.0], [55.6, 2088.0], [55.7, 2092.0], [55.8, 2098.0], [55.9, 2102.0], [56.0, 2105.0], [56.1, 2120.0], [56.2, 2124.0], [56.3, 2136.0], [56.4, 2139.0], [56.5, 2144.0], [56.6, 2149.0], [56.7, 2153.0], [56.8, 2161.0], [56.9, 2165.0], [57.0, 2173.0], [57.1, 2178.0], [57.2, 2184.0], [57.3, 2189.0], [57.4, 2192.0], [57.5, 2195.0], [57.6, 2200.0], [57.7, 2202.0], [57.8, 2209.0], [57.9, 2215.0], [58.0, 2223.0], [58.1, 2227.0], [58.2, 2231.0], [58.3, 2236.0], [58.4, 2246.0], [58.5, 2251.0], [58.6, 2262.0], [58.7, 2268.0], [58.8, 2278.0], [58.9, 2299.0], [59.0, 2307.0], [59.1, 2312.0], [59.2, 2318.0], [59.3, 2325.0], [59.4, 2332.0], [59.5, 2339.0], [59.6, 2347.0], [59.7, 2353.0], [59.8, 2358.0], [59.9, 2363.0], [60.0, 2370.0], [60.1, 2378.0], [60.2, 2381.0], [60.3, 2392.0], [60.4, 2400.0], [60.5, 2403.0], [60.6, 2412.0], [60.7, 2420.0], [60.8, 2425.0], [60.9, 2433.0], [61.0, 2443.0], [61.1, 2447.0], [61.2, 2451.0], [61.3, 2455.0], [61.4, 2458.0], [61.5, 2462.0], [61.6, 2471.0], [61.7, 2481.0], [61.8, 2489.0], [61.9, 2498.0], [62.0, 2500.0], [62.1, 2504.0], [62.2, 2505.0], [62.3, 2511.0], [62.4, 2521.0], [62.5, 2526.0], [62.6, 2533.0], [62.7, 2543.0], [62.8, 2549.0], [62.9, 2553.0], [63.0, 2560.0], [63.1, 2565.0], [63.2, 2572.0], [63.3, 2577.0], [63.4, 2589.0], [63.5, 2599.0], [63.6, 2608.0], [63.7, 2617.0], [63.8, 2628.0], [63.9, 2636.0], [64.0, 2640.0], [64.1, 2645.0], [64.2, 2650.0], [64.3, 2660.0], [64.4, 2663.0], [64.5, 2668.0], [64.6, 2680.0], [64.7, 2683.0], [64.8, 2691.0], [64.9, 2698.0], [65.0, 2701.0], [65.1, 2705.0], [65.2, 2709.0], [65.3, 2713.0], [65.4, 2720.0], [65.5, 2725.0], [65.6, 2730.0], [65.7, 2739.0], [65.8, 2749.0], [65.9, 2753.0], [66.0, 2757.0], [66.1, 2777.0], [66.2, 2784.0], [66.3, 2788.0], [66.4, 2801.0], [66.5, 2811.0], [66.6, 2815.0], [66.7, 2830.0], [66.8, 2835.0], [66.9, 2841.0], [67.0, 2852.0], [67.1, 2875.0], [67.2, 2877.0], [67.3, 2888.0], [67.4, 2905.0], [67.5, 2909.0], [67.6, 2922.0], [67.7, 2939.0], [67.8, 2948.0], [67.9, 2955.0], [68.0, 2967.0], [68.1, 2978.0], [68.2, 3006.0], [68.3, 3018.0], [68.4, 3025.0], [68.5, 3035.0], [68.6, 3039.0], [68.7, 3051.0], [68.8, 3057.0], [68.9, 3070.0], [69.0, 3091.0], [69.1, 3103.0], [69.2, 3125.0], [69.3, 3141.0], [69.4, 3148.0], [69.5, 3162.0], [69.6, 3170.0], [69.7, 3181.0], [69.8, 3196.0], [69.9, 3204.0], [70.0, 3208.0], [70.1, 3216.0], [70.2, 3220.0], [70.3, 3236.0], [70.4, 3242.0], [70.5, 3250.0], [70.6, 3263.0], [70.7, 3273.0], [70.8, 3279.0], [70.9, 3286.0], [71.0, 3295.0], [71.1, 3306.0], [71.2, 3311.0], [71.3, 3318.0], [71.4, 3321.0], [71.5, 3323.0], [71.6, 3339.0], [71.7, 3348.0], [71.8, 3362.0], [71.9, 3371.0], [72.0, 3378.0], [72.1, 3385.0], [72.2, 3387.0], [72.3, 3395.0], [72.4, 3400.0], [72.5, 3408.0], [72.6, 3412.0], [72.7, 3428.0], [72.8, 3437.0], [72.9, 3444.0], [73.0, 3451.0], [73.1, 3459.0], [73.2, 3464.0], [73.3, 3473.0], [73.4, 3484.0], [73.5, 3493.0], [73.6, 3499.0], [73.7, 3503.0], [73.8, 3509.0], [73.9, 3517.0], [74.0, 3526.0], [74.1, 3533.0], [74.2, 3543.0], [74.3, 3551.0], [74.4, 3557.0], [74.5, 3561.0], [74.6, 3567.0], [74.7, 3582.0], [74.8, 3587.0], [74.9, 3595.0], [75.0, 3606.0], [75.1, 3617.0], [75.2, 3638.0], [75.3, 3645.0], [75.4, 3660.0], [75.5, 3671.0], [75.6, 3675.0], [75.7, 3684.0], [75.8, 3695.0], [75.9, 3707.0], [76.0, 3713.0], [76.1, 3722.0], [76.2, 3731.0], [76.3, 3739.0], [76.4, 3748.0], [76.5, 3762.0], [76.6, 3767.0], [76.7, 3775.0], [76.8, 3785.0], [76.9, 3793.0], [77.0, 3805.0], [77.1, 3821.0], [77.2, 3830.0], [77.3, 3840.0], [77.4, 3849.0], [77.5, 3859.0], [77.6, 3891.0], [77.7, 3919.0], [77.8, 3932.0], [77.9, 3943.0], [78.0, 3965.0], [78.1, 3993.0], [78.2, 4021.0], [78.3, 4043.0], [78.4, 4079.0], [78.5, 4108.0], [78.6, 4118.0], [78.7, 4134.0], [78.8, 4159.0], [78.9, 4166.0], [79.0, 4179.0], [79.1, 4194.0], [79.2, 4215.0], [79.3, 4229.0], [79.4, 4238.0], [79.5, 4284.0], [79.6, 4308.0], [79.7, 4363.0], [79.8, 4396.0], [79.9, 4421.0], [80.0, 4443.0], [80.1, 4480.0], [80.2, 4503.0], [80.3, 4569.0], [80.4, 4602.0], [80.5, 4685.0], [80.6, 4724.0], [80.7, 4809.0], [80.8, 4891.0], [80.9, 4941.0], [81.0, 4993.0], [81.1, 5027.0], [81.2, 5045.0], [81.3, 5103.0], [81.4, 5147.0], [81.5, 5209.0], [81.6, 5273.0], [81.7, 5347.0], [81.8, 5411.0], [81.9, 5464.0], [82.0, 5502.0], [82.1, 5583.0], [82.2, 5814.0], [82.3, 5929.0], [82.4, 6000.0], [82.5, 6072.0], [82.6, 6115.0], [82.7, 6143.0], [82.8, 6156.0], [82.9, 6220.0], [83.0, 6271.0], [83.1, 6306.0], [83.2, 6331.0], [83.3, 6391.0], [83.4, 6426.0], [83.5, 6499.0], [83.6, 6520.0], [83.7, 6528.0], [83.8, 6555.0], [83.9, 6601.0], [84.0, 6644.0], [84.1, 6674.0], [84.2, 6727.0], [84.3, 6755.0], [84.4, 6813.0], [84.5, 6829.0], [84.6, 6897.0], [84.7, 6939.0], [84.8, 7020.0], [84.9, 7077.0], [85.0, 7106.0], [85.1, 7125.0], [85.2, 7143.0], [85.3, 7169.0], [85.4, 7196.0], [85.5, 7225.0], [85.6, 7244.0], [85.7, 7270.0], [85.8, 7290.0], [85.9, 7306.0], [86.0, 7326.0], [86.1, 7382.0], [86.2, 7399.0], [86.3, 7430.0], [86.4, 7437.0], [86.5, 7460.0], [86.6, 7497.0], [86.7, 7523.0], [86.8, 7579.0], [86.9, 7681.0], [87.0, 7712.0], [87.1, 7745.0], [87.2, 7810.0], [87.3, 7858.0], [87.4, 7885.0], [87.5, 7911.0], [87.6, 7926.0], [87.7, 7963.0], [87.8, 8007.0], [87.9, 8043.0], [88.0, 8079.0], [88.1, 8121.0], [88.2, 8156.0], [88.3, 8189.0], [88.4, 8216.0], [88.5, 8234.0], [88.6, 8298.0], [88.7, 8369.0], [88.8, 8436.0], [88.9, 8527.0], [89.0, 8676.0], [89.1, 8717.0], [89.2, 8750.0], [89.3, 8776.0], [89.4, 8814.0], [89.5, 8848.0], [89.6, 8903.0], [89.7, 8979.0], [89.8, 9000.0], [89.9, 9121.0], [90.0, 9171.0], [90.1, 9200.0], [90.2, 9243.0], [90.3, 9283.0], [90.4, 9306.0], [90.5, 9339.0], [90.6, 9365.0], [90.7, 9396.0], [90.8, 9411.0], [90.9, 9433.0], [91.0, 9477.0], [91.1, 9494.0], [91.2, 9507.0], [91.3, 9531.0], [91.4, 9543.0], [91.5, 9557.0], [91.6, 9569.0], [91.7, 9581.0], [91.8, 9600.0], [91.9, 9607.0], [92.0, 9615.0], [92.1, 9623.0], [92.2, 9638.0], [92.3, 9684.0], [92.4, 9728.0], [92.5, 9759.0], [92.6, 9774.0], [92.7, 9803.0], [92.8, 9879.0], [92.9, 9912.0], [93.0, 9925.0], [93.1, 9945.0], [93.2, 9951.0], [93.3, 9968.0], [93.4, 9988.0], [93.5, 10035.0], [93.6, 10052.0], [93.7, 10069.0], [93.8, 10093.0], [93.9, 10128.0], [94.0, 10143.0], [94.1, 10154.0], [94.2, 10172.0], [94.3, 10190.0], [94.4, 10210.0], [94.5, 10221.0], [94.6, 10245.0], [94.7, 10266.0], [94.8, 10274.0], [94.9, 10279.0], [95.0, 10289.0], [95.1, 10306.0], [95.2, 10314.0], [95.3, 10320.0], [95.4, 10327.0], [95.5, 10332.0], [95.6, 10339.0], [95.7, 10348.0], [95.8, 10355.0], [95.9, 10364.0], [96.0, 10373.0], [96.1, 10379.0], [96.2, 10385.0], [96.3, 10394.0], [96.4, 10398.0], [96.5, 10403.0], [96.6, 10411.0], [96.7, 10418.0], [96.8, 10423.0], [96.9, 10428.0], [97.0, 10437.0], [97.1, 10442.0], [97.2, 10446.0], [97.3, 10454.0], [97.4, 10458.0], [97.5, 10466.0], [97.6, 10470.0], [97.7, 10478.0], [97.8, 10482.0], [97.9, 10487.0], [98.0, 10499.0], [98.1, 10510.0], [98.2, 10520.0], [98.3, 10523.0], [98.4, 10533.0], [98.5, 10540.0], [98.6, 10551.0], [98.7, 10557.0], [98.8, 10565.0], [98.9, 10578.0], [99.0, 10600.0], [99.1, 10620.0], [99.2, 10638.0], [99.3, 10649.0], [99.4, 10681.0], [99.5, 10736.0], [99.6, 10793.0], [99.7, 10857.0], [99.8, 11857.0], [99.9, 12710.0]], "isOverall": false, "label": "FindFlights/reserve.php-230", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 594.0, "series": [{"data": [[100.0, 372.0], [200.0, 367.0], [300.0, 547.0], [400.0, 350.0], [500.0, 224.0], [600.0, 157.0], [700.0, 110.0], [800.0, 86.0], [900.0, 61.0], [1000.0, 52.0], [1100.0, 39.0], [1200.0, 47.0], [1300.0, 46.0], [1400.0, 68.0], [1500.0, 62.0], [1600.0, 26.0], [1700.0, 43.0], [1800.0, 72.0], [1900.0, 83.0], [2000.0, 68.0], [2100.0, 74.0], [2300.0, 72.0], [2200.0, 76.0], [2400.0, 66.0], [2500.0, 63.0], [2600.0, 49.0], [2700.0, 35.0], [2800.0, 37.0], [2900.0, 28.0], [3000.0, 35.0], [3100.0, 62.0], [3300.0, 54.0], [3200.0, 56.0], [3400.0, 41.0], [3500.0, 49.0], [3600.0, 31.0], [3700.0, 24.0], [3800.0, 20.0], [3900.0, 18.0], [4000.0, 6.0], [4200.0, 4.0], [4300.0, 10.0], [4100.0, 7.0], [4400.0, 4.0], [4500.0, 4.0], [4600.0, 2.0], [4800.0, 5.0], [4700.0, 4.0], [5100.0, 1.0], [5000.0, 4.0], [4900.0, 4.0], [5200.0, 5.0], [5600.0, 7.0], [5500.0, 1.0], [5700.0, 6.0], [5800.0, 6.0], [6100.0, 11.0], [6000.0, 13.0], [5900.0, 15.0], [6300.0, 20.0], [6200.0, 18.0], [6400.0, 15.0], [6500.0, 7.0], [6600.0, 13.0], [6800.0, 6.0], [6900.0, 7.0], [6700.0, 9.0], [7000.0, 14.0], [7100.0, 24.0], [7200.0, 17.0], [7300.0, 16.0], [7400.0, 3.0], [7600.0, 19.0], [7500.0, 9.0], [7700.0, 13.0], [7800.0, 13.0], [7900.0, 16.0], [8000.0, 16.0], [8100.0, 6.0], [8500.0, 5.0], [8600.0, 10.0], [8200.0, 3.0], [8700.0, 7.0], [8300.0, 1.0], [8400.0, 1.0], [8800.0, 8.0], [9000.0, 19.0], [9100.0, 19.0], [9200.0, 18.0], [8900.0, 5.0], [9700.0, 18.0], [9300.0, 30.0], [9600.0, 11.0], [9400.0, 17.0], [9500.0, 13.0], [9800.0, 18.0], [9900.0, 16.0], [10000.0, 30.0], [10100.0, 46.0], [10200.0, 78.0], [10300.0, 54.0], [10400.0, 29.0], [10500.0, 16.0], [10600.0, 6.0], [10700.0, 1.0]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313", "isController": false}, {"data": [[100.0, 355.0], [200.0, 360.0], [300.0, 594.0], [400.0, 317.0], [500.0, 220.0], [600.0, 177.0], [700.0, 121.0], [800.0, 100.0], [900.0, 72.0], [1000.0, 53.0], [1100.0, 51.0], [1200.0, 45.0], [1300.0, 41.0], [1400.0, 80.0], [1500.0, 56.0], [1600.0, 47.0], [1700.0, 47.0], [1800.0, 61.0], [1900.0, 73.0], [2000.0, 83.0], [2100.0, 50.0], [2200.0, 69.0], [2300.0, 77.0], [2400.0, 61.0], [2500.0, 71.0], [2600.0, 56.0], [2800.0, 36.0], [2700.0, 43.0], [2900.0, 32.0], [3000.0, 55.0], [3100.0, 66.0], [3300.0, 42.0], [3200.0, 70.0], [3400.0, 53.0], [3500.0, 56.0], [3700.0, 16.0], [3600.0, 44.0], [3800.0, 23.0], [3900.0, 16.0], [4000.0, 10.0], [4300.0, 14.0], [4200.0, 10.0], [4100.0, 7.0], [4500.0, 5.0], [4600.0, 3.0], [4400.0, 5.0], [4700.0, 8.0], [4800.0, 5.0], [5000.0, 5.0], [4900.0, 10.0], [5100.0, 4.0], [5200.0, 9.0], [5300.0, 4.0], [5400.0, 3.0], [5500.0, 5.0], [5600.0, 8.0], [5800.0, 6.0], [5700.0, 3.0], [5900.0, 14.0], [6000.0, 9.0], [6100.0, 10.0], [6200.0, 24.0], [6300.0, 14.0], [6600.0, 13.0], [6500.0, 18.0], [6400.0, 15.0], [6900.0, 12.0], [6800.0, 9.0], [6700.0, 3.0], [7000.0, 17.0], [7100.0, 27.0], [7300.0, 15.0], [7200.0, 9.0], [7400.0, 5.0], [7500.0, 10.0], [7600.0, 14.0], [7700.0, 18.0], [7800.0, 17.0], [7900.0, 9.0], [8000.0, 13.0], [8100.0, 10.0], [8200.0, 4.0], [8300.0, 7.0], [8600.0, 9.0], [8700.0, 6.0], [8400.0, 3.0], [8500.0, 4.0], [8800.0, 4.0], [8900.0, 11.0], [9000.0, 18.0], [9100.0, 8.0], [9200.0, 20.0], [9600.0, 13.0], [9400.0, 17.0], [9700.0, 18.0], [9300.0, 30.0], [9500.0, 20.0], [9900.0, 15.0], [10100.0, 40.0], [10200.0, 110.0], [10000.0, 35.0], [9800.0, 20.0], [10300.0, 71.0], [10400.0, 19.0], [10500.0, 13.0], [10600.0, 4.0], [10700.0, 2.0], [12000.0, 1.0]], "isOverall": false, "label": "ChooseFlight/purchase.php-237", "isController": false}, {"data": [[200.0, 32.0], [300.0, 459.0], [400.0, 478.0], [500.0, 390.0], [600.0, 332.0], [700.0, 194.0], [800.0, 175.0], [900.0, 117.0], [1000.0, 96.0], [1100.0, 63.0], [1200.0, 50.0], [1300.0, 63.0], [1400.0, 68.0], [1500.0, 62.0], [1600.0, 43.0], [1700.0, 42.0], [1800.0, 44.0], [1900.0, 37.0], [2000.0, 70.0], [2100.0, 88.0], [2200.0, 68.0], [2300.0, 73.0], [2400.0, 81.0], [2500.0, 77.0], [2600.0, 73.0], [2700.0, 72.0], [2800.0, 48.0], [2900.0, 42.0], [3000.0, 44.0], [3100.0, 41.0], [3200.0, 60.0], [3300.0, 66.0], [3400.0, 63.0], [3500.0, 67.0], [3600.0, 45.0], [3700.0, 55.0], [3800.0, 36.0], [3900.0, 25.0], [4000.0, 17.0], [4200.0, 21.0], [4100.0, 33.0], [4300.0, 13.0], [4400.0, 18.0], [4600.0, 7.0], [4500.0, 11.0], [4800.0, 6.0], [4700.0, 9.0], [4900.0, 13.0], [5000.0, 11.0], [5100.0, 9.0], [5200.0, 10.0], [5300.0, 6.0], [5400.0, 9.0], [5500.0, 8.0], [5700.0, 3.0], [5800.0, 5.0], [5900.0, 5.0], [6100.0, 16.0], [6000.0, 8.0], [6200.0, 12.0], [6300.0, 12.0], [6400.0, 10.0], [6500.0, 18.0], [6600.0, 12.0], [6700.0, 13.0], [6800.0, 12.0], [6900.0, 7.0], [7000.0, 10.0], [7100.0, 23.0], [7200.0, 23.0], [7400.0, 20.0], [7300.0, 17.0], [7500.0, 11.0], [7600.0, 5.0], [7700.0, 11.0], [7800.0, 16.0], [7900.0, 16.0], [8100.0, 17.0], [8000.0, 13.0], [8200.0, 12.0], [8500.0, 7.0], [8700.0, 15.0], [8300.0, 8.0], [8400.0, 3.0], [8600.0, 3.0], [8800.0, 13.0], [8900.0, 10.0], [9000.0, 4.0], [9100.0, 11.0], [9200.0, 15.0], [9400.0, 20.0], [9700.0, 16.0], [9500.0, 32.0], [9300.0, 19.0], [9600.0, 29.0], [9800.0, 11.0], [10100.0, 26.0], [10200.0, 34.0], [10000.0, 21.0], [9900.0, 26.0], [10300.0, 72.0], [10400.0, 79.0], [10500.0, 49.0], [10700.0, 9.0], [10600.0, 22.0], [10900.0, 4.0], [10800.0, 5.0], [11800.0, 1.0], [12000.0, 1.0], [12500.0, 1.0], [12600.0, 2.0], [12700.0, 1.0], [13800.0, 1.0], [14800.0, 1.0], [14900.0, 1.0], [15600.0, 1.0], [16500.0, 1.0]], "isOverall": false, "label": "FindFlights/reserve.php-230", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2029.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6685.0, "series": [{"data": [[0.0, 2461.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3335.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 6685.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 2029.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 541.4195040710596, "minX": 1.70618952E12, "maxY": 571.3007906874585, "series": [{"data": [[1.70618958E12, 541.4195040710596], [1.70618952E12, 571.3007906874585]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group ( Spike Testing )", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70618958E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 166.0, "minX": 1.0, "maxY": 10857.0, "series": [{"data": [[8.0, 6631.0], [13.0, 6434.0], [16.0, 4523.5], [18.0, 4628.5], [19.0, 964.0], [20.0, 166.0], [21.0, 1181.0], [22.0, 745.0], [23.0, 3480.0], [24.0, 453.0], [25.0, 739.0], [27.0, 4174.0], [30.0, 9494.0], [31.0, 4586.0], [33.0, 309.0], [35.0, 755.5], [34.0, 4538.0], [36.0, 403.0], [37.0, 509.0], [39.0, 9601.0], [40.0, 478.3333333333333], [42.0, 347.5], [45.0, 1650.0], [46.0, 4922.0], [47.0, 644.0], [48.0, 2974.25], [49.0, 776.5], [50.0, 306.5], [51.0, 320.5], [52.0, 833.0], [53.0, 3880.3333333333335], [54.0, 542.6666666666666], [56.0, 5803.0], [57.0, 288.0], [58.0, 385.0], [59.0, 776.75], [60.0, 5479.0], [61.0, 5672.0], [62.0, 6035.0], [63.0, 670.0], [64.0, 254.0], [65.0, 1071.5], [66.0, 376.0], [67.0, 299.0], [68.0, 300.6666666666667], [69.0, 609.3333333333334], [70.0, 1561.0], [71.0, 3350.8], [72.0, 814.5], [74.0, 440.6666666666667], [75.0, 4012.3333333333335], [73.0, 4810.5], [76.0, 306.0], [77.0, 2466.6], [78.0, 724.0], [79.0, 936.0], [80.0, 365.0], [81.0, 315.0], [82.0, 1470.6], [83.0, 357.0], [84.0, 501.5], [85.0, 753.0], [86.0, 1403.2], [87.0, 1244.6666666666665], [88.0, 459.33333333333337], [90.0, 1036.4], [91.0, 920.5], [92.0, 6950.0], [93.0, 1858.75], [94.0, 560.6666666666666], [95.0, 833.9999999999999], [96.0, 1284.0], [103.0, 9887.0], [100.0, 10339.0], [107.0, 303.0], [105.0, 171.0], [111.0, 337.0], [115.0, 313.0], [117.0, 4623.0], [124.0, 7022.666666666667], [135.0, 10645.0], [132.0, 9067.0], [131.0, 183.0], [129.0, 169.0], [143.0, 5337.5], [141.0, 176.0], [140.0, 244.33333333333334], [139.0, 8413.8], [151.0, 5306.5], [149.0, 9058.0], [146.0, 278.0], [145.0, 363.0], [157.0, 9513.5], [154.0, 391.0], [167.0, 9016.0], [163.0, 5068.5], [161.0, 10337.0], [160.0, 10111.0], [174.0, 306.0], [175.0, 366.6666666666667], [171.0, 10278.0], [168.0, 5216.0], [181.0, 10224.0], [178.0, 10276.0], [177.0, 286.0], [176.0, 182.0], [191.0, 10307.0], [190.0, 10314.0], [188.0, 340.0], [187.0, 339.0], [186.0, 9389.0], [199.0, 4389.6], [195.0, 1723.0], [193.0, 249.5], [207.0, 1643.0], [203.0, 3469.0], [214.0, 10304.0], [210.0, 1032.0], [221.0, 10437.0], [219.0, 10431.0], [231.0, 180.0], [230.0, 3279.75], [239.0, 378.5], [238.0, 10283.0], [237.0, 1245.5], [236.0, 357.0], [235.0, 5319.0], [234.0, 10398.0], [232.0, 10411.0], [247.0, 5381.0], [246.0, 9815.0], [245.0, 10235.0], [243.0, 9850.0], [242.0, 280.0], [240.0, 174.0], [255.0, 9696.0], [253.0, 311.0], [251.0, 191.0], [249.0, 1496.0], [270.0, 2624.0], [269.0, 6327.0], [267.0, 1489.5], [265.0, 3421.3333333333335], [263.0, 10283.0], [262.0, 10132.0], [259.0, 10141.0], [258.0, 2745.0], [286.0, 257.0], [285.0, 9609.0], [283.0, 1712.0], [280.0, 288.0], [279.0, 3593.0], [276.0, 307.0], [296.0, 388.0], [300.0, 1907.0], [299.0, 288.0], [298.0, 271.0], [297.0, 9568.0], [294.0, 5230.0], [293.0, 3349.0], [291.0, 3385.0], [288.0, 264.0], [316.0, 194.0], [310.0, 332.0], [307.0, 305.0], [305.0, 4558.333333333334], [332.0, 3446.0], [325.0, 3737.0], [323.0, 1895.5], [322.0, 10295.0], [350.0, 10398.0], [349.0, 5169.0], [348.0, 273.0], [346.0, 3403.0], [345.0, 1344.6666666666667], [344.0, 334.0], [341.0, 3659.0], [338.0, 2612.5], [355.0, 3607.0], [366.0, 3614.0], [367.0, 3032.0], [365.0, 6787.0], [362.0, 285.0], [360.0, 1859.5], [359.0, 3539.0], [358.0, 10133.0], [357.0, 177.5], [354.0, 3722.0], [353.0, 482.0], [381.0, 3457.0], [382.0, 10321.0], [380.0, 6870.5], [379.0, 294.5], [378.0, 3402.0], [376.0, 3417.0], [374.0, 1841.5], [373.0, 427.0], [370.0, 10093.0], [369.0, 1403.3333333333335], [394.0, 6800.0], [392.0, 3487.0], [388.0, 1521.5], [387.0, 321.0], [385.0, 3433.0], [415.0, 9493.0], [414.0, 5476.5], [410.0, 6863.5], [406.0, 9355.0], [405.0, 3401.0], [403.0, 267.0], [402.0, 3609.0], [401.0, 3948.0], [428.0, 2967.0], [426.0, 2780.0], [424.0, 1852.5], [423.0, 1594.5], [422.0, 3389.0], [418.0, 2567.5], [416.0, 1549.0], [445.0, 10285.0], [439.0, 295.0], [438.0, 5161.5], [435.0, 10229.0], [434.0, 1567.0], [433.0, 10432.0], [463.0, 567.25], [454.0, 3583.0], [453.0, 3355.0], [448.0, 10393.0], [478.0, 3606.0], [476.0, 1377.0], [475.0, 277.0], [472.0, 339.0], [469.0, 3591.0], [465.0, 278.0], [492.0, 10217.0], [490.0, 10102.0], [489.0, 2011.5], [481.0, 1960.5], [480.0, 10324.0], [511.0, 616.0], [510.0, 551.0], [509.0, 541.0], [508.0, 1893.5], [506.0, 3469.0], [504.0, 3174.4], [498.0, 3587.0], [496.0, 10183.0], [519.0, 3511.0], [539.0, 339.5], [540.0, 490.0], [536.0, 10091.0], [533.0, 10521.5], [529.0, 10725.0], [523.0, 7140.0], [521.0, 3811.0], [518.0, 411.0], [517.0, 286.0], [516.0, 3902.0], [515.0, 615.0], [514.0, 179.0], [551.0, 3822.0], [575.0, 1987.3333333333335], [570.0, 2591.0], [567.0, 177.0], [563.0, 10636.0], [561.0, 343.0], [559.0, 1317.0], [555.0, 558.0], [549.0, 270.0], [547.0, 10053.0], [544.0, 570.0], [600.0, 2444.8430665705346], [597.0, 202.0], [593.0, 4159.666666666667]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313", "isController": false}, {"data": [[563.2289911427961, 2525.433138906895]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313-Aggregated", "isController": false}, {"data": [[3.0, 6094.0], [4.0, 6540.0], [5.0, 6104.0], [9.0, 2443.6666666666665], [10.0, 6570.0], [12.0, 7593.0], [13.0, 442.0], [14.0, 6340.0], [15.0, 2431.0], [17.0, 6383.0], [18.0, 813.0], [19.0, 623.0], [20.0, 6451.0], [21.0, 3472.5], [24.0, 5089.0], [25.0, 7052.0], [26.0, 7411.0], [27.0, 772.0], [28.0, 1362.5], [29.0, 1608.5], [30.0, 894.0], [33.0, 478.0], [34.0, 439.3333333333333], [35.0, 251.33333333333334], [36.0, 447.0], [37.0, 284.0], [38.0, 429.0], [39.0, 167.0], [41.0, 413.5], [43.0, 2177.2], [42.0, 4944.0], [44.0, 2640.25], [45.0, 9644.0], [47.0, 415.6], [49.0, 842.0], [50.0, 549.6], [51.0, 294.0], [52.0, 299.0], [54.0, 3391.2], [55.0, 6978.0], [56.0, 321.6666666666667], [57.0, 1388.0], [59.0, 376.0], [60.0, 5912.5], [61.0, 265.0], [62.0, 844.3333333333334], [63.0, 3910.0], [64.0, 843.0], [66.0, 504.3333333333333], [67.0, 1554.25], [65.0, 10277.0], [68.0, 357.0], [69.0, 406.0], [70.0, 858.0], [71.0, 402.25], [72.0, 178.0], [73.0, 959.0], [74.0, 331.5], [75.0, 475.0], [76.0, 835.5], [77.0, 282.0], [78.0, 2218.833333333333], [79.0, 984.0], [80.0, 1404.5], [81.0, 360.0], [82.0, 3845.0], [83.0, 509.3333333333333], [84.0, 2300.5], [85.0, 454.0], [86.0, 2058.714285714286], [87.0, 2096.8], [88.0, 4149.0], [89.0, 3440.3333333333335], [90.0, 5853.0], [91.0, 494.5], [92.0, 743.0], [93.0, 3101.0], [94.0, 424.0], [96.0, 1865.5], [97.0, 854.0], [98.0, 777.75], [99.0, 173.0], [103.0, 285.0], [102.0, 10768.0], [100.0, 10209.0], [106.0, 10541.0], [104.0, 9861.0], [111.0, 4468.5], [114.0, 10373.0], [112.0, 281.0], [119.0, 10389.0], [118.0, 297.0], [116.0, 300.0], [121.0, 302.0], [126.0, 10280.0], [125.0, 10289.0], [124.0, 3619.333333333333], [134.0, 10253.0], [133.0, 10375.0], [129.0, 10395.0], [128.0, 10286.0], [143.0, 299.0], [139.0, 290.0], [151.0, 10260.0], [148.0, 171.0], [147.0, 10255.0], [146.0, 413.0], [145.0, 2513.5], [144.0, 10450.0], [159.0, 8924.0], [158.0, 173.0], [155.0, 3724.6666666666665], [154.0, 284.0], [153.0, 10226.0], [167.0, 366.0], [166.0, 10176.0], [165.0, 5284.5], [164.0, 10278.0], [163.0, 291.0], [162.0, 331.0], [175.0, 10345.0], [172.0, 10353.0], [169.0, 10254.0], [182.0, 10232.0], [180.0, 9312.0], [177.0, 10242.0], [176.0, 960.0], [191.0, 10287.0], [190.0, 10283.5], [188.0, 379.0], [187.0, 248.0], [186.0, 9383.0], [199.0, 5342.0], [195.0, 3453.3333333333335], [193.0, 6657.0], [207.0, 4977.5], [205.0, 290.5], [204.0, 10335.0], [203.0, 999.5], [200.0, 9649.0], [214.0, 10325.0], [211.0, 10370.0], [210.0, 10593.0], [209.0, 5027.0], [219.0, 10296.0], [216.0, 10187.0], [230.0, 5246.5], [239.0, 298.0], [237.0, 9774.0], [236.0, 9758.0], [233.0, 10392.0], [247.0, 903.6666666666667], [245.0, 10199.0], [243.0, 1979.0], [254.0, 284.0], [253.0, 406.0], [251.0, 1975.0], [249.0, 5286.0], [248.0, 10044.5], [270.0, 289.0], [265.0, 3141.0], [262.0, 2947.0], [261.0, 9742.0], [259.0, 279.0], [258.0, 306.5], [256.0, 2512.0], [281.0, 3596.0], [280.0, 341.0], [278.0, 5114.5], [277.0, 2800.0], [276.0, 7601.5], [273.0, 10107.0], [272.0, 9717.0], [300.0, 280.0], [299.0, 1858.0], [298.0, 10370.0], [296.0, 342.0], [289.0, 316.0], [288.0, 1883.5], [316.0, 3296.333333333333], [312.0, 10006.0], [311.0, 9997.0], [310.0, 1981.0], [309.0, 3334.5], [308.0, 5300.0], [307.0, 10098.0], [305.0, 1298.3333333333335], [328.0, 3026.0], [327.0, 3624.0], [326.0, 10044.0], [325.0, 3736.6666666666665], [322.0, 6272.833333333333], [348.0, 3378.0], [343.0, 5355.5], [341.0, 3736.0], [339.0, 3336.0], [338.0, 4988.4], [366.0, 892.8], [367.0, 390.5], [365.0, 310.0], [364.0, 3380.0], [363.0, 3375.0], [362.0, 9275.0], [361.0, 1624.0], [359.0, 275.0], [354.0, 3599.0], [353.0, 3430.0], [352.0, 6576.5], [357.0, 6940.333333333333], [381.0, 1200.0], [379.0, 2947.0], [378.0, 9439.0], [374.0, 288.0], [373.0, 293.0], [369.0, 3398.0], [398.0, 281.0], [389.0, 10282.0], [388.0, 236.5], [387.0, 3437.0], [384.0, 6443.0], [415.0, 1973.5], [414.0, 4230.25], [410.0, 10276.0], [405.0, 3380.0], [403.0, 1987.5], [430.0, 5563.0], [427.0, 9438.0], [422.0, 292.0], [421.0, 10218.0], [419.0, 318.0], [418.0, 1620.0], [446.0, 10117.666666666666], [441.0, 333.0], [438.0, 1891.0], [432.0, 6555.5], [463.0, 4754.375], [454.0, 2860.0], [453.0, 1893.0], [448.0, 1499.0], [479.0, 10109.0], [475.0, 10053.0], [473.0, 1668.0], [471.0, 3363.0], [470.0, 10380.0], [467.0, 3279.0], [466.0, 3619.6666666666665], [464.0, 10293.0], [495.0, 2894.0], [494.0, 1237.0], [489.0, 10056.0], [485.0, 2924.0], [484.0, 3690.0], [483.0, 5703.0], [481.0, 3445.0], [508.0, 532.0], [504.0, 5498.5], [498.0, 310.0], [497.0, 1963.0], [537.0, 760.0], [542.0, 1866.5], [535.0, 322.0], [541.0, 568.0], [536.0, 5413.5], [516.0, 3720.0], [533.0, 10410.5], [528.0, 362.0], [523.0, 6422.5], [520.0, 563.0], [575.0, 323.0], [570.0, 268.5], [565.0, 170.0], [564.0, 537.0], [563.0, 2123.0], [561.0, 1418.0], [554.0, 10042.0], [552.0, 373.0], [549.0, 3834.0], [547.0, 1507.0], [546.0, 646.0], [544.0, 635.0], [600.0, 2504.716535433083], [599.0, 392.0], [598.0, 197.0], [597.0, 10122.0], [595.0, 1295.0], [594.0, 304.0], [593.0, 1969.0], [1.0, 4702.0]], "isOverall": false, "label": "ChooseFlight/purchase.php-237", "isController": false}, {"data": [[559.6803719008246, 2606.81363636363]], "isOverall": false, "label": "ChooseFlight/purchase.php-237-Aggregated", "isController": false}, {"data": [[2.0, 5464.0], [5.0, 275.0], [6.0, 3301.5], [7.0, 7441.0], [9.0, 490.5], [10.0, 422.0], [11.0, 758.5], [12.0, 7608.0], [16.0, 490.0], [17.0, 439.0], [18.0, 290.0], [19.0, 5273.5], [20.0, 1033.5], [21.0, 386.0], [22.0, 3581.5], [23.0, 851.0], [25.0, 278.0], [26.0, 1029.0], [27.0, 682.0], [28.0, 402.0], [31.0, 925.3333333333334], [32.0, 3459.3333333333335], [34.0, 695.8333333333333], [35.0, 723.0], [37.0, 3578.0], [36.0, 9687.0], [38.0, 3619.6666666666665], [39.0, 760.3333333333334], [40.0, 292.0], [41.0, 1426.6], [42.0, 865.75], [43.0, 655.0], [44.0, 670.0], [45.0, 690.6666666666666], [46.0, 423.0], [47.0, 860.0], [48.0, 3679.3333333333335], [49.0, 5396.0], [51.0, 415.0], [50.0, 458.0], [52.0, 4856.333333333334], [53.0, 767.4285714285714], [55.0, 1030.0], [54.0, 295.0], [57.0, 1470.0], [58.0, 567.25], [59.0, 997.0], [60.0, 5385.0], [61.0, 539.4], [62.0, 394.6666666666667], [63.0, 910.3333333333333], [64.0, 4365.75], [65.0, 1092.6666666666665], [66.0, 5087.0], [67.0, 885.0], [68.0, 5669.5], [70.0, 795.5], [71.0, 3500.166666666667], [72.0, 3729.3333333333335], [73.0, 671.6666666666666], [74.0, 427.5], [75.0, 372.0], [76.0, 3717.0], [77.0, 962.0], [78.0, 842.5], [79.0, 497.0], [80.0, 740.25], [81.0, 704.0], [82.0, 3730.8], [83.0, 2410.5], [84.0, 882.5], [85.0, 1801.1666666666665], [86.0, 423.0], [87.0, 5059.5], [88.0, 526.3333333333334], [89.0, 890.6666666666667], [90.0, 707.4], [91.0, 2768.2], [92.0, 531.0], [93.0, 2452.5], [94.0, 3302.3333333333335], [95.0, 674.3333333333334], [97.0, 1233.5], [96.0, 861.5], [98.0, 489.0], [99.0, 1313.0], [102.0, 10603.0], [100.0, 10403.0], [105.0, 5693.0], [111.0, 10829.0], [108.0, 10020.0], [115.0, 6577.666666666667], [113.0, 10857.0], [112.0, 9951.0], [118.0, 5574.5], [116.0, 10649.0], [121.0, 5627.0], [127.0, 9228.0], [126.0, 425.6666666666667], [124.0, 429.5], [132.0, 286.0], [131.0, 5559.0], [130.0, 9171.0], [143.0, 5532.5], [141.0, 10558.0], [151.0, 396.0], [148.0, 10495.0], [147.0, 274.0], [159.0, 283.0], [158.0, 545.6666666666666], [157.0, 10483.0], [155.0, 639.0], [154.0, 5333.5], [153.0, 4949.5], [167.0, 516.0], [164.0, 687.5], [163.0, 701.0], [162.0, 10221.0], [160.0, 376.0], [175.0, 410.0], [174.0, 5504.5], [173.0, 10487.0], [170.0, 9194.0], [168.0, 512.0], [183.0, 5415.0], [182.0, 465.0], [180.0, 4906.0], [189.0, 10705.0], [188.0, 5412.5], [187.0, 1247.0], [184.0, 10415.0], [195.0, 383.0], [206.0, 675.75], [205.0, 10471.0], [203.0, 1027.5], [202.0, 7152.333333333333], [214.0, 10324.0], [210.0, 379.0], [209.0, 10540.0], [222.0, 5799.5], [221.0, 5112.0], [219.0, 5450.5], [216.0, 10356.5], [231.0, 9937.0], [230.0, 3008.625], [239.0, 9947.0], [238.0, 590.0], [236.0, 10681.0], [232.0, 390.0], [246.0, 497.0], [242.0, 10490.0], [241.0, 10609.0], [240.0, 1392.5], [254.0, 10313.0], [253.0, 10328.0], [252.0, 5176.0], [251.0, 2231.0], [271.0, 5331.5], [270.0, 443.0], [269.0, 427.0], [266.0, 5333.5], [264.0, 4571.0], [260.0, 2354.0], [257.0, 9810.0], [286.0, 3671.0], [284.0, 1953.0], [283.0, 10236.0], [282.0, 5301.5], [280.0, 10204.0], [277.0, 9762.0], [276.0, 409.0], [295.0, 3526.0], [292.0, 5360.5], [291.0, 3490.0], [289.0, 2053.5], [317.0, 3780.0], [316.0, 1196.25], [315.0, 3326.0], [314.0, 10190.0], [313.0, 2675.0], [309.0, 357.0], [306.0, 9612.0], [305.0, 2355.6], [331.0, 3546.0], [330.0, 408.0], [329.0, 10246.0], [328.0, 404.0], [327.0, 413.0], [325.0, 3641.0], [322.0, 5566.5], [350.0, 427.0], [347.0, 4958.0], [344.0, 1774.0], [342.0, 10289.0], [341.0, 413.0], [339.0, 397.0], [338.0, 3668.333333333333], [366.0, 10347.0], [365.0, 10358.0], [364.0, 486.0], [363.0, 555.0], [362.0, 479.0], [358.0, 424.0], [353.0, 442.0], [380.0, 3582.25], [379.0, 403.0], [376.0, 10355.0], [373.0, 3140.75], [371.0, 9421.0], [369.0, 431.0], [398.0, 3311.0], [396.0, 9477.0], [395.0, 10443.0], [394.0, 3695.0], [390.0, 2963.0], [386.0, 10282.0], [385.0, 395.0], [384.0, 5543.5], [415.0, 10412.0], [414.0, 2252.4], [410.0, 10374.0], [401.0, 1542.0], [400.0, 6756.666666666667], [430.0, 10268.0], [426.0, 7069.0], [423.0, 3590.0], [421.0, 1713.0], [420.0, 3716.0], [419.0, 9759.0], [444.0, 9919.0], [443.0, 3333.0], [441.0, 1678.0], [440.0, 3531.0], [439.0, 1974.5], [436.0, 1049.0], [463.0, 4321.8], [453.0, 422.0], [451.0, 5961.5], [449.0, 3804.0], [448.0, 1614.0], [479.0, 10211.0], [478.0, 395.5], [477.0, 3837.0], [474.0, 3851.0], [472.0, 3664.5], [468.0, 1518.0], [466.0, 993.0], [465.0, 2117.5], [495.0, 10433.0], [492.0, 1374.0], [490.0, 496.0], [489.0, 303.0], [487.0, 10411.0], [486.0, 1405.0], [485.0, 5275.0], [484.0, 3865.0], [483.0, 1447.0], [480.0, 413.0], [505.0, 10327.0], [504.0, 627.0], [498.0, 387.0], [541.0, 675.0], [542.0, 312.0], [539.0, 1476.0], [534.0, 420.0], [529.0, 6184.5], [528.0, 10245.0], [524.0, 554.0], [523.0, 3706.0], [517.0, 893.0], [514.0, 10413.5], [551.0, 520.0], [571.0, 10426.0], [567.0, 921.0], [564.0, 3606.0], [559.0, 4033.0], [558.0, 4043.0], [557.0, 508.5], [549.0, 10313.0], [547.0, 322.0], [600.0, 2838.4287619470933], [598.0, 1376.0], [593.0, 971.0]], "isOverall": false, "label": "FindFlights/reserve.php-230", "isController": false}, {"data": [[557.8369371156516, 2874.6466970839147]], "isOverall": false, "label": "FindFlights/reserve.php-230-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 600.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 63912.78333333333, "minX": 1.70618952E12, "maxY": 324053.5833333333, "series": [{"data": [[1.70618958E12, 190230.81666666668], [1.70618952E12, 324053.5833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70618958E12, 63912.78333333333], [1.70618952E12, 107189.98333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70618958E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2339.4935834155935, "minX": 1.70618952E12, "maxY": 3057.8883953359186, "series": [{"data": [[1.70618958E12, 2770.777219430489], [1.70618952E12, 2370.6018322762484]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313", "isController": false}, {"data": [[1.70618958E12, 3057.8883953359186], [1.70618952E12, 2339.4935834155935]], "isOverall": false, "label": "ChooseFlight/purchase.php-237", "isController": false}, {"data": [[1.70618958E12, 3044.6705298013194], [1.70618952E12, 2779.235366986685]], "isOverall": false, "label": "FindFlights/reserve.php-230", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70618958E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2336.903257650545, "minX": 1.70618952E12, "maxY": 3056.268184342034, "series": [{"data": [[1.70618958E12, 2769.0295924064726], [1.70618952E12, 2368.129668780836]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313", "isController": false}, {"data": [[1.70618958E12, 3056.268184342034], [1.70618952E12, 2336.903257650545]], "isOverall": false, "label": "ChooseFlight/purchase.php-237", "isController": false}, {"data": [[1.70618958E12, 3043.889624724067], [1.70618952E12, 2777.9807990089807]], "isOverall": false, "label": "FindFlights/reserve.php-230", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70618958E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70618952E12, "maxY": 423.69309383710146, "series": [{"data": [[1.70618958E12, 0.0], [1.70618952E12, 0.0]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313", "isController": false}, {"data": [[1.70618958E12, 0.0], [1.70618952E12, 0.0]], "isOverall": false, "label": "ChooseFlight/purchase.php-237", "isController": false}, {"data": [[1.70618958E12, 173.96854304635713], [1.70618952E12, 423.69309383710146]], "isOverall": false, "label": "FindFlights/reserve.php-230", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70618958E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 256.0, "minX": 1.70618952E12, "maxY": 16540.0, "series": [{"data": [[1.70618958E12, 10995.0], [1.70618952E12, 16540.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70618958E12, 267.0], [1.70618952E12, 256.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70618958E12, 10134.0], [1.70618952E12, 7287.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70618958E12, 10540.85], [1.70618952E12, 10418.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70618958E12, 984.0], [1.70618952E12, 1965.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70618958E12, 10313.25], [1.70618952E12, 8883.599999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70618958E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 168.0, "minX": 2.0, "maxY": 10403.0, "series": [{"data": [[2.0, 4702.0], [5.0, 6182.0], [6.0, 6775.5], [10.0, 5974.5], [12.0, 6634.0], [13.0, 430.0], [25.0, 832.0], [39.0, 744.0], [44.0, 652.0], [47.0, 514.5], [55.0, 735.0], [58.0, 9119.0], [66.0, 466.0], [68.0, 827.0], [70.0, 8523.0], [74.0, 913.5], [79.0, 685.0], [83.0, 1528.5], [88.0, 487.0], [101.0, 2512.0], [104.0, 1660.0], [118.0, 3349.0], [137.0, 3285.5], [158.0, 3423.5], [181.0, 2250.0], [183.0, 2177.0], [192.0, 2555.5], [198.0, 2626.0], [196.0, 2435.5], [204.0, 2562.0], [207.0, 2061.5], [205.0, 2044.0], [206.0, 866.5], [212.0, 2205.0], [214.0, 2137.0], [210.0, 1364.0], [211.0, 1965.0], [209.0, 1297.5], [208.0, 740.0], [213.0, 846.5], [220.0, 2905.0], [219.0, 2470.0], [216.0, 2491.0], [221.0, 2338.0], [217.0, 1450.0], [222.0, 1457.0], [218.0, 993.0], [223.0, 1437.5], [230.0, 1890.5], [227.0, 1912.0], [231.0, 1884.5], [224.0, 931.0], [229.0, 751.0], [233.0, 1622.0], [237.0, 2047.5], [239.0, 1905.0], [235.0, 1741.0], [234.0, 979.0], [238.0, 865.0], [232.0, 995.0], [241.0, 1859.0], [246.0, 1730.5], [245.0, 674.5], [253.0, 1995.0], [248.0, 604.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 275.0], [25.0, 278.0], [39.0, 168.0], [44.0, 172.0], [47.0, 180.0], [55.0, 311.5], [58.0, 286.5], [66.0, 274.0], [68.0, 291.0], [70.0, 10403.0], [74.0, 232.5], [79.0, 280.0], [83.0, 1518.0], [88.0, 283.0], [101.0, 234.5], [104.0, 373.0], [118.0, 311.0], [137.0, 181.0], [158.0, 177.0], [181.0, 2061.5], [183.0, 274.0], [192.0, 191.5], [198.0, 309.0], [196.0, 190.5], [204.0, 195.0], [207.0, 202.0], [205.0, 256.0], [206.0, 207.5], [212.0, 199.0], [214.0, 228.0], [210.0, 224.0], [211.0, 259.0], [209.0, 256.5], [208.0, 189.0], [213.0, 213.0], [220.0, 456.5], [219.0, 194.0], [216.0, 188.0], [221.0, 197.0], [217.0, 254.0], [222.0, 211.0], [218.0, 209.0], [223.0, 197.5], [230.0, 203.5], [227.0, 219.5], [231.0, 207.0], [224.0, 203.0], [229.0, 273.5], [233.0, 212.0], [237.0, 206.0], [239.0, 249.5], [235.0, 214.0], [234.0, 239.5], [238.0, 293.0], [232.0, 196.0], [241.0, 223.0], [246.0, 246.0], [245.0, 216.0], [253.0, 233.5], [248.0, 194.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 253.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 168.0, "minX": 2.0, "maxY": 10403.0, "series": [{"data": [[2.0, 4702.0], [5.0, 6182.0], [6.0, 6774.5], [10.0, 5973.5], [12.0, 6632.5], [13.0, 430.0], [25.0, 831.5], [39.0, 743.0], [44.0, 652.0], [47.0, 513.0], [55.0, 735.0], [58.0, 9117.0], [66.0, 466.0], [68.0, 826.0], [70.0, 8523.0], [74.0, 913.0], [79.0, 684.0], [83.0, 1528.5], [88.0, 482.0], [101.0, 2510.0], [104.0, 1657.0], [118.0, 3347.0], [137.0, 3285.0], [158.0, 3423.0], [181.0, 2247.0], [183.0, 2169.0], [192.0, 2548.0], [198.0, 2624.0], [196.0, 2435.0], [204.0, 2555.0], [207.0, 2059.0], [205.0, 2040.0], [206.0, 860.0], [212.0, 2205.0], [214.0, 2137.0], [210.0, 1361.0], [211.0, 1963.0], [209.0, 1297.0], [208.0, 740.0], [213.0, 845.5], [220.0, 2891.0], [219.0, 2462.0], [216.0, 2491.0], [221.0, 2332.5], [217.0, 1450.0], [222.0, 1450.5], [218.0, 988.0], [223.0, 1437.0], [230.0, 1885.5], [227.0, 1912.0], [231.0, 1884.5], [224.0, 926.0], [229.0, 751.0], [233.0, 1619.0], [237.0, 2041.5], [239.0, 1905.0], [235.0, 1736.0], [234.0, 979.0], [238.0, 865.0], [232.0, 993.0], [241.0, 1859.0], [246.0, 1727.5], [245.0, 672.5], [253.0, 1992.0], [248.0, 603.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 275.0], [25.0, 278.0], [39.0, 168.0], [44.0, 172.0], [47.0, 180.0], [55.0, 311.5], [58.0, 286.5], [66.0, 274.0], [68.0, 291.0], [70.0, 10403.0], [74.0, 232.5], [79.0, 280.0], [83.0, 1518.0], [88.0, 283.0], [101.0, 234.5], [104.0, 373.0], [118.0, 311.0], [137.0, 181.0], [158.0, 177.0], [181.0, 2061.5], [183.0, 274.0], [192.0, 191.5], [198.0, 309.0], [196.0, 190.5], [204.0, 195.0], [207.0, 202.0], [205.0, 256.0], [206.0, 207.5], [212.0, 199.0], [214.0, 228.0], [210.0, 224.0], [211.0, 259.0], [209.0, 256.5], [208.0, 189.0], [213.0, 213.0], [220.0, 456.5], [219.0, 194.0], [216.0, 188.0], [221.0, 197.0], [217.0, 254.0], [222.0, 211.0], [218.0, 209.0], [223.0, 197.5], [230.0, 203.5], [227.0, 219.5], [231.0, 207.0], [224.0, 203.0], [229.0, 273.5], [233.0, 211.5], [237.0, 206.0], [239.0, 249.5], [235.0, 214.0], [234.0, 239.5], [238.0, 293.0], [232.0, 196.0], [241.0, 223.0], [246.0, 246.0], [245.0, 216.0], [253.0, 233.5], [248.0, 194.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 253.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 80.06666666666666, "minX": 1.70618952E12, "maxY": 161.76666666666668, "series": [{"data": [[1.70618958E12, 80.06666666666666], [1.70618952E12, 161.76666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70618958E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 13.166666666666666, "minX": 1.70618952E12, "maxY": 131.11666666666667, "series": [{"data": [[1.70618958E12, 76.9], [1.70618952E12, 131.11666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70618958E12, 13.166666666666666], [1.70618952E12, 20.65]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70618958E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 4.1, "minX": 1.70618952E12, "maxY": 46.3, "series": [{"data": [[1.70618958E12, 25.766666666666666], [1.70618952E12, 43.916666666666664]], "isOverall": false, "label": "ChooseFlight/purchase.php-237-success", "isController": false}, {"data": [[1.70618958E12, 4.25], [1.70618952E12, 6.733333333333333]], "isOverall": false, "label": "ChooseFlight/purchase.php-237-failure", "isController": false}, {"data": [[1.70618958E12, 4.1], [1.70618952E12, 7.516666666666667]], "isOverall": false, "label": "FindFlights/reserve.php-230-failure", "isController": false}, {"data": [[1.70618958E12, 26.1], [1.70618952E12, 46.3]], "isOverall": false, "label": "FindFlights/reserve.php-230-success", "isController": false}, {"data": [[1.70618958E12, 25.033333333333335], [1.70618952E12, 40.9]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313-success", "isController": false}, {"data": [[1.70618958E12, 4.816666666666666], [1.70618952E12, 6.4]], "isOverall": false, "label": "PuchaseFlight/confirmation.php-313-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70618958E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 13.166666666666666, "minX": 1.70618952E12, "maxY": 131.11666666666667, "series": [{"data": [[1.70618958E12, 76.9], [1.70618952E12, 131.11666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70618958E12, 13.166666666666666], [1.70618952E12, 20.65]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70618958E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

